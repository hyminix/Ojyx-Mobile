# Task ID: 30
# Title: Profil joueur avec statistiques et historique parties
# Status: pending
# Dependencies: 24, 29
# Priority: low
# Description: Interface profil avec pseudo, avatar, stats victoires, scores moyens, historique complet
# Details:
Créer ProfileScreen avec sections: User Info (pseudo, avatar), Statistics (games played, win rate, average score, best score), History (dernières 20 parties avec détails). Utiliser Supabase profiles table + cache local SQLite. Charts avec fl_chart: ^0.69.0 pour visualisation stats. Code: class PlayerProfile avec fields nickname, avatarUrl, totalGames, winRate, averageScore, recentGames. ProfileRepository pour data management

# Test Strategy:
Vérifier calcul stats précis, tester cache local, valider affichage historique, confirmer modification pseudo/avatar, vérifier charts lisibles

# Subtasks:
## 1. Créer la structure de base ProfileScreen avec navigation [pending]
### Dependencies: None
### Description: Implémenter l'écran profil avec AppBar personnalisée et structure de base des sections
### Details:
Créer ProfileScreen extends ConsumerWidget dans lib/features/profile/presentation/screens/. AppBar avec titre 'Mon Profil' et bouton retour. Scaffold avec SingleChildScrollView contenant Column pour les futures sections. Ajouter route dans router_config.dart: GoRoute(path: '/profile', builder: (context, state) => const ProfileScreen()). Intégrer navigation depuis HomeScreen avec ListTile ou bouton profil

## 2. Implémenter section User Info avec avatar et pseudo modifiables [pending]
### Dependencies: 30.1
### Description: Créer la section supérieure du profil avec avatar cliquable et pseudo éditable
### Details:
Créer UserInfoWidget dans widgets/. CircleAvatar de 100px avec placeholder si pas d'image. GestureDetector sur avatar pour future sélection image. TextField pour pseudo avec IconButton edit, validation max 20 caractères. Design: Card avec padding 16px, Row pour avatar à gauche et infos à droite. Provider: userProfileProvider pour gérer état local. Intégration future avec Supabase profiles table

## 3. Développer section Statistics avec calculs et affichage des données [pending]
### Dependencies: 30.1
### Description: Créer widgets pour afficher statistiques de jeu avec calculs temps réel
### Details:
Créer StatisticsWidget avec GridView 2 colonnes pour stats: Total parties, Taux victoire %, Score moyen, Meilleur score. Chaque stat dans Card avec Icon, titre et valeur. Calculer stats depuis gameHistoryProvider qui récupère données Supabase. Design Material3 avec couleurs thématiques. Format: winRate en pourcentage avec 1 décimale, scores arrondis. Placeholder '---' si aucune partie jouée

## 4. Créer section History avec liste scrollable des parties récentes [pending]
### Dependencies: 30.1, 30.3
### Description: Implémenter historique des 20 dernières parties avec détails expandables
### Details:
Créer GameHistoryWidget avec ListView.builder limité à 20 items. Chaque partie dans ListTile avec: date formatée, score final, position/nombre joueurs, durée partie. ExpansionTile pour détails: adversaires avec scores, cartes actions utilisées. Utiliser timeago package pour affichage relatif dates. Pagination future si plus de 20 parties. Empty state avec illustration si aucune partie

## 5. Intégrer graphiques statistiques avec fl_chart [pending]
### Dependencies: 30.3, 30.4
### Description: Ajouter visualisations graphiques pour évolution scores et performances
### Details:
Ajouter fl_chart: ^0.69.0 dans pubspec.yaml. Créer ChartsWidget avec 2 graphiques: LineChart pour évolution score moyen sur 10 dernières parties, PieChart pour répartition victoires/défaites. Couleurs cohérentes avec thème app. Animations smooth sur apparition. Légendes et tooltips informatifs. Graphiques responsive avec AspectRatio. Toggle pour afficher/masquer charts si utilisateur préfère vue simple

