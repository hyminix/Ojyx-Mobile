# Task ID: 26
# Title: Tutoriel interactif step-by-step pour nouveaux joueurs
# Status: pending
# Dependencies: 22, 24
# Priority: medium
# Description: Créer guide interactif expliquant les mécaniques de base d'Ojyx avec progression sauvegardée
# Details:
Créer TutorialScreen avec étapes: 1) Présentation grille, 2) Révélation première carte, 3) Pioche et défausse, 4) Cartes actions basiques, 5) Objectif colonnes, 6) Fin de partie. Utiliser PageView avec indicateur progression, animations guidées avec AnimatedContainer, tooltips contextuels. Sauvegarder progression avec TutorialProgress model. Code: PageController pour navigation, TutorialStep widgets custom, OverlayEntry pour tooltips pointant éléments UI

# Test Strategy:
Vérifier compréhension étapes, tester sauvegarde progression, valider skipping possible, confirmer tooltips bien positionnés

# Subtasks:
## 1. Créer la structure de base du tutoriel et le modèle de progression [pending]
### Dependencies: None
### Description: Mettre en place l'architecture du système de tutoriel avec gestion de la progression sauvegardée
### Details:
Créer TutorialProgress entity dans domain/entities avec champs: currentStep, completedSteps, skipped, startedAt. Implémenter TutorialRepository interface et TutorialRepositoryImpl avec SharedPreferences pour persistance locale. Créer TutorialScreen base avec PageView et PageController. Ajouter TutorialProvider avec Riverpod pour gérer l'état global du tutoriel. Structure: features/tutorial/domain/, features/tutorial/data/, features/tutorial/presentation/

## 2. Implémenter les étapes 1-3 du tutoriel (Grille, Révélation, Pioche) [pending]
### Dependencies: 26.1
### Description: Créer les trois premières étapes interactives du tutoriel avec animations et guidage visuel
### Details:
Étape 1: GridIntroductionStep avec animation zoom sur grille 3x4, explication disposition cartes face cachée. Étape 2: CardRevealStep avec guidage doigt animé (AnimatedPositioned), forcer clic sur carte spécifique, afficher valeur et explication scoring. Étape 3: DrawDiscardStep avec mise en évidence zones pioche/défausse (AnimatedContainer avec glow effect), simulation d'un tour complet. Utiliser OverlayEntry pour flèches directionnelles et bulles explicatives positionnées dynamiquement

## 3. Implémenter les étapes 4-6 du tutoriel (Actions, Colonnes, Fin) [pending]
### Dependencies: 26.2
### Description: Créer les trois dernières étapes couvrant les mécaniques avancées et conditions de victoire
### Details:
Étape 4: ActionCardsStep présenter 3 cartes actions basiques (Révéler, Échanger, Voler), animations d'utilisation avec effets visuels. Étape 5: ColumnObjectiveStep démontrer mécanisme 3 cartes identiques = colonne à 0 points, animation de défausse colonne. Étape 6: EndGameStep expliquer déclenchement fin (12ème carte révélée), calcul score final, pénalité double. Chaque étape avec TutorialStepWidget custom héritant base commune, indicateurs de progression (dots) en bas

## 4. Créer le système de tooltips contextuels avec détection intelligente [pending]
### Dependencies: 26.3
### Description: Implémenter service de hints adaptatifs basés sur le contexte de jeu et l'historique du joueur
### Details:
Créer TooltipService singleton avec logique de détection: analyser GameState pour identifier moments clés (première carte à révéler, colonne complétable, carte action disponible). Implémenter TooltipOverlay widget réutilisable avec positionnement automatique via RenderBox. Conditions d'affichage: isFirstGame && !tutorialCompleted && specificContext. Tooltips prédéfinis: 'Tapez une carte pour la révéler', 'Cette colonne peut être défaussée!', 'Glissez pour utiliser cette carte action'. Fade in/out avec AnimationController, dismissible par tap

## 5. Intégrer navigation tutoriel et options de personnalisation [pending]
### Dependencies: 26.4
### Description: Finaliser l'expérience tutoriel avec navigation fluide et paramètres utilisateur
### Details:
Ajouter TutorialNavigationBar avec boutons Précédent/Suivant/Passer, progression visuelle (LinearProgressIndicator animé). Implémenter skip confirmation dialog pour éviter sorties accidentelles. Créer TutorialSettingsScreen pour options: vitesse animations, taille texte, réinitialiser progression. Intégrer démarrage tutoriel depuis HomeScreen avec bouton prominent pour nouveaux joueurs (détection via SharedPreferences). Transition smooth vers mode Practice après complétion avec CTA 'Essayer contre l'IA'

