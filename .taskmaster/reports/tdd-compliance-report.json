{
  "timestamp": "2025-07-27T09:10:23.976937",
  "summary": {
    "totalFiles": 139,
    "totalTests": 956,
    "totalGroups": 299,
    "compliantFiles": 1,
    "overallCompliance": 0.7194244604316548,
    "errorCount": 23,
    "warningCount": 935,
    "infoCount": 1473
  },
  "fileStats": {
    "build_runner_comparison_test.dart": {
      "groupCount": 1,
      "testCount": 1,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "build_runner_test.dart": {
      "groupCount": 2,
      "testCount": 6,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 6,
      "missingAAA": 6,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 1,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "core/config/app_initializer_test.dart": {
      "groupCount": 5,
      "testCount": 11,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 11,
      "missingAAA": 11,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 18,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "core/config/env_config_test.dart": {
      "groupCount": 1,
      "testCount": 4,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 4,
      "missingAAA": 4,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 5,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "core/errors/failures_test.dart": {
      "groupCount": 1,
      "testCount": 2,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 2,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 25,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "core/errors/supabase_error_handling_test.dart": {
      "groupCount": 5,
      "testCount": 15,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 15,
      "missingAAA": 15,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 27,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "core/services/deep_link_service_test.dart": {
      "groupCount": 8,
      "testCount": 17,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 17,
      "missingAAA": 17,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 34,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "core/services/sentry_service_test.dart": {
      "groupCount": 11,
      "testCount": 22,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 22,
      "missingAAA": 22,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 24,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "core/services/storage_service_test.dart": {
      "groupCount": 10,
      "testCount": 24,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 24,
      "missingAAA": 24,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 52,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "core/usecases/usecase_test.dart": {
      "groupCount": 3,
      "testCount": 5,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 5,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 9,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "core/utils/extensions_test.dart": {
      "groupCount": 2,
      "testCount": 5,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 5,
      "missingAAA": 5,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "core/utils/resilient_supabase_service_test.dart": {
      "groupCount": 5,
      "testCount": 15,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 15,
      "missingAAA": 15,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 26,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/auth/presentation/providers/auth_provider_test.dart": {
      "groupCount": 2,
      "testCount": 8,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 8,
      "missingAAA": 0,
      "testsWithoutAssertions": 1,
      "assertionsWithoutReasons": 7,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/end_game/domain/entities/end_game_state_test.dart": {
      "groupCount": 1,
      "testCount": 11,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 11,
      "missingAAA": 11,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 28,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/end_game/presentation/integration/save_global_score_integration_test.dart": {
      "groupCount": 1,
      "testCount": 4,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 4,
      "missingAAA": 0,
      "testsWithoutAssertions": 2,
      "assertionsWithoutReasons": 4,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/end_game/presentation/providers/end_game_provider_test.dart": {
      "groupCount": 1,
      "testCount": 6,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 6,
      "missingAAA": 6,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 11,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/end_game/presentation/screens/end_game_screen_test.dart": {
      "groupCount": 1,
      "testCount": 8,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 8,
      "missingAAA": 8,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 22,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/end_game/presentation/widgets/player_score_card_test.dart": {
      "groupCount": 3,
      "testCount": 15,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 15,
      "missingAAA": 15,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 25,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/end_game/presentation/widgets/vote_section_test.dart": {
      "groupCount": 1,
      "testCount": 8,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 8,
      "missingAAA": 8,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 19,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/end_game/presentation/widgets/winner_announcement_test.dart": {
      "groupCount": 1,
      "testCount": 5,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 5,
      "missingAAA": 5,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 13,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/data/datasources/action_card_local_datasource_impl_test.dart": {
      "groupCount": 1,
      "testCount": 12,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 12,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 22,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/data/datasources/action_card_local_datasource_test.dart": {
      "groupCount": 1,
      "testCount": 11,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 11,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 12,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/data/datasources/game_state_datasource_test.dart": {
      "groupCount": 1,
      "testCount": 5,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 5,
      "missingAAA": 5,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 11,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/data/datasources/supabase_action_card_datasource_test.dart": {
      "groupCount": 2,
      "testCount": 2,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 2,
      "missingAAA": 2,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 4,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/data/models/db_player_grid_model_test.dart": {
      "groupCount": 1,
      "testCount": 4,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 4,
      "missingAAA": 4,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 40,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/data/models/game_state_model_mapping_test.dart": {
      "groupCount": 1,
      "testCount": 3,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 3,
      "missingAAA": 2,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 39,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/data/models/game_state_model_test.dart": {
      "groupCount": 1,
      "testCount": 2,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 2,
      "missingAAA": 2,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/data/models/player_grid_model_test.dart": {
      "groupCount": 1,
      "testCount": 3,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 3,
      "missingAAA": 3,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 12,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/data/repositories/action_card_repository_impl_test.dart": {
      "groupCount": 1,
      "testCount": 10,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 10,
      "missingAAA": 0,
      "testsWithoutAssertions": 4,
      "assertionsWithoutReasons": 13,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/data/repositories/server_action_card_repository_test.dart": {
      "groupCount": 3,
      "testCount": 7,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 7,
      "missingAAA": 7,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 32,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/data/repositories/supabase_action_card_repository_test.dart": {
      "groupCount": 1,
      "testCount": 3,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 3,
      "missingAAA": 3,
      "testsWithoutAssertions": 1,
      "assertionsWithoutReasons": 7,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/entities/action_card_test.dart": {
      "groupCount": 2,
      "testCount": 4,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 4,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 19,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/entities/card_position_test.dart": {
      "groupCount": 1,
      "testCount": 4,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 4,
      "missingAAA": 4,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/entities/card_test.dart": {
      "groupCount": 6,
      "testCount": 14,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 3,
      "isCompliant": false,
      "complianceScore": 92.85714285714286
    },
    "features/game/domain/entities/deck_state_test.dart": {
      "groupCount": 1,
      "testCount": 6,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 6,
      "missingAAA": 3,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 8,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/entities/game_player_test.dart": {
      "groupCount": 1,
      "testCount": 4,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 4,
      "missingAAA": 4,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/entities/game_state_test.dart": {
      "groupCount": 1,
      "testCount": 15,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 15,
      "missingAAA": 15,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 45,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/entities/player_grid_test.dart": {
      "groupCount": 1,
      "testCount": 6,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 6,
      "missingAAA": 6,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 1,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/entities/player_state_test.dart": {
      "groupCount": 1,
      "testCount": 4,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 4,
      "missingAAA": 4,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/use_cases/calculate_scores_test.dart": {
      "groupCount": 5,
      "testCount": 9,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 88.88888888888889
    },
    "features/game/domain/use_cases/check_end_round_test.dart": {
      "groupCount": 1,
      "testCount": 6,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 6,
      "missingAAA": 3,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 24,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/use_cases/discard_card_test.dart": {
      "groupCount": 1,
      "testCount": 8,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 8,
      "missingAAA": 8,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 33,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/use_cases/distribute_cards_test.dart": {
      "groupCount": 1,
      "testCount": 5,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 5,
      "missingAAA": 5,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 9,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/use_cases/draw_action_card_use_case_test.dart": {
      "groupCount": 1,
      "testCount": 1,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 14,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/use_cases/draw_card_test.dart": {
      "groupCount": 1,
      "testCount": 4,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 4,
      "missingAAA": 4,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 28,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/use_cases/end_turn_test.dart": {
      "groupCount": 1,
      "testCount": 2,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 2,
      "missingAAA": 2,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 7,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/use_cases/game_initialization_use_case_test.dart": {
      "groupCount": 1,
      "testCount": 7,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 7,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 7,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/use_cases/process_last_round_test.dart": {
      "groupCount": 1,
      "testCount": 1,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 4,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/use_cases/reveal_initial_cards_test.dart": {
      "groupCount": 1,
      "testCount": 1,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/use_cases/start_game_test.dart": {
      "groupCount": 1,
      "testCount": 1,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 2,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/domain/use_cases/use_action_card_use_case_test.dart": {
      "groupCount": 1,
      "testCount": 1,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/draw_discard_integration_test.dart": {
      "groupCount": 1,
      "testCount": 5,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 5,
      "missingAAA": 0,
      "testsWithoutAssertions": 2,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/integration/selectors_integration_test.dart": {
      "groupCount": 1,
      "testCount": 6,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 6,
      "missingAAA": 6,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 22,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/providers/action_card_providers_test.dart": {
      "groupCount": 1,
      "testCount": 5,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 5,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 13,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/providers/direction_observer_provider_test.dart": {
      "groupCount": 1,
      "testCount": 2,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 2,
      "missingAAA": 2,
      "testsWithoutAssertions": 2,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/providers/game_animation_provider_test.dart": {
      "groupCount": 1,
      "testCount": 2,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 2,
      "missingAAA": 2,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/providers/game_state_notifier_test.dart": {
      "groupCount": 2,
      "testCount": 8,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 8,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 19,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/screens/game_screen_test.dart": {
      "groupCount": 2,
      "testCount": 15,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 15,
      "missingAAA": 4,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 23,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/spectator_view_integration_test.dart": {
      "groupCount": 1,
      "testCount": 6,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 6,
      "missingAAA": 6,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 3,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/action_card_draw_pile_widget_test.dart": {
      "groupCount": 1,
      "testCount": 5,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 5,
      "missingAAA": 5,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/action_card_hand_widget_test.dart": {
      "groupCount": 1,
      "testCount": 7,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 7,
      "missingAAA": 7,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/action_card_widget_test.dart": {
      "groupCount": 1,
      "testCount": 8,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 8,
      "missingAAA": 2,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 9,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/card_animation_widget_test.dart": {
      "groupCount": 1,
      "testCount": 5,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 5,
      "missingAAA": 5,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/card_widget_test.dart": {
      "groupCount": 1,
      "testCount": 10,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 10,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 17,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/common_area_widget_test.dart": {
      "groupCount": 1,
      "testCount": 7,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 7,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 15,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/deck_and_discard_widget_test.dart": {
      "groupCount": 1,
      "testCount": 6,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 6,
      "missingAAA": 6,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/discard_pile_widget_test.dart": {
      "groupCount": 1,
      "testCount": 5,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 5,
      "missingAAA": 5,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/draw_pile_widget_test.dart": {
      "groupCount": 1,
      "testCount": 7,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 7,
      "missingAAA": 7,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 2,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/game_animation_overlay_test.dart": {
      "groupCount": 1,
      "testCount": 6,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 6,
      "missingAAA": 6,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/game_selection_overlay_test.dart": {
      "groupCount": 1,
      "testCount": 11,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 11,
      "missingAAA": 11,
      "testsWithoutAssertions": 2,
      "assertionsWithoutReasons": 18,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/opponents_view_widget_test.dart": {
      "groupCount": 2,
      "testCount": 13,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 13,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 22,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/opponent_grid_widget_test.dart": {
      "groupCount": 1,
      "testCount": 11,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 11,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 27,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/player_grid_selection_simple_test.dart": {
      "groupCount": 1,
      "testCount": 6,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 6,
      "missingAAA": 6,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 18,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/player_grid_selection_test.dart": {
      "groupCount": 1,
      "testCount": 4,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 4,
      "missingAAA": 4,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 8,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/player_grid_widget_test.dart": {
      "groupCount": 1,
      "testCount": 11,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 11,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 19,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/player_hand_widget_test.dart": {
      "groupCount": 1,
      "testCount": 4,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 4,
      "missingAAA": 4,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/turn_info_widget_test.dart": {
      "groupCount": 1,
      "testCount": 8,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 8,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 11,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/game/presentation/widgets/visual_feedback_widget_test.dart": {
      "groupCount": 1,
      "testCount": 11,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 11,
      "missingAAA": 11,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 16,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/global_scores/data/datasources/global_score_remote_datasource_test.dart": {
      "groupCount": 7,
      "testCount": 8,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 8,
      "missingAAA": 8,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 13,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/global_scores/data/models/global_score_model_test.dart": {
      "groupCount": 8,
      "testCount": 15,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 15,
      "missingAAA": 15,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 75,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/global_scores/data/repositories/supabase_global_score_repository_test.dart": {
      "groupCount": 8,
      "testCount": 12,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 12,
      "missingAAA": 12,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 23,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/global_scores/domain/entities/global_score_test.dart": {
      "groupCount": 2,
      "testCount": 9,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 9,
      "missingAAA": 9,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 60,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/global_scores/domain/repositories/global_score_repository_test.dart": {
      "groupCount": 10,
      "testCount": 17,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 17,
      "missingAAA": 17,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 27,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/global_scores/domain/use_cases/get_player_stats_test.dart": {
      "groupCount": 1,
      "testCount": 5,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 5,
      "missingAAA": 5,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 15,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/global_scores/domain/use_cases/get_top_players_test.dart": {
      "groupCount": 1,
      "testCount": 6,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 6,
      "missingAAA": 6,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 17,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/global_scores/domain/use_cases/save_global_score_test.dart": {
      "groupCount": 1,
      "testCount": 6,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 6,
      "missingAAA": 6,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 21,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/global_scores/presentation/providers/global_score_providers_test.dart": {
      "groupCount": 6,
      "testCount": 12,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 12,
      "missingAAA": 12,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 14,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/global_scores/presentation/screens/game_history_screen_test.dart": {
      "groupCount": 1,
      "testCount": 10,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 10,
      "missingAAA": 10,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 26,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/global_scores/presentation/screens/leaderboard_screen_test.dart": {
      "groupCount": 1,
      "testCount": 9,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 9,
      "missingAAA": 9,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 26,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/home/presentation/navigation_integration_test.dart": {
      "groupCount": 1,
      "testCount": 2,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 2,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 3,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/home/presentation/screens/home_screen_test.dart": {
      "groupCount": 1,
      "testCount": 8,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 8,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 17,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/multiplayer/data/converters/game_state_converter_test.dart": {
      "groupCount": 1,
      "testCount": 2,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 2,
      "missingAAA": 2,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/multiplayer/data/datasources/supabase_player_datasource_test.dart": {
      "groupCount": 1,
      "testCount": 2,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 2,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/multiplayer/data/datasources/supabase_room_datasource_impl_test.dart": {
      "groupCount": 1,
      "testCount": 1,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/multiplayer/data/models/player_model_test.dart": {
      "groupCount": 1,
      "testCount": 0,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 0,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": true,
      "complianceScore": 100.0
    },
    "features/multiplayer/data/models/room_model_test.dart": {
      "groupCount": 1,
      "testCount": 3,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 3,
      "missingAAA": 3,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/multiplayer/data/repositories/room_repository_impl_test.dart": {
      "groupCount": 1,
      "testCount": 6,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 6,
      "missingAAA": 6,
      "testsWithoutAssertions": 3,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/multiplayer/domain/entities/room_event_test.dart": {
      "groupCount": 1,
      "testCount": 2,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 2,
      "missingAAA": 2,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/multiplayer/domain/entities/room_test.dart": {
      "groupCount": 1,
      "testCount": 2,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 2,
      "missingAAA": 2,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/multiplayer/domain/use_cases/create_room_use_case_test.dart": {
      "groupCount": 1,
      "testCount": 2,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 2,
      "missingAAA": 2,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/multiplayer/domain/use_cases/join_room_use_case_test.dart": {
      "groupCount": 2,
      "testCount": 4,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 4,
      "missingAAA": 4,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart": {
      "groupCount": 1,
      "testCount": 3,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 3,
      "missingAAA": 3,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 7,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/multiplayer/presentation/screens/create_room_screen_test.dart": {
      "groupCount": 2,
      "testCount": 4,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 4,
      "missingAAA": 4,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 1,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/multiplayer/presentation/screens/join_room_screen_test.dart": {
      "groupCount": 3,
      "testCount": 9,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 9,
      "missingAAA": 8,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/multiplayer/presentation/screens/room_lobby_screen_test.dart": {
      "groupCount": 5,
      "testCount": 11,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 11,
      "missingAAA": 11,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "features/multiplayer/simple_integration_test.dart": {
      "groupCount": 1,
      "testCount": 5,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 5,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 17,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "freezed_comparison_test.dart": {
      "groupCount": 1,
      "testCount": 1,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "freezed_immutability_test.dart": {
      "groupCount": 1,
      "testCount": 5,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 5,
      "missingAAA": 5,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 13,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "freezed_models_test.dart": {
      "groupCount": 5,
      "testCount": 12,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 12,
      "missingAAA": 12,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 27,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "freezed_snapshot_test.dart": {
      "groupCount": 1,
      "testCount": 1,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 2,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "helpers/freezed_test_utils_test.dart": {
      "groupCount": 6,
      "testCount": 14,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 14,
      "missingAAA": 0,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 37,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "integration/app_initialization_test.dart": {
      "groupCount": 1,
      "testCount": 8,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 8,
      "missingAAA": 8,
      "testsWithoutAssertions": 1,
      "assertionsWithoutReasons": 10,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "integration/backend_snapshot_test.dart": {
      "groupCount": 5,
      "testCount": 11,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 11,
      "missingAAA": 11,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 18,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "integration/database_functions_integration_test.dart": {
      "groupCount": 7,
      "testCount": 13,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 13,
      "missingAAA": 13,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 25,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "integration/deep_links_test.dart": {
      "groupCount": 1,
      "testCount": 4,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 4,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 5,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "integration/end_to_end_game_experience_test.dart": {
      "groupCount": 6,
      "testCount": 12,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 12,
      "missingAAA": 12,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 15,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "integration/full_integration_test.dart": {
      "groupCount": 1,
      "testCount": 3,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 3,
      "missingAAA": 3,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 15,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "integration/performance_reconnection_test.dart": {
      "groupCount": 4,
      "testCount": 12,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 12,
      "missingAAA": 12,
      "testsWithoutAssertions": 1,
      "assertionsWithoutReasons": 8,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "integration/realtime_websocket_test.dart": {
      "groupCount": 1,
      "testCount": 8,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 8,
      "missingAAA": 8,
      "testsWithoutAssertions": 1,
      "assertionsWithoutReasons": 10,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "integration/simple_integration_test.dart": {
      "groupCount": 1,
      "testCount": 8,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 8,
      "missingAAA": 8,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 22,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "integration/state_management_navigation_test.dart": {
      "groupCount": 1,
      "testCount": 1,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 1,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "integration/supabase_auth_flow_test.dart": {
      "groupCount": 1,
      "testCount": 8,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 8,
      "missingAAA": 8,
      "testsWithoutAssertions": 1,
      "assertionsWithoutReasons": 11,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "integration/task_3_validation_test.dart": {
      "groupCount": 5,
      "testCount": 7,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 7,
      "missingAAA": 7,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 15,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "json_serializable_comparison_test.dart": {
      "groupCount": 1,
      "testCount": 1,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "json_serializable_snapshot_test.dart": {
      "groupCount": 1,
      "testCount": 1,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 2,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "json_serialization_test.dart": {
      "groupCount": 7,
      "testCount": 11,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 11,
      "missingAAA": 11,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 30,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "migration/linting_comparison_test.dart": {
      "groupCount": 1,
      "testCount": 1,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 1,
      "missingAAA": 1,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 2,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "migration/linting_final_test.dart": {
      "groupCount": 1,
      "testCount": 3,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 3,
      "missingAAA": 3,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 2,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "migration/linting_test.dart": {
      "groupCount": 1,
      "testCount": 2,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 2,
      "missingAAA": 2,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 3,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "migration/sdk_compatibility_test.dart": {
      "groupCount": 1,
      "testCount": 3,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 3,
      "missingAAA": 3,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 0,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "navigation/go_router_audit_test.dart": {
      "groupCount": 7,
      "testCount": 18,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 18,
      "missingAAA": 18,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 21,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "navigation/router_config_test.dart": {
      "groupCount": 3,
      "testCount": 10,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 10,
      "missingAAA": 9,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 13,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "navigation/router_with_guards_test.dart": {
      "groupCount": 2,
      "testCount": 4,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 4,
      "missingAAA": 4,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 6,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "providers/action_card_providers_test.dart": {
      "groupCount": 3,
      "testCount": 10,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 10,
      "missingAAA": 10,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 17,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "providers/action_card_state_provider_test.dart": {
      "groupCount": 1,
      "testCount": 10,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 10,
      "missingAAA": 10,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 25,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "providers/card_selection_provider_test.dart": {
      "groupCount": 9,
      "testCount": 16,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 16,
      "missingAAA": 16,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 59,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "providers/game_animation_provider_test.dart": {
      "groupCount": 1,
      "testCount": 6,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 6,
      "missingAAA": 6,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 17,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "providers/supabase_provider_test.dart": {
      "groupCount": 1,
      "testCount": 3,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 3,
      "missingAAA": 3,
      "testsWithoutAssertions": 0,
      "assertionsWithoutReasons": 6,
      "isCompliant": false,
      "complianceScore": 0.0
    },
    "providers_audit_test.dart": {
      "groupCount": 1,
      "testCount": 3,
      "skippedTests": 0,
      "commentedTests": 0,
      "nonCompliantNaming": 3,
      "missingAAA": 3,
      "testsWithoutAssertions": 2,
      "assertionsWithoutReasons": 1,
      "isCompliant": false,
      "complianceScore": 0.0
    }
  },
  "issues": [
    {
      "file": "build_runner_comparison_test.dart",
      "line": 8,
      "type": "IssueType.namingConvention",
      "message": "Test \"should compare generated files with snapshot\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "build_runner_comparison_test.dart",
      "line": 8,
      "type": "IssueType.missingStructure",
      "message": "Test \"should compare generated files with snapshot\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "build_runner_test.dart",
      "line": 32,
      "type": "IssueType.namingConvention",
      "message": "Test \"should find generated files\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "build_runner_test.dart",
      "line": 32,
      "type": "IssueType.missingStructure",
      "message": "Test \"should find generated files\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "build_runner_test.dart",
      "line": 40,
      "type": "IssueType.namingConvention",
      "message": "Test \"should find freezed files\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "build_runner_test.dart",
      "line": 40,
      "type": "IssueType.missingStructure",
      "message": "Test \"should find freezed files\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "build_runner_test.dart",
      "line": 51,
      "type": "IssueType.namingConvention",
      "message": "Test \"should find json_serializable files\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "build_runner_test.dart",
      "line": 51,
      "type": "IssueType.missingStructure",
      "message": "Test \"should find json_serializable files\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "build_runner_test.dart",
      "line": 62,
      "type": "IssueType.namingConvention",
      "message": "Test \"generated files should be valid dart\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "build_runner_test.dart",
      "line": 62,
      "type": "IssueType.missingStructure",
      "message": "Test \"generated files should be valid dart\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "build_runner_test.dart",
      "line": 77,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create snapshot of generated files\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "build_runner_test.dart",
      "line": 77,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create snapshot of generated files\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "build_runner_test.dart",
      "line": 77,
      "type": "IssueType.missingReason",
      "message": "Test \"should create snapshot of generated files\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "build_runner_test.dart",
      "line": 95,
      "type": "IssueType.namingConvention",
      "message": "Test \"all models with .g.dart should have corresponding .freezed.dart\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "build_runner_test.dart",
      "line": 95,
      "type": "IssueType.missingStructure",
      "message": "Test \"all models with .g.dart should have corresponding .freezed.dart\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 34,
      "type": "IssueType.namingConvention",
      "message": "Test \"should load environment variables successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 34,
      "type": "IssueType.missingStructure",
      "message": "Test \"should load environment variables successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 34,
      "type": "IssueType.missingReason",
      "message": "Test \"should load environment variables successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 44,
      "type": "IssueType.namingConvention",
      "message": "Test \"should validate required environment variables\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 44,
      "type": "IssueType.missingStructure",
      "message": "Test \"should validate required environment variables\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 44,
      "type": "IssueType.missingReason",
      "message": "Test \"should validate required environment variables\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 65,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle missing .env file in debug mode gracefully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 65,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle missing .env file in debug mode gracefully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 65,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle missing .env file in debug mode gracefully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 76,
      "type": "IssueType.namingConvention",
      "message": "Test \"should initialize Supabase with correct auth options\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 76,
      "type": "IssueType.missingStructure",
      "message": "Test \"should initialize Supabase with correct auth options\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 76,
      "type": "IssueType.missingReason",
      "message": "Test \"should initialize Supabase with correct auth options\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 87,
      "type": "IssueType.namingConvention",
      "message": "Test \"should configure Realtime client options\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 87,
      "type": "IssueType.missingStructure",
      "message": "Test \"should configure Realtime client options\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 87,
      "type": "IssueType.missingReason",
      "message": "Test \"should configure Realtime client options\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 98,
      "type": "IssueType.namingConvention",
      "message": "Test \"should configure Storage client options\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 98,
      "type": "IssueType.missingStructure",
      "message": "Test \"should configure Storage client options\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 98,
      "type": "IssueType.missingReason",
      "message": "Test \"should configure Storage client options\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 107,
      "type": "IssueType.namingConvention",
      "message": "Test \"should calculate correct traces sample rate by environment\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 107,
      "type": "IssueType.missingStructure",
      "message": "Test \"should calculate correct traces sample rate by environment\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 136,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable screenshot attachment based on env variable\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 136,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable screenshot attachment based on env variable\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 136,
      "type": "IssueType.missingReason",
      "message": "Test \"should enable screenshot attachment based on env variable\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 150,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get correct environment\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 150,
      "type": "IssueType.missingStructure",
      "message": "Test \"should get correct environment\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 150,
      "type": "IssueType.missingReason",
      "message": "Test \"should get correct environment\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 165,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle dart-define fallback correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 165,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle dart-define fallback correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 165,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle dart-define fallback correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 179,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle initialization errors gracefully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 179,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle initialization errors gracefully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/app_initializer_test.dart",
      "line": 179,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle initialization errors gracefully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/env_config_test.dart",
      "line": 6,
      "type": "IssueType.namingConvention",
      "message": "Test \"should throw exception when required configuration is missing\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/env_config_test.dart",
      "line": 6,
      "type": "IssueType.missingStructure",
      "message": "Test \"should throw exception when required configuration is missing\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/env_config_test.dart",
      "line": 6,
      "type": "IssueType.missingReason",
      "message": "Test \"should throw exception when required configuration is missing\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/env_config_test.dart",
      "line": 12,
      "type": "IssueType.namingConvention",
      "message": "Test \"should correctly identify environment\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/env_config_test.dart",
      "line": 12,
      "type": "IssueType.missingStructure",
      "message": "Test \"should correctly identify environment\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/env_config_test.dart",
      "line": 12,
      "type": "IssueType.missingReason",
      "message": "Test \"should correctly identify environment\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/env_config_test.dart",
      "line": 18,
      "type": "IssueType.namingConvention",
      "message": "Test \"should fail validation with specific error message when SUPABASE_URL is missing\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/env_config_test.dart",
      "line": 18,
      "type": "IssueType.missingStructure",
      "message": "Test \"should fail validation with specific error message when SUPABASE_URL is missing\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/env_config_test.dart",
      "line": 18,
      "type": "IssueType.missingReason",
      "message": "Test \"should fail validation with specific error message when SUPABASE_URL is missing\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/env_config_test.dart",
      "line": 36,
      "type": "IssueType.namingConvention",
      "message": "Test \"should validate in order of priority\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/config/env_config_test.dart",
      "line": 36,
      "type": "IssueType.missingStructure",
      "message": "Test \"should validate in order of priority\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/config/env_config_test.dart",
      "line": 36,
      "type": "IssueType.missingReason",
      "message": "Test \"should validate in order of priority\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/failures_test.dart",
      "line": 6,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create all Failure types correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/failures_test.dart",
      "line": 6,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create all Failure types correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/failures_test.dart",
      "line": 6,
      "type": "IssueType.missingReason",
      "message": "Test \"should create all Failure types correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/failures_test.dart",
      "line": 108,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support equality\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/failures_test.dart",
      "line": 108,
      "type": "IssueType.missingReason",
      "message": "Test \"should support equality\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 8,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return user-friendly message for common error codes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 8,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return user-friendly message for common error codes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 8,
      "type": "IssueType.missingReason",
      "message": "Test \"should return user-friendly message for common error codes\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 35,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return default message for unknown error codes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 35,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return default message for unknown error codes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 35,
      "type": "IssueType.missingReason",
      "message": "Test \"should return default message for unknown error codes\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 47,
      "type": "IssueType.namingConvention",
      "message": "Test \"should identify retriable errors correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 47,
      "type": "IssueType.missingStructure",
      "message": "Test \"should identify retriable errors correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 70,
      "type": "IssueType.namingConvention",
      "message": "Test \"should identify permission errors\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 70,
      "type": "IssueType.missingStructure",
      "message": "Test \"should identify permission errors\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 70,
      "type": "IssueType.missingReason",
      "message": "Test \"should identify permission errors\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 81,
      "type": "IssueType.namingConvention",
      "message": "Test \"should identify not found errors\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 81,
      "type": "IssueType.missingStructure",
      "message": "Test \"should identify not found errors\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 81,
      "type": "IssueType.missingReason",
      "message": "Test \"should identify not found errors\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 95,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return user-friendly messages for common auth errors\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 95,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return user-friendly messages for common auth errors\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 95,
      "type": "IssueType.missingReason",
      "message": "Test \"should return user-friendly messages for common auth errors\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 119,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle status code errors\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 119,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle status code errors\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 119,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle status code errors\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 135,
      "type": "IssueType.namingConvention",
      "message": "Test \"should identify retriable auth errors\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 135,
      "type": "IssueType.missingStructure",
      "message": "Test \"should identify retriable auth errors\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 135,
      "type": "IssueType.missingReason",
      "message": "Test \"should identify retriable auth errors\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 150,
      "type": "IssueType.namingConvention",
      "message": "Test \"should identify errors requiring reauth\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 150,
      "type": "IssueType.missingStructure",
      "message": "Test \"should identify errors requiring reauth\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 150,
      "type": "IssueType.missingReason",
      "message": "Test \"should identify errors requiring reauth\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 166,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return user-friendly messages for storage errors\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 166,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return user-friendly messages for storage errors\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 166,
      "type": "IssueType.missingReason",
      "message": "Test \"should return user-friendly messages for storage errors\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 181,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle storage status codes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 181,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle storage status codes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 181,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle storage status codes\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 195,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create from PostgrestException\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 195,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create from PostgrestException\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 195,
      "type": "IssueType.missingReason",
      "message": "Test \"should create from PostgrestException\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 209,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create from AuthException\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 209,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create from AuthException\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 209,
      "type": "IssueType.missingReason",
      "message": "Test \"should create from AuthException\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 226,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create from StorageException\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 226,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create from StorageException\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 226,
      "type": "IssueType.missingReason",
      "message": "Test \"should create from StorageException\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 240,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have proper toString representation\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 240,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have proper toString representation\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/errors/supabase_error_handling_test.dart",
      "line": 240,
      "type": "IssueType.missingReason",
      "message": "Test \"should have proper toString representation\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 7,
      "type": "IssueType.namingConvention",
      "message": "Test \"should generate web link by default\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 7,
      "type": "IssueType.missingStructure",
      "message": "Test \"should generate web link by default\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 7,
      "type": "IssueType.missingReason",
      "message": "Test \"should generate web link by default\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 14,
      "type": "IssueType.namingConvention",
      "message": "Test \"should generate app scheme link when requested\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 14,
      "type": "IssueType.missingStructure",
      "message": "Test \"should generate app scheme link when requested\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 14,
      "type": "IssueType.missingReason",
      "message": "Test \"should generate app scheme link when requested\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 24,
      "type": "IssueType.namingConvention",
      "message": "Test \"should encode special characters in room ID\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 24,
      "type": "IssueType.missingStructure",
      "message": "Test \"should encode special characters in room ID\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 24,
      "type": "IssueType.missingReason",
      "message": "Test \"should encode special characters in room ID\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 33,
      "type": "IssueType.namingConvention",
      "message": "Test \"should generate web join link\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 33,
      "type": "IssueType.missingStructure",
      "message": "Test \"should generate web join link\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 33,
      "type": "IssueType.missingReason",
      "message": "Test \"should generate web join link\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 38,
      "type": "IssueType.namingConvention",
      "message": "Test \"should generate app scheme join link\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 38,
      "type": "IssueType.missingStructure",
      "message": "Test \"should generate app scheme join link\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 38,
      "type": "IssueType.missingReason",
      "message": "Test \"should generate app scheme join link\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 45,
      "type": "IssueType.namingConvention",
      "message": "Test \"should generate link with query parameters\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 45,
      "type": "IssueType.missingStructure",
      "message": "Test \"should generate link with query parameters\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 45,
      "type": "IssueType.missingReason",
      "message": "Test \"should generate link with query parameters\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 56,
      "type": "IssueType.namingConvention",
      "message": "Test \"should generate link without query parameters\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 56,
      "type": "IssueType.missingStructure",
      "message": "Test \"should generate link without query parameters\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 56,
      "type": "IssueType.missingReason",
      "message": "Test \"should generate link without query parameters\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 63,
      "type": "IssueType.namingConvention",
      "message": "Test \"should parse valid app scheme link\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 63,
      "type": "IssueType.missingStructure",
      "message": "Test \"should parse valid app scheme link\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 63,
      "type": "IssueType.missingReason",
      "message": "Test \"should parse valid app scheme link\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 73,
      "type": "IssueType.namingConvention",
      "message": "Test \"should parse valid web link\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 73,
      "type": "IssueType.missingStructure",
      "message": "Test \"should parse valid web link\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 73,
      "type": "IssueType.missingReason",
      "message": "Test \"should parse valid web link\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 82,
      "type": "IssueType.namingConvention",
      "message": "Test \"should parse join room link\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 82,
      "type": "IssueType.missingStructure",
      "message": "Test \"should parse join room link\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 82,
      "type": "IssueType.missingReason",
      "message": "Test \"should parse join room link\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 91,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null for invalid links\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 91,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return null for invalid links\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 91,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null for invalid links\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 97,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle encoded room IDs\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 97,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle encoded room IDs\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 97,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle encoded room IDs\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 108,
      "type": "IssueType.namingConvention",
      "message": "Test \"should generate share message with room name\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 108,
      "type": "IssueType.missingStructure",
      "message": "Test \"should generate share message with room name\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 108,
      "type": "IssueType.missingReason",
      "message": "Test \"should generate share message with room name\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 119,
      "type": "IssueType.namingConvention",
      "message": "Test \"should generate share message without room name\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 119,
      "type": "IssueType.missingStructure",
      "message": "Test \"should generate share message without room name\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 119,
      "type": "IssueType.missingReason",
      "message": "Test \"should generate share message without room name\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 128,
      "type": "IssueType.namingConvention",
      "message": "Test \"should use app scheme for QR codes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 128,
      "type": "IssueType.missingStructure",
      "message": "Test \"should use app scheme for QR codes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 128,
      "type": "IssueType.missingReason",
      "message": "Test \"should use app scheme for QR codes\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 135,
      "type": "IssueType.namingConvention",
      "message": "Test \"should extract room ID from valid path\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 135,
      "type": "IssueType.missingStructure",
      "message": "Test \"should extract room ID from valid path\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 135,
      "type": "IssueType.missingReason",
      "message": "Test \"should extract room ID from valid path\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 146,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null for non-room paths\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 146,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return null for non-room paths\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/deep_link_service_test.dart",
      "line": 146,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null for non-room paths\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 14,
      "type": "IssueType.namingConvention",
      "message": "Test \"should complete transaction successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 14,
      "type": "IssueType.missingStructure",
      "message": "Test \"should complete transaction successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 14,
      "type": "IssueType.missingReason",
      "message": "Test \"should complete transaction successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 31,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle transaction failure\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 31,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle transaction failure\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 31,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle transaction failure\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 45,
      "type": "IssueType.namingConvention",
      "message": "Test \"should include custom data in transaction\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 45,
      "type": "IssueType.missingStructure",
      "message": "Test \"should include custom data in transaction\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 45,
      "type": "IssueType.missingReason",
      "message": "Test \"should include custom data in transaction\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 62,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track database operation with table info\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 62,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track database operation with table info\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 62,
      "type": "IssueType.missingReason",
      "message": "Test \"should track database operation with table info\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 73,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track database operation without table\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 73,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track database operation without table\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 73,
      "type": "IssueType.missingReason",
      "message": "Test \"should track database operation without table\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 85,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track successful network request\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 85,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track successful network request\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 85,
      "type": "IssueType.missingReason",
      "message": "Test \"should track successful network request\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 95,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track failed network request\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 95,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track failed network request\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 95,
      "type": "IssueType.missingReason",
      "message": "Test \"should track failed network request\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 110,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track UI interaction with extra data\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 110,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track UI interaction with extra data\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 110,
      "type": "IssueType.missingReason",
      "message": "Test \"should track UI interaction with extra data\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 123,
      "type": "IssueType.namingConvention",
      "message": "Test \"should add breadcrumb with all parameters\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 123,
      "type": "IssueType.missingStructure",
      "message": "Test \"should add breadcrumb with all parameters\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 123,
      "type": "IssueType.missingReason",
      "message": "Test \"should add breadcrumb with all parameters\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 136,
      "type": "IssueType.namingConvention",
      "message": "Test \"should add breadcrumb with minimal parameters\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 136,
      "type": "IssueType.missingStructure",
      "message": "Test \"should add breadcrumb with minimal parameters\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 136,
      "type": "IssueType.missingReason",
      "message": "Test \"should add breadcrumb with minimal parameters\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 147,
      "type": "IssueType.namingConvention",
      "message": "Test \"should set user with all fields\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 147,
      "type": "IssueType.missingStructure",
      "message": "Test \"should set user with all fields\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 147,
      "type": "IssueType.missingReason",
      "message": "Test \"should set user with all fields\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 159,
      "type": "IssueType.namingConvention",
      "message": "Test \"should set user with minimal fields\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 159,
      "type": "IssueType.missingStructure",
      "message": "Test \"should set user with minimal fields\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 159,
      "type": "IssueType.missingReason",
      "message": "Test \"should set user with minimal fields\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 164,
      "type": "IssueType.namingConvention",
      "message": "Test \"should clear user context\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 164,
      "type": "IssueType.missingStructure",
      "message": "Test \"should clear user context\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 164,
      "type": "IssueType.missingReason",
      "message": "Test \"should clear user context\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 171,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track app lifecycle event\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 171,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track app lifecycle event\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 171,
      "type": "IssueType.missingReason",
      "message": "Test \"should track app lifecycle event\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 178,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track navigation with params\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 178,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track navigation with params\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 178,
      "type": "IssueType.missingReason",
      "message": "Test \"should track navigation with params\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 188,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track navigation without params\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 188,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track navigation without params\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 188,
      "type": "IssueType.missingReason",
      "message": "Test \"should track navigation without params\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 196,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track successful Supabase operation\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 196,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track successful Supabase operation\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 196,
      "type": "IssueType.missingReason",
      "message": "Test \"should track successful Supabase operation\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 210,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track failed Supabase operation\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 210,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track failed Supabase operation\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 210,
      "type": "IssueType.missingReason",
      "message": "Test \"should track failed Supabase operation\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 225,
      "type": "IssueType.namingConvention",
      "message": "Test \"should capture exception with full context\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 225,
      "type": "IssueType.missingStructure",
      "message": "Test \"should capture exception with full context\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 225,
      "type": "IssueType.missingReason",
      "message": "Test \"should capture exception with full context\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 237,
      "type": "IssueType.namingConvention",
      "message": "Test \"should capture exception with minimal context\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 237,
      "type": "IssueType.missingStructure",
      "message": "Test \"should capture exception with minimal context\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 237,
      "type": "IssueType.missingReason",
      "message": "Test \"should capture exception with minimal context\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 245,
      "type": "IssueType.namingConvention",
      "message": "Test \"should capture message with context\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 245,
      "type": "IssueType.missingStructure",
      "message": "Test \"should capture message with context\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 245,
      "type": "IssueType.missingReason",
      "message": "Test \"should capture message with context\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 256,
      "type": "IssueType.namingConvention",
      "message": "Test \"should capture simple message\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 256,
      "type": "IssueType.missingStructure",
      "message": "Test \"should capture simple message\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/sentry_service_test.dart",
      "line": 256,
      "type": "IssueType.missingReason",
      "message": "Test \"should capture simple message\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 26,
      "type": "IssueType.namingConvention",
      "message": "Test \"should initialize successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 26,
      "type": "IssueType.missingStructure",
      "message": "Test \"should initialize successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 26,
      "type": "IssueType.missingReason",
      "message": "Test \"should initialize successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 30,
      "type": "IssueType.namingConvention",
      "message": "Test \"should throw error when accessing prefs before initialization\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 30,
      "type": "IssueType.missingStructure",
      "message": "Test \"should throw error when accessing prefs before initialization\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 30,
      "type": "IssueType.missingReason",
      "message": "Test \"should throw error when accessing prefs before initialization\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 38,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get string value\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 38,
      "type": "IssueType.missingStructure",
      "message": "Test \"should get string value\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 38,
      "type": "IssueType.missingReason",
      "message": "Test \"should get string value\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 43,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null for non-existent string\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 43,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return null for non-existent string\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 43,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null for non-existent string\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 48,
      "type": "IssueType.namingConvention",
      "message": "Test \"should set string value\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 48,
      "type": "IssueType.missingStructure",
      "message": "Test \"should set string value\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 48,
      "type": "IssueType.missingReason",
      "message": "Test \"should set string value\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 58,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get integer value\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 58,
      "type": "IssueType.missingStructure",
      "message": "Test \"should get integer value\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 58,
      "type": "IssueType.missingReason",
      "message": "Test \"should get integer value\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 63,
      "type": "IssueType.namingConvention",
      "message": "Test \"should set integer value\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 63,
      "type": "IssueType.missingStructure",
      "message": "Test \"should set integer value\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 63,
      "type": "IssueType.missingReason",
      "message": "Test \"should set integer value\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 73,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get double value\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 73,
      "type": "IssueType.missingStructure",
      "message": "Test \"should get double value\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 73,
      "type": "IssueType.missingReason",
      "message": "Test \"should get double value\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 78,
      "type": "IssueType.namingConvention",
      "message": "Test \"should set double value\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 78,
      "type": "IssueType.missingStructure",
      "message": "Test \"should set double value\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 78,
      "type": "IssueType.missingReason",
      "message": "Test \"should set double value\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 88,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get boolean value\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 88,
      "type": "IssueType.missingStructure",
      "message": "Test \"should get boolean value\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 88,
      "type": "IssueType.missingReason",
      "message": "Test \"should get boolean value\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 93,
      "type": "IssueType.namingConvention",
      "message": "Test \"should set boolean value\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 93,
      "type": "IssueType.missingStructure",
      "message": "Test \"should set boolean value\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 93,
      "type": "IssueType.missingReason",
      "message": "Test \"should set boolean value\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 103,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get string list\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 103,
      "type": "IssueType.missingStructure",
      "message": "Test \"should get string list\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 103,
      "type": "IssueType.missingReason",
      "message": "Test \"should get string list\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 108,
      "type": "IssueType.namingConvention",
      "message": "Test \"should set string list\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 108,
      "type": "IssueType.missingStructure",
      "message": "Test \"should set string list\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 108,
      "type": "IssueType.missingReason",
      "message": "Test \"should set string list\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 119,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get JSON object\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 119,
      "type": "IssueType.missingStructure",
      "message": "Test \"should get JSON object\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 119,
      "type": "IssueType.missingReason",
      "message": "Test \"should get JSON object\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 126,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null for invalid JSON\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 126,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return null for invalid JSON\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 126,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null for invalid JSON\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 132,
      "type": "IssueType.namingConvention",
      "message": "Test \"should set JSON object\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 132,
      "type": "IssueType.missingStructure",
      "message": "Test \"should set JSON object\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 132,
      "type": "IssueType.missingReason",
      "message": "Test \"should set JSON object\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 141,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get JSON list\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 141,
      "type": "IssueType.missingStructure",
      "message": "Test \"should get JSON list\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 141,
      "type": "IssueType.missingReason",
      "message": "Test \"should get JSON list\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 149,
      "type": "IssueType.namingConvention",
      "message": "Test \"should set JSON list\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 149,
      "type": "IssueType.missingStructure",
      "message": "Test \"should set JSON list\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 149,
      "type": "IssueType.missingReason",
      "message": "Test \"should set JSON list\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 163,
      "type": "IssueType.namingConvention",
      "message": "Test \"should check if key exists\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 163,
      "type": "IssueType.missingStructure",
      "message": "Test \"should check if key exists\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 163,
      "type": "IssueType.missingReason",
      "message": "Test \"should check if key exists\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 168,
      "type": "IssueType.namingConvention",
      "message": "Test \"should remove value\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 168,
      "type": "IssueType.missingStructure",
      "message": "Test \"should remove value\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 168,
      "type": "IssueType.missingReason",
      "message": "Test \"should remove value\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 177,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get all keys\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 177,
      "type": "IssueType.missingStructure",
      "message": "Test \"should get all keys\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 177,
      "type": "IssueType.missingReason",
      "message": "Test \"should get all keys\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 184,
      "type": "IssueType.namingConvention",
      "message": "Test \"should clear all values\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 184,
      "type": "IssueType.missingStructure",
      "message": "Test \"should clear all values\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 184,
      "type": "IssueType.missingReason",
      "message": "Test \"should clear all values\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 192,
      "type": "IssueType.namingConvention",
      "message": "Test \"should reload values\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 192,
      "type": "IssueType.missingStructure",
      "message": "Test \"should reload values\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 192,
      "type": "IssueType.missingReason",
      "message": "Test \"should reload values\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 200,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have correct key values\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 200,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have correct key values\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/services/storage_service_test.dart",
      "line": 200,
      "type": "IssueType.missingReason",
      "message": "Test \"should have correct key values\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/usecases/usecase_test.dart",
      "line": 46,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return success result when params are valid\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/usecases/usecase_test.dart",
      "line": 46,
      "type": "IssueType.missingReason",
      "message": "Test \"should return success result when params are valid\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/usecases/usecase_test.dart",
      "line": 61,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return failure when params indicate failure\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/usecases/usecase_test.dart",
      "line": 61,
      "type": "IssueType.missingReason",
      "message": "Test \"should return failure when params indicate failure\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/usecases/usecase_test.dart",
      "line": 78,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return success result without params\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/usecases/usecase_test.dart",
      "line": 78,
      "type": "IssueType.missingReason",
      "message": "Test \"should return success result without params\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/usecases/usecase_test.dart",
      "line": 93,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return failure when configured to fail\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/usecases/usecase_test.dart",
      "line": 93,
      "type": "IssueType.missingReason",
      "message": "Test \"should return failure when configured to fail\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/usecases/usecase_test.dart",
      "line": 110,
      "type": "IssueType.namingConvention",
      "message": "Test \"should be constructable\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/usecases/usecase_test.dart",
      "line": 110,
      "type": "IssueType.missingReason",
      "message": "Test \"should be constructable\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/extensions_test.dart",
      "line": 8,
      "type": "IssueType.namingConvention",
      "message": "Test \"should communicate card value risk levels through strategic color coding\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/extensions_test.dart",
      "line": 8,
      "type": "IssueType.missingStructure",
      "message": "Test \"should communicate card value risk levels through strategic color coding\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/extensions_test.dart",
      "line": 54,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide visually distinct colors for competitive card recognition\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/extensions_test.dart",
      "line": 54,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide visually distinct colors for competitive card recognition\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/extensions_test.dart",
      "line": 93,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain color consistency across entire value range for strategic planning\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/extensions_test.dart",
      "line": 93,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain color consistency across entire value range for strategic planning\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/extensions_test.dart",
      "line": 122,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable fair deck shuffling without affecting original deck order\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/extensions_test.dart",
      "line": 122,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable fair deck shuffling without affecting original deck order\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/extensions_test.dart",
      "line": 164,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable strategic card distribution for multiplayer game setup\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/extensions_test.dart",
      "line": 164,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable strategic card distribution for multiplayer game setup\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 10,
      "type": "IssueType.namingConvention",
      "message": "Test \"should execute operation successfully on first attempt\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 10,
      "type": "IssueType.missingStructure",
      "message": "Test \"should execute operation successfully on first attempt\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 10,
      "type": "IssueType.missingReason",
      "message": "Test \"should execute operation successfully on first attempt\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 21,
      "type": "IssueType.namingConvention",
      "message": "Test \"should retry on retriable PostgrestException\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 21,
      "type": "IssueType.missingStructure",
      "message": "Test \"should retry on retriable PostgrestException\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 21,
      "type": "IssueType.missingReason",
      "message": "Test \"should retry on retriable PostgrestException\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 38,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not retry on non-retriable PostgrestException\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 38,
      "type": "IssueType.missingStructure",
      "message": "Test \"should not retry on non-retriable PostgrestException\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 38,
      "type": "IssueType.missingReason",
      "message": "Test \"should not retry on non-retriable PostgrestException\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 56,
      "type": "IssueType.namingConvention",
      "message": "Test \"should retry on retriable AuthException\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 56,
      "type": "IssueType.missingStructure",
      "message": "Test \"should retry on retriable AuthException\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 56,
      "type": "IssueType.missingReason",
      "message": "Test \"should retry on retriable AuthException\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 70,
      "type": "IssueType.namingConvention",
      "message": "Test \"should respect max attempts\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 70,
      "type": "IssueType.missingStructure",
      "message": "Test \"should respect max attempts\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 70,
      "type": "IssueType.missingReason",
      "message": "Test \"should respect max attempts\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 91,
      "type": "IssueType.namingConvention",
      "message": "Test \"should use custom shouldRetry callback\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 91,
      "type": "IssueType.missingStructure",
      "message": "Test \"should use custom shouldRetry callback\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 91,
      "type": "IssueType.missingReason",
      "message": "Test \"should use custom shouldRetry callback\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 110,
      "type": "IssueType.namingConvention",
      "message": "Test \"should use exponential backoff\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 110,
      "type": "IssueType.missingStructure",
      "message": "Test \"should use exponential backoff\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 110,
      "type": "IssueType.missingReason",
      "message": "Test \"should use exponential backoff\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 146,
      "type": "IssueType.namingConvention",
      "message": "Test \"should complete operation within timeout\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 146,
      "type": "IssueType.missingStructure",
      "message": "Test \"should complete operation within timeout\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 146,
      "type": "IssueType.missingReason",
      "message": "Test \"should complete operation within timeout\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 155,
      "type": "IssueType.namingConvention",
      "message": "Test \"should throw AppException on timeout\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 155,
      "type": "IssueType.missingStructure",
      "message": "Test \"should throw AppException on timeout\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 155,
      "type": "IssueType.missingReason",
      "message": "Test \"should throw AppException on timeout\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 171,
      "type": "IssueType.namingConvention",
      "message": "Test \"should combine retry and timeout\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 171,
      "type": "IssueType.missingStructure",
      "message": "Test \"should combine retry and timeout\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 171,
      "type": "IssueType.missingReason",
      "message": "Test \"should combine retry and timeout\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 194,
      "type": "IssueType.namingConvention",
      "message": "Test \"should timeout even with retries\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 194,
      "type": "IssueType.missingStructure",
      "message": "Test \"should timeout even with retries\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 194,
      "type": "IssueType.missingReason",
      "message": "Test \"should timeout even with retries\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 208,
      "type": "IssueType.namingConvention",
      "message": "Test \"should emit values from stream\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 208,
      "type": "IssueType.missingStructure",
      "message": "Test \"should emit values from stream\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 208,
      "type": "IssueType.missingReason",
      "message": "Test \"should emit values from stream\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 232,
      "type": "IssueType.namingConvention",
      "message": "Test \"should attempt reconnection on error\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 232,
      "type": "IssueType.missingStructure",
      "message": "Test \"should attempt reconnection on error\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 232,
      "type": "IssueType.missingReason",
      "message": "Test \"should attempt reconnection on error\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 272,
      "type": "IssueType.namingConvention",
      "message": "Test \"should stop reconnecting after max attempts\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 272,
      "type": "IssueType.missingStructure",
      "message": "Test \"should stop reconnecting after max attempts\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 272,
      "type": "IssueType.missingReason",
      "message": "Test \"should stop reconnecting after max attempts\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 305,
      "type": "IssueType.namingConvention",
      "message": "Test \"should reset reconnect attempts on successful data\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 305,
      "type": "IssueType.missingStructure",
      "message": "Test \"should reset reconnect attempts on successful data\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "core/utils/resilient_supabase_service_test.dart",
      "line": 305,
      "type": "IssueType.missingReason",
      "message": "Test \"should reset reconnect attempts on successful data\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 40,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return existing user if already authenticated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 40,
      "type": "IssueType.missingReason",
      "message": "Test \"should return existing user if already authenticated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 54,
      "type": "IssueType.namingConvention",
      "message": "Test \"should sign in anonymously if no current user\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 54,
      "type": "IssueType.missingReason",
      "message": "Test \"should sign in anonymously if no current user\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 71,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null if anonymous sign in fails\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 71,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null if anonymous sign in fails\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 87,
      "type": "IssueType.namingConvention",
      "message": "Test \"signOut should sign out user and invalidate state\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 87,
      "type": "IssueType.noAssertions",
      "message": "Test \"signOut should sign out user and invalidate state\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 102,
      "type": "IssueType.namingConvention",
      "message": "Test \"currentUserId should return user id when authenticated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 102,
      "type": "IssueType.missingReason",
      "message": "Test \"currentUserId should return user id when authenticated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 116,
      "type": "IssueType.namingConvention",
      "message": "Test \"currentUserId should return null when not authenticated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 116,
      "type": "IssueType.missingReason",
      "message": "Test \"currentUserId should return null when not authenticated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 134,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return user id when user is authenticated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 134,
      "type": "IssueType.missingReason",
      "message": "Test \"should return user id when user is authenticated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 147,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null when user is not authenticated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/auth/presentation/providers/auth_provider_test.dart",
      "line": 147,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null when user is not authenticated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 65,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create EndGameState with correct properties\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 65,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create EndGameState with correct properties\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 65,
      "type": "IssueType.missingReason",
      "message": "Test \"should create EndGameState with correct properties\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 77,
      "type": "IssueType.namingConvention",
      "message": "Test \"should calculate ranked players correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 77,
      "type": "IssueType.missingStructure",
      "message": "Test \"should calculate ranked players correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 77,
      "type": "IssueType.missingReason",
      "message": "Test \"should calculate ranked players correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 92,
      "type": "IssueType.namingConvention",
      "message": "Test \"should identify winner correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 92,
      "type": "IssueType.missingStructure",
      "message": "Test \"should identify winner correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 92,
      "type": "IssueType.missingReason",
      "message": "Test \"should identify winner correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 103,
      "type": "IssueType.namingConvention",
      "message": "Test \"should apply penalty to round initiator when not having lowest score\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 103,
      "type": "IssueType.missingStructure",
      "message": "Test \"should apply penalty to round initiator when not having lowest score\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 103,
      "type": "IssueType.missingReason",
      "message": "Test \"should apply penalty to round initiator when not having lowest score\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 123,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not apply penalty when initiator has lowest score\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 123,
      "type": "IssueType.missingStructure",
      "message": "Test \"should not apply penalty when initiator has lowest score\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 123,
      "type": "IssueType.missingReason",
      "message": "Test \"should not apply penalty when initiator has lowest score\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 137,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not apply penalty when initiator ties for lowest score\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 137,
      "type": "IssueType.missingStructure",
      "message": "Test \"should not apply penalty when initiator ties for lowest score\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 137,
      "type": "IssueType.missingReason",
      "message": "Test \"should not apply penalty when initiator ties for lowest score\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 172,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have hasVotedToContinue initially false for all players\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 172,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have hasVotedToContinue initially false for all players\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 172,
      "type": "IssueType.missingReason",
      "message": "Test \"should have hasVotedToContinue initially false for all players\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 184,
      "type": "IssueType.namingConvention",
      "message": "Test \"should update player vote correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 184,
      "type": "IssueType.missingStructure",
      "message": "Test \"should update player vote correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 184,
      "type": "IssueType.missingReason",
      "message": "Test \"should update player vote correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 198,
      "type": "IssueType.namingConvention",
      "message": "Test \"should determine if should continue based on votes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 198,
      "type": "IssueType.missingStructure",
      "message": "Test \"should determine if should continue based on votes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 198,
      "type": "IssueType.missingReason",
      "message": "Test \"should determine if should continue based on votes\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 217,
      "type": "IssueType.namingConvention",
      "message": "Test \"should be immutable with Freezed\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 217,
      "type": "IssueType.missingStructure",
      "message": "Test \"should be immutable with Freezed\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 217,
      "type": "IssueType.missingReason",
      "message": "Test \"should be immutable with Freezed\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 232,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support json serialization\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 232,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support json serialization\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/domain/entities/end_game_state_test.dart",
      "line": 232,
      "type": "IssueType.missingReason",
      "message": "Test \"should support json serialization\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/integration/save_global_score_integration_test.dart",
      "line": 106,
      "type": "IssueType.namingConvention",
      "message": "Test \"should save global scores when game ends\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/integration/save_global_score_integration_test.dart",
      "line": 106,
      "type": "IssueType.missingReason",
      "message": "Test \"should save global scores when game ends\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/integration/save_global_score_integration_test.dart",
      "line": 149,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle save errors gracefully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/integration/save_global_score_integration_test.dart",
      "line": 149,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle save errors gracefully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/integration/save_global_score_integration_test.dart",
      "line": 163,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not save scores if game not finished\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/integration/save_global_score_integration_test.dart",
      "line": 163,
      "type": "IssueType.noAssertions",
      "message": "Test \"should not save scores if game not finished\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/end_game/presentation/integration/save_global_score_integration_test.dart",
      "line": 185,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle missing room ID gracefully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/integration/save_global_score_integration_test.dart",
      "line": 185,
      "type": "IssueType.noAssertions",
      "message": "Test \"should handle missing room ID gracefully\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 106,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide EndGameState when round is ended\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 106,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide EndGameState when round is ended\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 106,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide EndGameState when round is ended\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 115,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null when round is not ended\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 115,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return null when round is not ended\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 115,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null when round is not ended\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 132,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null when room is not available\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 132,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return null when room is not available\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 132,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null when room is not available\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 147,
      "type": "IssueType.namingConvention",
      "message": "Test \"voteToContineProvider should execute without error\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 147,
      "type": "IssueType.missingStructure",
      "message": "Test \"voteToContineProvider should execute without error\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 147,
      "type": "IssueType.missingReason",
      "message": "Test \"voteToContineProvider should execute without error\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 162,
      "type": "IssueType.namingConvention",
      "message": "Test \"endGameActionProvider should navigate to home\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 162,
      "type": "IssueType.missingStructure",
      "message": "Test \"endGameActionProvider should navigate to home\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 162,
      "type": "IssueType.missingReason",
      "message": "Test \"endGameActionProvider should navigate to home\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 182,
      "type": "IssueType.namingConvention",
      "message": "Test \"should watch game state changes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 182,
      "type": "IssueType.missingStructure",
      "message": "Test \"should watch game state changes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/providers/end_game_provider_test.dart",
      "line": 182,
      "type": "IssueType.missingReason",
      "message": "Test \"should watch game state changes\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 110,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display no game data when state is null\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 110,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display no game data when state is null\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 110,
      "type": "IssueType.missingReason",
      "message": "Test \"should display no game data when state is null\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 127,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display all required UI elements with correct content\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 127,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display all required UI elements with correct content\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 127,
      "type": "IssueType.missingReason",
      "message": "Test \"should display all required UI elements with correct content\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 164,
      "type": "IssueType.namingConvention",
      "message": "Test \"should highlight round initiator with penalty\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 164,
      "type": "IssueType.missingStructure",
      "message": "Test \"should highlight round initiator with penalty\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 164,
      "type": "IssueType.missingReason",
      "message": "Test \"should highlight round initiator with penalty\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 183,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle vote to continue tap\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 183,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle vote to continue tap\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 183,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle vote to continue tap\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 210,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle end game tap\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 210,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle end game tap\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 210,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle end game tap\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 239,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show vote status for players\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 239,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show vote status for players\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 239,
      "type": "IssueType.missingReason",
      "message": "Test \"should show vote status for players\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 250,
      "type": "IssueType.namingConvention",
      "message": "Test \"should animate winner card\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 250,
      "type": "IssueType.missingStructure",
      "message": "Test \"should animate winner card\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 250,
      "type": "IssueType.missingReason",
      "message": "Test \"should animate winner card\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 257,
      "type": "IssueType.namingConvention",
      "message": "Test \"should be scrollable on small screens\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 257,
      "type": "IssueType.missingStructure",
      "message": "Test \"should be scrollable on small screens\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/screens/end_game_screen_test.dart",
      "line": 257,
      "type": "IssueType.missingReason",
      "message": "Test \"should be scrollable on small screens\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 25,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display player name and score\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 25,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display player name and score\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 25,
      "type": "IssueType.missingReason",
      "message": "Test \"should display player name and score\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 44,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display 1st for rank 1\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 44,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display 1st for rank 1\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 44,
      "type": "IssueType.missingReason",
      "message": "Test \"should display 1st for rank 1\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 61,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display 2nd for rank 2\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 61,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display 2nd for rank 2\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 61,
      "type": "IssueType.missingReason",
      "message": "Test \"should display 2nd for rank 2\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 78,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display 3rd for rank 3\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 78,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display 3rd for rank 3\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 78,
      "type": "IssueType.missingReason",
      "message": "Test \"should display 3rd for rank 3\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 95,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display Nth for rank > 3\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 95,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display Nth for rank > 3\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 95,
      "type": "IssueType.missingReason",
      "message": "Test \"should display Nth for rank > 3\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 113,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show penalty indicator when penalized\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 113,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show penalty indicator when penalized\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 113,
      "type": "IssueType.missingReason",
      "message": "Test \"should show penalty indicator when penalized\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 130,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not show penalty indicator when not penalized\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 130,
      "type": "IssueType.missingStructure",
      "message": "Test \"should not show penalty indicator when not penalized\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 130,
      "type": "IssueType.missingReason",
      "message": "Test \"should not show penalty indicator when not penalized\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 149,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show vote indicator when hasVoted is true\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 149,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show vote indicator when hasVoted is true\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 149,
      "type": "IssueType.missingReason",
      "message": "Test \"should show vote indicator when hasVoted is true\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 171,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not show vote indicator when hasVoted is false\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 171,
      "type": "IssueType.missingStructure",
      "message": "Test \"should not show vote indicator when hasVoted is false\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 171,
      "type": "IssueType.missingReason",
      "message": "Test \"should not show vote indicator when hasVoted is false\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 190,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have higher elevation for rank 1\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 190,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have higher elevation for rank 1\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 190,
      "type": "IssueType.missingReason",
      "message": "Test \"should have higher elevation for rank 1\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 208,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have lower elevation for rank > 1\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 208,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have lower elevation for rank > 1\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 208,
      "type": "IssueType.missingReason",
      "message": "Test \"should have lower elevation for rank > 1\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 227,
      "type": "IssueType.namingConvention",
      "message": "Test \"should use amber color for rank 1\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 227,
      "type": "IssueType.missingStructure",
      "message": "Test \"should use amber color for rank 1\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 227,
      "type": "IssueType.missingReason",
      "message": "Test \"should use amber color for rank 1\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 266,
      "type": "IssueType.namingConvention",
      "message": "Test \"should use grey color for rank 2\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 266,
      "type": "IssueType.missingStructure",
      "message": "Test \"should use grey color for rank 2\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 266,
      "type": "IssueType.missingReason",
      "message": "Test \"should use grey color for rank 2\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 308,
      "type": "IssueType.namingConvention",
      "message": "Test \"should use brown color for rank 3\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 308,
      "type": "IssueType.missingStructure",
      "message": "Test \"should use brown color for rank 3\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 308,
      "type": "IssueType.missingReason",
      "message": "Test \"should use brown color for rank 3\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 351,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display correct score with multiplier\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 351,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display correct score with multiplier\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/player_score_card_test.dart",
      "line": 351,
      "type": "IssueType.missingReason",
      "message": "Test \"should display correct score with multiplier\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 7,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display title and subtitle\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 7,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display title and subtitle\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 7,
      "type": "IssueType.missingReason",
      "message": "Test \"should display title and subtitle\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 23,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display both buttons with correct labels\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 23,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display both buttons with correct labels\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 23,
      "type": "IssueType.missingReason",
      "message": "Test \"should display both buttons with correct labels\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 40,
      "type": "IssueType.namingConvention",
      "message": "Test \"should call onVoteToContinue when continue button is pressed\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 40,
      "type": "IssueType.missingStructure",
      "message": "Test \"should call onVoteToContinue when continue button is pressed\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 40,
      "type": "IssueType.missingReason",
      "message": "Test \"should call onVoteToContinue when continue button is pressed\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 65,
      "type": "IssueType.namingConvention",
      "message": "Test \"should call onEndGame when end game button is pressed\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 65,
      "type": "IssueType.missingStructure",
      "message": "Test \"should call onEndGame when end game button is pressed\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 65,
      "type": "IssueType.missingReason",
      "message": "Test \"should call onEndGame when end game button is pressed\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 89,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have correct button styling\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 89,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have correct button styling\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 89,
      "type": "IssueType.missingReason",
      "message": "Test \"should have correct button styling\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 114,
      "type": "IssueType.namingConvention",
      "message": "Test \"should be wrapped in a Card with elevation\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 114,
      "type": "IssueType.missingStructure",
      "message": "Test \"should be wrapped in a Card with elevation\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 114,
      "type": "IssueType.missingReason",
      "message": "Test \"should be wrapped in a Card with elevation\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 127,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have proper padding\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 127,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have proper padding\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 127,
      "type": "IssueType.missingReason",
      "message": "Test \"should have proper padding\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 145,
      "type": "IssueType.namingConvention",
      "message": "Test \"buttons should be in a Row with proper spacing\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 145,
      "type": "IssueType.missingStructure",
      "message": "Test \"buttons should be in a Row with proper spacing\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/vote_section_test.dart",
      "line": 145,
      "type": "IssueType.missingReason",
      "message": "Test \"buttons should be in a Row with proper spacing\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 25,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display winner name and score\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 25,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display winner name and score\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 25,
      "type": "IssueType.missingReason",
      "message": "Test \"should display winner name and score\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 39,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display trophy icon\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 39,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display trophy icon\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 39,
      "type": "IssueType.missingReason",
      "message": "Test \"should display trophy icon\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 55,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have animated container with amber styling\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 55,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have animated container with amber styling\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 55,
      "type": "IssueType.missingReason",
      "message": "Test \"should have animated container with amber styling\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 79,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display correct score with multiplier\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 79,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display correct score with multiplier\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 79,
      "type": "IssueType.missingReason",
      "message": "Test \"should display correct score with multiplier\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 94,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle long names properly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 94,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle long names properly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/end_game/presentation/widgets/winner_announcement_test.dart",
      "line": 94,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle long names properly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 32,
      "type": "IssueType.namingConvention",
      "message": "Test \"should initialize with default action cards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 32,
      "type": "IssueType.missingReason",
      "message": "Test \"should initialize with default action cards\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 41,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get empty player action cards initially\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 41,
      "type": "IssueType.missingReason",
      "message": "Test \"should get empty player action cards initially\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 49,
      "type": "IssueType.namingConvention",
      "message": "Test \"should add action card to player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 49,
      "type": "IssueType.missingReason",
      "message": "Test \"should add action card to player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 59,
      "type": "IssueType.namingConvention",
      "message": "Test \"should add multiple action cards to different players\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 59,
      "type": "IssueType.missingReason",
      "message": "Test \"should add multiple action cards to different players\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 83,
      "type": "IssueType.namingConvention",
      "message": "Test \"should throw when adding more than 3 cards to a player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 83,
      "type": "IssueType.missingReason",
      "message": "Test \"should throw when adding more than 3 cards to a player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 115,
      "type": "IssueType.namingConvention",
      "message": "Test \"should remove action card from player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 115,
      "type": "IssueType.missingReason",
      "message": "Test \"should remove action card from player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 130,
      "type": "IssueType.namingConvention",
      "message": "Test \"should throw when removing card player does not have\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 130,
      "type": "IssueType.missingReason",
      "message": "Test \"should throw when removing card player does not have\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 138,
      "type": "IssueType.namingConvention",
      "message": "Test \"should draw action card from pile\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 138,
      "type": "IssueType.missingReason",
      "message": "Test \"should draw action card from pile\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 150,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null when drawing from empty pile\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 150,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null when drawing from empty pile\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 165,
      "type": "IssueType.namingConvention",
      "message": "Test \"should discard action card\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 165,
      "type": "IssueType.missingReason",
      "message": "Test \"should discard action card\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 186,
      "type": "IssueType.namingConvention",
      "message": "Test \"should shuffle action cards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 186,
      "type": "IssueType.missingReason",
      "message": "Test \"should shuffle action cards\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 202,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain player cards after operations\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_impl_test.dart",
      "line": 202,
      "type": "IssueType.missingReason",
      "message": "Test \"should maintain player cards after operations\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 24,
      "type": "IssueType.namingConvention",
      "message": "Test \"should define getAvailableActionCards method\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 24,
      "type": "IssueType.missingReason",
      "message": "Test \"should define getAvailableActionCards method\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 47,
      "type": "IssueType.namingConvention",
      "message": "Test \"should define getPlayerActionCards method\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 47,
      "type": "IssueType.missingReason",
      "message": "Test \"should define getPlayerActionCards method\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 63,
      "type": "IssueType.namingConvention",
      "message": "Test \"should define addActionCardToPlayer method\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 63,
      "type": "IssueType.missingReason",
      "message": "Test \"should define addActionCardToPlayer method\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 80,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle exception when adding card to player with full hand\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 80,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle exception when adding card to player with full hand\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 97,
      "type": "IssueType.namingConvention",
      "message": "Test \"should define removeActionCardFromPlayer method\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 97,
      "type": "IssueType.missingReason",
      "message": "Test \"should define removeActionCardFromPlayer method\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 117,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle exception when removing card player doesn\\\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 117,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle exception when removing card player doesn\\\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 133,
      "type": "IssueType.namingConvention",
      "message": "Test \"should define drawActionCard method\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 133,
      "type": "IssueType.missingReason",
      "message": "Test \"should define drawActionCard method\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 147,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null when draw pile is empty\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 147,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null when draw pile is empty\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 159,
      "type": "IssueType.namingConvention",
      "message": "Test \"should define discardActionCard method\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 159,
      "type": "IssueType.missingReason",
      "message": "Test \"should define discardActionCard method\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 173,
      "type": "IssueType.namingConvention",
      "message": "Test \"should define shuffleActionCards method\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 173,
      "type": "IssueType.missingReason",
      "message": "Test \"should define shuffleActionCards method\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 182,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle multiple operations in sequence\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/action_card_local_datasource_test.dart",
      "line": 182,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle multiple operations in sequence\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 5,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle game state creation\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 5,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle game state creation\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 5,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle game state creation\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 27,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle player grid creation\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 27,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle player grid creation\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 27,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle player grid creation\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 46,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support real-time game state updates\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 46,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support real-time game state updates\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 46,
      "type": "IssueType.missingReason",
      "message": "Test \"should support real-time game state updates\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 57,
      "type": "IssueType.namingConvention",
      "message": "Test \"should validate game phases\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 57,
      "type": "IssueType.missingStructure",
      "message": "Test \"should validate game phases\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 57,
      "type": "IssueType.missingReason",
      "message": "Test \"should validate game phases\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 72,
      "type": "IssueType.namingConvention",
      "message": "Test \"should validate game directions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 72,
      "type": "IssueType.missingStructure",
      "message": "Test \"should validate game directions\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/game_state_datasource_test.dart",
      "line": 72,
      "type": "IssueType.missingReason",
      "message": "Test \"should validate game directions\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/supabase_action_card_datasource_test.dart",
      "line": 11,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide access to game state specific action cards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/supabase_action_card_datasource_test.dart",
      "line": 11,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide access to game state specific action cards\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/supabase_action_card_datasource_test.dart",
      "line": 11,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide access to game state specific action cards\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/supabase_action_card_datasource_test.dart",
      "line": 24,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide balanced card distribution for fair gameplay\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/datasources/supabase_action_card_datasource_test.dart",
      "line": 24,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide balanced card distribution for fair gameplay\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/datasources/supabase_action_card_datasource_test.dart",
      "line": 24,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide balanced card distribution for fair gameplay\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/db_player_grid_model_test.dart",
      "line": 51,
      "type": "IssueType.namingConvention",
      "message": "Test \"should be a data layer model with JSON serialization\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/models/db_player_grid_model_test.dart",
      "line": 51,
      "type": "IssueType.missingStructure",
      "message": "Test \"should be a data layer model with JSON serialization\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/db_player_grid_model_test.dart",
      "line": 51,
      "type": "IssueType.missingReason",
      "message": "Test \"should be a data layer model with JSON serialization\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/db_player_grid_model_test.dart",
      "line": 64,
      "type": "IssueType.namingConvention",
      "message": "Test \"should convert bidirectionally between model and JSON formats\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/models/db_player_grid_model_test.dart",
      "line": 64,
      "type": "IssueType.missingStructure",
      "message": "Test \"should convert bidirectionally between model and JSON formats\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/db_player_grid_model_test.dart",
      "line": 64,
      "type": "IssueType.missingReason",
      "message": "Test \"should convert bidirectionally between model and JSON formats\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/db_player_grid_model_test.dart",
      "line": 102,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle empty collections correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/models/db_player_grid_model_test.dart",
      "line": 102,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle empty collections correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/db_player_grid_model_test.dart",
      "line": 102,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle empty collections correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/db_player_grid_model_test.dart",
      "line": 126,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support Freezed features\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/models/db_player_grid_model_test.dart",
      "line": 126,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support Freezed features\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/db_player_grid_model_test.dart",
      "line": 126,
      "type": "IssueType.missingReason",
      "message": "Test \"should support Freezed features\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/game_state_model_mapping_test.dart",
      "line": 11,
      "type": "IssueType.namingConvention",
      "message": "Test \"should preserve complete game state through domain-model-domain transformation for reliable persistence\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/models/game_state_model_mapping_test.dart",
      "line": 11,
      "type": "IssueType.missingStructure",
      "message": "Test \"should preserve complete game state through domain-model-domain transformation for reliable persistence\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/game_state_model_mapping_test.dart",
      "line": 266,
      "type": "IssueType.namingConvention",
      "message": "Test \"should gracefully handle edge cases and incomplete states for robust error recovery\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/models/game_state_model_mapping_test.dart",
      "line": 266,
      "type": "IssueType.missingStructure",
      "message": "Test \"should gracefully handle edge cases and incomplete states for robust error recovery\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/game_state_model_mapping_test.dart",
      "line": 530,
      "type": "IssueType.namingConvention",
      "message": "Test \"should format data correctly for Supabase real-time synchronization and webhooks\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/models/game_state_model_test.dart",
      "line": 75,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable seamless game state persistence across clean architecture boundaries\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/models/game_state_model_test.dart",
      "line": 75,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable seamless game state persistence across clean architecture boundaries\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/game_state_model_test.dart",
      "line": 478,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain data contract stability for API and storage compatibility\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/models/game_state_model_test.dart",
      "line": 478,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain data contract stability for API and storage compatibility\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/player_grid_model_test.dart",
      "line": 6,
      "type": "IssueType.namingConvention",
      "message": "Test \"should preserve competitive game state when converting to domain entity\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/models/player_grid_model_test.dart",
      "line": 6,
      "type": "IssueType.missingStructure",
      "message": "Test \"should preserve competitive game state when converting to domain entity\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/player_grid_model_test.dart",
      "line": 6,
      "type": "IssueType.missingReason",
      "message": "Test \"should preserve competitive game state when converting to domain entity\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/player_grid_model_test.dart",
      "line": 57,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain game integrity when converting to database format\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/models/player_grid_model_test.dart",
      "line": 57,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain game integrity when converting to database format\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/player_grid_model_test.dart",
      "line": 57,
      "type": "IssueType.missingReason",
      "message": "Test \"should maintain game integrity when converting to database format\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/models/player_grid_model_test.dart",
      "line": 92,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain data integrity through API serialization for reliable multiplayer synchronization\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/models/player_grid_model_test.dart",
      "line": 92,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain data integrity through API serialization for reliable multiplayer synchronization\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 29,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return available action cards when requested\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 29,
      "type": "IssueType.missingReason",
      "message": "Test \"should return available action cards when requested\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 46,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return player action cards when requested\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 46,
      "type": "IssueType.missingReason",
      "message": "Test \"should return player action cards when requested\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 63,
      "type": "IssueType.namingConvention",
      "message": "Test \"should successfully add action card to player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 63,
      "type": "IssueType.noAssertions",
      "message": "Test \"should successfully add action card to player\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 77,
      "type": "IssueType.namingConvention",
      "message": "Test \"should successfully remove action card from player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 77,
      "type": "IssueType.noAssertions",
      "message": "Test \"should successfully remove action card from player\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 91,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return drawn action card when available\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 91,
      "type": "IssueType.missingReason",
      "message": "Test \"should return drawn action card when available\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 106,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null when no action cards available to draw\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 106,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null when no action cards available to draw\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 117,
      "type": "IssueType.namingConvention",
      "message": "Test \"should successfully discard action card\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 117,
      "type": "IssueType.noAssertions",
      "message": "Test \"should successfully discard action card\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 127,
      "type": "IssueType.namingConvention",
      "message": "Test \"should successfully shuffle action cards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 127,
      "type": "IssueType.noAssertions",
      "message": "Test \"should successfully shuffle action cards\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 135,
      "type": "IssueType.namingConvention",
      "message": "Test \"should propagate exception when adding card to player with full hand\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 135,
      "type": "IssueType.missingReason",
      "message": "Test \"should propagate exception when adding card to player with full hand\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 154,
      "type": "IssueType.namingConvention",
      "message": "Test \"should propagate exception when removing card player does not have\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/action_card_repository_impl_test.dart",
      "line": 154,
      "type": "IssueType.missingReason",
      "message": "Test \"should propagate exception when removing card player does not have\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 20,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return list of available action cards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 20,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return list of available action cards\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 20,
      "type": "IssueType.missingReason",
      "message": "Test \"should return list of available action cards\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 39,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return cards with correct properties\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 39,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return cards with correct properties\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 39,
      "type": "IssueType.missingReason",
      "message": "Test \"should return cards with correct properties\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 52,
      "type": "IssueType.namingConvention",
      "message": "Test \"should throw UnsupportedError for deprecated client-side methods\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 52,
      "type": "IssueType.missingStructure",
      "message": "Test \"should throw UnsupportedError for deprecated client-side methods\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 52,
      "type": "IssueType.missingReason",
      "message": "Test \"should throw UnsupportedError for deprecated client-side methods\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 93,
      "type": "IssueType.namingConvention",
      "message": "Test \"getActionCardByType should return correct card\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 93,
      "type": "IssueType.missingStructure",
      "message": "Test \"getActionCardByType should return correct card\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 93,
      "type": "IssueType.missingReason",
      "message": "Test \"getActionCardByType should return correct card\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 103,
      "type": "IssueType.namingConvention",
      "message": "Test \"getActionCardByType should return null for unknown type\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 103,
      "type": "IssueType.missingStructure",
      "message": "Test \"getActionCardByType should return null for unknown type\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 103,
      "type": "IssueType.missingReason",
      "message": "Test \"getActionCardByType should return null for unknown type\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 121,
      "type": "IssueType.namingConvention",
      "message": "Test \"should correctly identify action timing types\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 121,
      "type": "IssueType.missingStructure",
      "message": "Test \"should correctly identify action timing types\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 121,
      "type": "IssueType.missingReason",
      "message": "Test \"should correctly identify action timing types\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 164,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have all server-side methods defined\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 164,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have all server-side methods defined\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/server_action_card_repository_test.dart",
      "line": 164,
      "type": "IssueType.missingReason",
      "message": "Test \"should have all server-side methods defined\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/supabase_action_card_repository_test.dart",
      "line": 38,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return action cards from datasource\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/supabase_action_card_repository_test.dart",
      "line": 38,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return action cards from datasource\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/supabase_action_card_repository_test.dart",
      "line": 38,
      "type": "IssueType.missingReason",
      "message": "Test \"should return action cards from datasource\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/supabase_action_card_repository_test.dart",
      "line": 60,
      "type": "IssueType.namingConvention",
      "message": "Test \"should manage player card operations successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/supabase_action_card_repository_test.dart",
      "line": 60,
      "type": "IssueType.missingStructure",
      "message": "Test \"should manage player card operations successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/supabase_action_card_repository_test.dart",
      "line": 60,
      "type": "IssueType.noAssertions",
      "message": "Test \"should manage player card operations successfully\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/game/data/repositories/supabase_action_card_repository_test.dart",
      "line": 82,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle deck operations correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/data/repositories/supabase_action_card_repository_test.dart",
      "line": 82,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle deck operations correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/data/repositories/supabase_action_card_repository_test.dart",
      "line": 82,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle deck operations correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/action_card_test.dart",
      "line": 6,
      "type": "IssueType.namingConvention",
      "message": "Test \"should classify card timing behavior correctly for gameplay\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/action_card_test.dart",
      "line": 6,
      "type": "IssueType.missingStructure",
      "message": "Test \"should classify card timing behavior correctly for gameplay\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/action_card_test.dart",
      "line": 57,
      "type": "IssueType.namingConvention",
      "message": "Test \"should serialize to JSON correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/action_card_test.dart",
      "line": 57,
      "type": "IssueType.missingReason",
      "message": "Test \"should serialize to JSON correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/action_card_test.dart",
      "line": 82,
      "type": "IssueType.namingConvention",
      "message": "Test \"should deserialize from JSON correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/action_card_test.dart",
      "line": 82,
      "type": "IssueType.missingReason",
      "message": "Test \"should deserialize from JSON correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/action_card_test.dart",
      "line": 107,
      "type": "IssueType.namingConvention",
      "message": "Test \"should preserve card identity for game state management\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/card_position_test.dart",
      "line": 6,
      "type": "IssueType.namingConvention",
      "message": "Test \"should correctly identify grid positions for game logic\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/card_position_test.dart",
      "line": 6,
      "type": "IssueType.missingStructure",
      "message": "Test \"should correctly identify grid positions for game logic\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/card_position_test.dart",
      "line": 29,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide grid coordinate data for action targeting\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/card_position_test.dart",
      "line": 29,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide grid coordinate data for action targeting\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/card_position_test.dart",
      "line": 56,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support position equality for game state comparison\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/card_position_test.dart",
      "line": 56,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support position equality for game state comparison\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/card_position_test.dart",
      "line": 74,
      "type": "IssueType.namingConvention",
      "message": "Test \"should allow position modification for game moves\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/card_position_test.dart",
      "line": 74,
      "type": "IssueType.missingStructure",
      "message": "Test \"should allow position modification for game moves\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/card_test.dart",
      "line": 233,
      "type": "IssueType.namingConvention",
      "message": "Test \"should_correctly_identify_valid_cards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/card_test.dart",
      "line": 233,
      "type": "IssueType.missingReason",
      "message": "Test \"should_correctly_identify_valid_cards\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/deck_state_test.dart",
      "line": 14,
      "type": "IssueType.namingConvention",
      "message": "Test \"should manage deck state properties correctly for gameplay\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/deck_state_test.dart",
      "line": 14,
      "type": "IssueType.missingStructure",
      "message": "Test \"should manage deck state properties correctly for gameplay\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/deck_state_test.dart",
      "line": 95,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle card operations correctly for game flow\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/deck_state_test.dart",
      "line": 95,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle card operations correctly for game flow\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/deck_state_test.dart",
      "line": 182,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle deck reshuffling behavior for continuous gameplay\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/deck_state_test.dart",
      "line": 182,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle deck reshuffling behavior for continuous gameplay\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/deck_state_test.dart",
      "line": 262,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support value equality\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/deck_state_test.dart",
      "line": 262,
      "type": "IssueType.missingReason",
      "message": "Test \"should support value equality\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/deck_state_test.dart",
      "line": 282,
      "type": "IssueType.namingConvention",
      "message": "Test \"should serialize to and from JSON\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/deck_state_test.dart",
      "line": 282,
      "type": "IssueType.missingReason",
      "message": "Test \"should serialize to and from JSON\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/deck_state_test.dart",
      "line": 299,
      "type": "IssueType.namingConvention",
      "message": "Test \"should copy with modifications\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/deck_state_test.dart",
      "line": 299,
      "type": "IssueType.missingReason",
      "message": "Test \"should copy with modifications\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_player_test.dart",
      "line": 9,
      "type": "IssueType.namingConvention",
      "message": "Test \"should expand action card options when receiving new cards during gameplay\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_player_test.dart",
      "line": 9,
      "type": "IssueType.missingStructure",
      "message": "Test \"should expand action card options when receiving new cards during gameplay\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_player_test.dart",
      "line": 47,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enforce hand limit to maintain game balance when action cards are abundant\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_player_test.dart",
      "line": 47,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enforce hand limit to maintain game balance when action cards are abundant\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_player_test.dart",
      "line": 91,
      "type": "IssueType.namingConvention",
      "message": "Test \"should allow strategic card usage by removing cards from hand\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_player_test.dart",
      "line": 91,
      "type": "IssueType.missingStructure",
      "message": "Test \"should allow strategic card usage by removing cards from hand\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_player_test.dart",
      "line": 138,
      "type": "IssueType.namingConvention",
      "message": "Test \"should calculate meaningful score for competitive ranking during end game\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_player_test.dart",
      "line": 138,
      "type": "IssueType.missingStructure",
      "message": "Test \"should calculate meaningful score for competitive ranking during end game\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 28,
      "type": "IssueType.namingConvention",
      "message": "Test \"should initialize game with waiting status when created\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 28,
      "type": "IssueType.missingStructure",
      "message": "Test \"should initialize game with waiting status when created\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 28,
      "type": "IssueType.missingReason",
      "message": "Test \"should initialize game with waiting status when created\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 42,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return first player as current player when game starts\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 42,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return first player as current player when game starts\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 42,
      "type": "IssueType.missingReason",
      "message": "Test \"should return first player as current player when game starts\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 48,
      "type": "IssueType.namingConvention",
      "message": "Test \"should advance turn to next player in clockwise direction when turn ends\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 48,
      "type": "IssueType.missingStructure",
      "message": "Test \"should advance turn to next player in clockwise direction when turn ends\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 48,
      "type": "IssueType.missingReason",
      "message": "Test \"should advance turn to next player in clockwise direction when turn ends\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 63,
      "type": "IssueType.namingConvention",
      "message": "Test \"should advance turn to previous player when direction is counter-clockwise\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 63,
      "type": "IssueType.missingStructure",
      "message": "Test \"should advance turn to previous player when direction is counter-clockwise\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 63,
      "type": "IssueType.missingReason",
      "message": "Test \"should advance turn to previous player when direction is counter-clockwise\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 79,
      "type": "IssueType.namingConvention",
      "message": "Test \"should loop back to first player when last player finishes turn\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 79,
      "type": "IssueType.missingStructure",
      "message": "Test \"should loop back to first player when last player finishes turn\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 79,
      "type": "IssueType.missingReason",
      "message": "Test \"should loop back to first player when last player finishes turn\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 91,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide top card from deck when player draws\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 91,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide top card from deck when player draws\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 91,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide top card from deck when player draws\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 101,
      "type": "IssueType.namingConvention",
      "message": "Test \"should recycle discard pile into deck when no cards remain to draw\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 101,
      "type": "IssueType.missingStructure",
      "message": "Test \"should recycle discard pile into deck when no cards remain to draw\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 101,
      "type": "IssueType.missingReason",
      "message": "Test \"should recycle discard pile into deck when no cards remain to draw\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 124,
      "type": "IssueType.namingConvention",
      "message": "Test \"should discard card\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 124,
      "type": "IssueType.missingStructure",
      "message": "Test \"should discard card\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 124,
      "type": "IssueType.missingReason",
      "message": "Test \"should discard card\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 133,
      "type": "IssueType.namingConvention",
      "message": "Test \"should check if game can start\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 133,
      "type": "IssueType.missingStructure",
      "message": "Test \"should check if game can start\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 133,
      "type": "IssueType.missingReason",
      "message": "Test \"should check if game can start\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 146,
      "type": "IssueType.namingConvention",
      "message": "Test \"should detect end of round when player reveals all cards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 146,
      "type": "IssueType.missingStructure",
      "message": "Test \"should detect end of round when player reveals all cards\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 146,
      "type": "IssueType.missingReason",
      "message": "Test \"should detect end of round when player reveals all cards\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 169,
      "type": "IssueType.namingConvention",
      "message": "Test \"should check if all players finished last round\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 169,
      "type": "IssueType.missingStructure",
      "message": "Test \"should check if all players finished last round\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 169,
      "type": "IssueType.missingReason",
      "message": "Test \"should check if all players finished last round\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 182,
      "type": "IssueType.namingConvention",
      "message": "Test \"should calculate scores with penalty for initiator\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 182,
      "type": "IssueType.missingStructure",
      "message": "Test \"should calculate scores with penalty for initiator\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 182,
      "type": "IssueType.missingReason",
      "message": "Test \"should calculate scores with penalty for initiator\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 209,
      "type": "IssueType.namingConvention",
      "message": "Test \"should be a pure domain entity without JSON serialization coupling\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 209,
      "type": "IssueType.missingStructure",
      "message": "Test \"should be a pure domain entity without JSON serialization coupling\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 209,
      "type": "IssueType.missingReason",
      "message": "Test \"should be a pure domain entity without JSON serialization coupling\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 228,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain all core business logic methods for game flow\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 228,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain all core business logic methods for game flow\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 228,
      "type": "IssueType.missingReason",
      "message": "Test \"should maintain all core business logic methods for game flow\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 260,
      "type": "IssueType.namingConvention",
      "message": "Test \"should work with immutability pattern using copyWith\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/game_state_test.dart",
      "line": 260,
      "type": "IssueType.missingStructure",
      "message": "Test \"should work with immutability pattern using copyWith\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/player_grid_test.dart",
      "line": 8,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable strategic card placement and management during gameplay\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/player_grid_test.dart",
      "line": 8,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable strategic card placement and management during gameplay\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/player_grid_test.dart",
      "line": 31,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support progressive card revelation for information discovery\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/player_grid_test.dart",
      "line": 31,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support progressive card revelation for information discovery\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/player_grid_test.dart",
      "line": 57,
      "type": "IssueType.namingConvention",
      "message": "Test \"should calculate competitive score reflecting player performance\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/player_grid_test.dart",
      "line": 57,
      "type": "IssueType.missingStructure",
      "message": "Test \"should calculate competitive score reflecting player performance\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/player_grid_test.dart",
      "line": 78,
      "type": "IssueType.namingConvention",
      "message": "Test \"should trigger round end detection when all cards are revealed\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/player_grid_test.dart",
      "line": 78,
      "type": "IssueType.missingStructure",
      "message": "Test \"should trigger round end detection when all cards are revealed\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/player_grid_test.dart",
      "line": 78,
      "type": "IssueType.missingReason",
      "message": "Test \"should trigger round end detection when all cards are revealed\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/player_grid_test.dart",
      "line": 105,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enforce column elimination rule when three identical cards are revealed\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/player_grid_test.dart",
      "line": 105,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enforce column elimination rule when three identical cards are revealed\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/player_grid_test.dart",
      "line": 141,
      "type": "IssueType.namingConvention",
      "message": "Test \"should execute column removal maintaining grid integrity for continued play\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/player_grid_test.dart",
      "line": 141,
      "type": "IssueType.missingStructure",
      "message": "Test \"should execute column removal maintaining grid integrity for continued play\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/player_state_test.dart",
      "line": 7,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track player progress and strategic state throughout gameplay\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/player_state_test.dart",
      "line": 7,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track player progress and strategic state throughout gameplay\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/player_state_test.dart",
      "line": 91,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support immutable state transitions for reliable game updates\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/player_state_test.dart",
      "line": 91,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support immutable state transitions for reliable game updates\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/player_state_test.dart",
      "line": 144,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain value equality for consistent game state comparison\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/player_state_test.dart",
      "line": 144,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain value equality for consistent game state comparison\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/entities/player_state_test.dart",
      "line": 185,
      "type": "IssueType.namingConvention",
      "message": "Test \"should serialize state for network synchronization in multiplayer games\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/entities/player_state_test.dart",
      "line": 185,
      "type": "IssueType.missingStructure",
      "message": "Test \"should serialize state for network synchronization in multiplayer games\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/calculate_scores_test.dart",
      "line": 434,
      "type": "IssueType.namingConvention",
      "message": "Test \"should_calculate_scores_for_multiple_players_independently\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 16,
      "type": "IssueType.namingConvention",
      "message": "Test \"should continue to next player when not in last round\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 16,
      "type": "IssueType.missingStructure",
      "message": "Test \"should continue to next player when not in last round\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 16,
      "type": "IssueType.missingReason",
      "message": "Test \"should continue to next player when not in last round\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 54,
      "type": "IssueType.namingConvention",
      "message": "Test \"should end game when last player of last round completes turn\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 54,
      "type": "IssueType.missingReason",
      "message": "Test \"should end game when last player of last round completes turn\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 108,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle double penalty rule correctly for round initiator\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 108,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle double penalty rule correctly for round initiator\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 192,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle tied lowest scores correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 192,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle tied lowest scores correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 240,
      "type": "IssueType.namingConvention",
      "message": "Test \"should set finishedAt timestamp when round ends\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 240,
      "type": "IssueType.missingStructure",
      "message": "Test \"should set finishedAt timestamp when round ends\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 240,
      "type": "IssueType.missingReason",
      "message": "Test \"should set finishedAt timestamp when round ends\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 276,
      "type": "IssueType.namingConvention",
      "message": "Test \"should continue last round if not at last player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 276,
      "type": "IssueType.missingStructure",
      "message": "Test \"should continue last round if not at last player\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/check_end_round_test.dart",
      "line": 276,
      "type": "IssueType.missingReason",
      "message": "Test \"should continue last round if not at last player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 17,
      "type": "IssueType.namingConvention",
      "message": "Test \"should discard drawn card successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 17,
      "type": "IssueType.missingStructure",
      "message": "Test \"should discard drawn card successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 17,
      "type": "IssueType.missingReason",
      "message": "Test \"should discard drawn card successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 61,
      "type": "IssueType.namingConvention",
      "message": "Test \"should exchange card with grid successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 61,
      "type": "IssueType.missingStructure",
      "message": "Test \"should exchange card with grid successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 61,
      "type": "IssueType.missingReason",
      "message": "Test \"should exchange card with grid successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 113,
      "type": "IssueType.namingConvention",
      "message": "Test \"should fail if no drawn card\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 113,
      "type": "IssueType.missingStructure",
      "message": "Test \"should fail if no drawn card\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 113,
      "type": "IssueType.missingReason",
      "message": "Test \"should fail if no drawn card\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 149,
      "type": "IssueType.namingConvention",
      "message": "Test \"should fail if not player turn\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 149,
      "type": "IssueType.missingStructure",
      "message": "Test \"should fail if not player turn\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 149,
      "type": "IssueType.missingReason",
      "message": "Test \"should fail if not player turn\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 193,
      "type": "IssueType.namingConvention",
      "message": "Test \"should fail if grid position is empty\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 193,
      "type": "IssueType.missingStructure",
      "message": "Test \"should fail if grid position is empty\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 193,
      "type": "IssueType.missingReason",
      "message": "Test \"should fail if grid position is empty\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 233,
      "type": "IssueType.namingConvention",
      "message": "Test \"should fail if grid position is invalid\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 233,
      "type": "IssueType.missingStructure",
      "message": "Test \"should fail if grid position is invalid\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 233,
      "type": "IssueType.missingReason",
      "message": "Test \"should fail if grid position is invalid\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 273,
      "type": "IssueType.namingConvention",
      "message": "Test \"should wrap around to first player after last player turn\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 273,
      "type": "IssueType.missingStructure",
      "message": "Test \"should wrap around to first player after last player turn\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 273,
      "type": "IssueType.missingReason",
      "message": "Test \"should wrap around to first player after last player turn\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 312,
      "type": "IssueType.namingConvention",
      "message": "Test \"should check for column completion after exchange\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 312,
      "type": "IssueType.missingStructure",
      "message": "Test \"should check for column completion after exchange\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/discard_card_test.dart",
      "line": 312,
      "type": "IssueType.missingReason",
      "message": "Test \"should check for column completion after exchange\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/distribute_cards_test.dart",
      "line": 43,
      "type": "IssueType.namingConvention",
      "message": "Test \"should ensure each player receives exactly their allocated cards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/distribute_cards_test.dart",
      "line": 43,
      "type": "IssueType.missingStructure",
      "message": "Test \"should ensure each player receives exactly their allocated cards\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/distribute_cards_test.dart",
      "line": 128,
      "type": "IssueType.namingConvention",
      "message": "Test \"should reveal 2 initial cards for each player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/distribute_cards_test.dart",
      "line": 128,
      "type": "IssueType.missingStructure",
      "message": "Test \"should reveal 2 initial cards for each player\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/distribute_cards_test.dart",
      "line": 128,
      "type": "IssueType.missingReason",
      "message": "Test \"should reveal 2 initial cards for each player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/distribute_cards_test.dart",
      "line": 167,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create initial discard pile\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/distribute_cards_test.dart",
      "line": 167,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create initial discard pile\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/distribute_cards_test.dart",
      "line": 167,
      "type": "IssueType.missingReason",
      "message": "Test \"should create initial discard pile\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/distribute_cards_test.dart",
      "line": 193,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain unique cards in distribution\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/distribute_cards_test.dart",
      "line": 193,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain unique cards in distribution\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/distribute_cards_test.dart",
      "line": 193,
      "type": "IssueType.missingReason",
      "message": "Test \"should maintain unique cards in distribution\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/distribute_cards_test.dart",
      "line": 244,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle maximum players\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/distribute_cards_test.dart",
      "line": 244,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle maximum players\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/distribute_cards_test.dart",
      "line": 244,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle maximum players\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/draw_action_card_use_case_test.dart",
      "line": 24,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable strategic action card acquisition and constraint management for enhanced competitive gameplay\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/draw_card_test.dart",
      "line": 17,
      "type": "IssueType.namingConvention",
      "message": "Test \"should draw card from deck successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/draw_card_test.dart",
      "line": 17,
      "type": "IssueType.missingStructure",
      "message": "Test \"should draw card from deck successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/draw_card_test.dart",
      "line": 17,
      "type": "IssueType.missingReason",
      "message": "Test \"should draw card from deck successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/draw_card_test.dart",
      "line": 66,
      "type": "IssueType.namingConvention",
      "message": "Test \"should draw card from discard pile successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/draw_card_test.dart",
      "line": 66,
      "type": "IssueType.missingStructure",
      "message": "Test \"should draw card from discard pile successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/draw_card_test.dart",
      "line": 66,
      "type": "IssueType.missingReason",
      "message": "Test \"should draw card from discard pile successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/draw_card_test.dart",
      "line": 113,
      "type": "IssueType.namingConvention",
      "message": "Test \"should fail with appropriate error code when draw conditions are invalid\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/draw_card_test.dart",
      "line": 113,
      "type": "IssueType.missingStructure",
      "message": "Test \"should fail with appropriate error code when draw conditions are invalid\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/draw_card_test.dart",
      "line": 113,
      "type": "IssueType.missingReason",
      "message": "Test \"should fail with appropriate error code when draw conditions are invalid\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/draw_card_test.dart",
      "line": 254,
      "type": "IssueType.namingConvention",
      "message": "Test \"should reshuffle deck when empty except last discard\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/draw_card_test.dart",
      "line": 254,
      "type": "IssueType.missingStructure",
      "message": "Test \"should reshuffle deck when empty except last discard\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/draw_card_test.dart",
      "line": 254,
      "type": "IssueType.missingReason",
      "message": "Test \"should reshuffle deck when empty except last discard\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/end_turn_test.dart",
      "line": 146,
      "type": "IssueType.namingConvention",
      "message": "Test \"should trigger last round when player reveals all cards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/end_turn_test.dart",
      "line": 146,
      "type": "IssueType.missingStructure",
      "message": "Test \"should trigger last round when player reveals all cards\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/end_turn_test.dart",
      "line": 146,
      "type": "IssueType.missingReason",
      "message": "Test \"should trigger last round when player reveals all cards\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/end_turn_test.dart",
      "line": 191,
      "type": "IssueType.namingConvention",
      "message": "Test \"should calculate player score correctly and reject wrong player turns\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/end_turn_test.dart",
      "line": 191,
      "type": "IssueType.missingStructure",
      "message": "Test \"should calculate player score correctly and reject wrong player turns\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/end_turn_test.dart",
      "line": 191,
      "type": "IssueType.missingReason",
      "message": "Test \"should calculate player score correctly and reject wrong player turns\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/game_initialization_use_case_test.dart",
      "line": 72,
      "type": "IssueType.namingConvention",
      "message": "Test \"should initialize game with correct setup\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/game_initialization_use_case_test.dart",
      "line": 129,
      "type": "IssueType.namingConvention",
      "message": "Test \"should throw exception when no players provided\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/game_initialization_use_case_test.dart",
      "line": 129,
      "type": "IssueType.missingReason",
      "message": "Test \"should throw exception when no players provided\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/game_initialization_use_case_test.dart",
      "line": 152,
      "type": "IssueType.namingConvention",
      "message": "Test \"should throw exception when less than 2 players\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/game_initialization_use_case_test.dart",
      "line": 152,
      "type": "IssueType.missingReason",
      "message": "Test \"should throw exception when less than 2 players\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/game_initialization_use_case_test.dart",
      "line": 175,
      "type": "IssueType.namingConvention",
      "message": "Test \"should throw exception when more than 8 players\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/game_initialization_use_case_test.dart",
      "line": 175,
      "type": "IssueType.missingReason",
      "message": "Test \"should throw exception when more than 8 players\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/game_initialization_use_case_test.dart",
      "line": 198,
      "type": "IssueType.namingConvention",
      "message": "Test \"should throw exception when creator not in player list\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/game_initialization_use_case_test.dart",
      "line": 198,
      "type": "IssueType.missingReason",
      "message": "Test \"should throw exception when creator not in player list\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/game_initialization_use_case_test.dart",
      "line": 221,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle repository exceptions gracefully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/game_initialization_use_case_test.dart",
      "line": 221,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle repository exceptions gracefully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/game_initialization_use_case_test.dart",
      "line": 252,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle game state retrieval and streaming\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/game_initialization_use_case_test.dart",
      "line": 252,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle game state retrieval and streaming\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/process_last_round_test.dart",
      "line": 16,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable strategic endgame information asymmetry for competitive advantage\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/process_last_round_test.dart",
      "line": 16,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable strategic endgame information asymmetry for competitive advantage\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/reveal_initial_cards_test.dart",
      "line": 17,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable strategic card reveal system for competitive gameplay initialization\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/reveal_initial_cards_test.dart",
      "line": 17,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable strategic card reveal system for competitive gameplay initialization\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/start_game_test.dart",
      "line": 25,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create fully playable competitive game environment with strategic card distribution\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/start_game_test.dart",
      "line": 25,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create fully playable competitive game environment with strategic card distribution\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/domain/use_cases/use_action_card_use_case_test.dart",
      "line": 19,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable strategic action card usage for competitive gameplay disruption\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/domain/use_cases/use_action_card_use_case_test.dart",
      "line": 19,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable strategic action card usage for competitive gameplay disruption\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/draw_discard_integration_test.dart",
      "line": 26,
      "type": "IssueType.namingConvention",
      "message": "Test \"should trigger draw action when player taps draw pile\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/draw_discard_integration_test.dart",
      "line": 80,
      "type": "IssueType.namingConvention",
      "message": "Test \"should trigger reshuffle action when draw pile is empty\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/draw_discard_integration_test.dart",
      "line": 132,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not trigger actions when not player turn\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/draw_discard_integration_test.dart",
      "line": 132,
      "type": "IssueType.noAssertions",
      "message": "Test \"should not trigger actions when not player turn\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/game/presentation/draw_discard_integration_test.dart",
      "line": 164,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display proper UI animations during discard actions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/draw_discard_integration_test.dart",
      "line": 221,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle multiple draw actions correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/draw_discard_integration_test.dart",
      "line": 221,
      "type": "IssueType.noAssertions",
      "message": "Test \"should handle multiple draw actions correctly\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 9,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable strategic teleport card swapping through dual selection workflow\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 9,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable strategic teleport card swapping through dual selection workflow\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 119,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable tactical card peeking with capacity management for strategic planning\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 119,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable tactical card peeking with capacity management for strategic planning\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 253,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable competitive opponent targeting for multiplayer actions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 253,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable competitive opponent targeting for multiplayer actions\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 352,
      "type": "IssueType.namingConvention",
      "message": "Test \"CardSelectionProvider integration - Steal two-phase\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 352,
      "type": "IssueType.missingStructure",
      "message": "Test \"CardSelectionProvider integration - Steal two-phase\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 352,
      "type": "IssueType.missingReason",
      "message": "Test \"CardSelectionProvider integration - Steal two-phase\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 439,
      "type": "IssueType.namingConvention",
      "message": "Test \"CardSelectionProvider integration - Single card selections\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 439,
      "type": "IssueType.missingStructure",
      "message": "Test \"CardSelectionProvider integration - Single card selections\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 439,
      "type": "IssueType.missingReason",
      "message": "Test \"CardSelectionProvider integration - Single card selections\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 514,
      "type": "IssueType.namingConvention",
      "message": "Test \"Complete selection returns correct data structure\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 514,
      "type": "IssueType.missingStructure",
      "message": "Test \"Complete selection returns correct data structure\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/integration/selectors_integration_test.dart",
      "line": 514,
      "type": "IssueType.missingReason",
      "message": "Test \"Complete selection returns correct data structure\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/action_card_providers_test.dart",
      "line": 52,
      "type": "IssueType.namingConvention",
      "message": "Test \"should update game state when action card is used successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/action_card_providers_test.dart",
      "line": 52,
      "type": "IssueType.missingReason",
      "message": "Test \"should update game state when action card is used successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/action_card_providers_test.dart",
      "line": 123,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle action card usage failure\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/action_card_providers_test.dart",
      "line": 123,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle action card usage failure\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/action_card_providers_test.dart",
      "line": 170,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide available action cards for current player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/action_card_providers_test.dart",
      "line": 170,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide available action cards for current player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/action_card_providers_test.dart",
      "line": 219,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enforce action card timing rules\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/action_card_providers_test.dart",
      "line": 219,
      "type": "IssueType.missingReason",
      "message": "Test \"should enforce action card timing rules\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/action_card_providers_test.dart",
      "line": 244,
      "type": "IssueType.namingConvention",
      "message": "Test \"should limit action cards in hand to maximum allowed\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/action_card_providers_test.dart",
      "line": 244,
      "type": "IssueType.missingReason",
      "message": "Test \"should limit action cards in hand to maximum allowed\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/direction_observer_provider_test.dart",
      "line": 74,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide visual feedback for strategic direction changes affecting player turn order\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/direction_observer_provider_test.dart",
      "line": 74,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide visual feedback for strategic direction changes affecting player turn order\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/direction_observer_provider_test.dart",
      "line": 74,
      "type": "IssueType.noAssertions",
      "message": "Test \"should provide visual feedback for strategic direction changes affecting player turn order\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/game/presentation/providers/direction_observer_provider_test.dart",
      "line": 117,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track direction changes for competitive turn order management\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/direction_observer_provider_test.dart",
      "line": 117,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track direction changes for competitive turn order management\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/direction_observer_provider_test.dart",
      "line": 117,
      "type": "IssueType.noAssertions",
      "message": "Test \"should track direction changes for competitive turn order management\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/game/presentation/providers/game_animation_provider_test.dart",
      "line": 18,
      "type": "IssueType.namingConvention",
      "message": "Test \"should manage visual direction change feedback for competitive turn order awareness\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/game_animation_provider_test.dart",
      "line": 18,
      "type": "IssueType.missingStructure",
      "message": "Test \"should manage visual direction change feedback for competitive turn order awareness\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/game_animation_provider_test.dart",
      "line": 67,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enforce single-animation policy for clear visual communication\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/game_animation_provider_test.dart",
      "line": 67,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enforce single-animation policy for clear visual communication\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 23,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have null initial state\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 23,
      "type": "IssueType.missingReason",
      "message": "Test \"should have null initial state\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 31,
      "type": "IssueType.namingConvention",
      "message": "Test \"should load game state\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 31,
      "type": "IssueType.missingReason",
      "message": "Test \"should load game state\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 68,
      "type": "IssueType.namingConvention",
      "message": "Test \"should update state with function\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 68,
      "type": "IssueType.missingReason",
      "message": "Test \"should update state with function\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 111,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not update state if current state is null\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 111,
      "type": "IssueType.missingReason",
      "message": "Test \"should not update state if current state is null\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 126,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle multiple state updates\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 126,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle multiple state updates\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 184,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide GameInitializationUseCase instance\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 184,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide GameInitializationUseCase instance\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 201,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide same instance on multiple reads\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 201,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide same instance on multiple reads\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 219,
      "type": "IssueType.namingConvention",
      "message": "Test \"should initialize game using provided use case\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/providers/game_state_notifier_test.dart",
      "line": 219,
      "type": "IssueType.missingReason",
      "message": "Test \"should initialize game using provided use case\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 121,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display loading when game state is null\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 121,
      "type": "IssueType.missingReason",
      "message": "Test \"should display loading when game state is null\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 133,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display game components when game state is loaded\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 133,
      "type": "IssueType.missingReason",
      "message": "Test \"should display game components when game state is loaded\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 147,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display app bar with title and exit button\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 147,
      "type": "IssueType.missingReason",
      "message": "Test \"should display app bar with title and exit button\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 159,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show exit dialog when exit button is pressed\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 159,
      "type": "IssueType.missingReason",
      "message": "Test \"should show exit dialog when exit button is pressed\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 174,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display error when current player not found\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 174,
      "type": "IssueType.missingReason",
      "message": "Test \"should display error when current player not found\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 190,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display loading state when room is loading\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 190,
      "type": "IssueType.missingReason",
      "message": "Test \"should display loading state when room is loading\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 203,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display error state when room loading fails\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 203,
      "type": "IssueType.missingReason",
      "message": "Test \"should display error state when room loading fails\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 222,
      "type": "IssueType.namingConvention",
      "message": "Test \"should initialize multiplayer sync on init\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 222,
      "type": "IssueType.missingReason",
      "message": "Test \"should initialize multiplayer sync on init\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 233,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle game over state\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 233,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle game over state\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 246,
      "type": "IssueType.namingConvention",
      "message": "Test \"should pass correct props to child widgets\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 246,
      "type": "IssueType.missingReason",
      "message": "Test \"should pass correct props to child widgets\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 266,
      "type": "IssueType.namingConvention",
      "message": "Test \"should be scrollable\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 266,
      "type": "IssueType.missingReason",
      "message": "Test \"should be scrollable\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 276,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable tactical card exchange through teleportation selection interface\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 276,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable tactical card exchange through teleportation selection interface\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 313,
      "type": "IssueType.namingConvention",
      "message": "Test \"should execute complete strategic card exchange workflow for competitive positioning\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 313,
      "type": "IssueType.missingStructure",
      "message": "Test \"should execute complete strategic card exchange workflow for competitive positioning\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 357,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide strategic cancellation to preserve current positioning\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 357,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide strategic cancellation to preserve current positioning\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 395,
      "type": "IssueType.namingConvention",
      "message": "Test \"should complete strategic exchange execution for competitive positioning optimization\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/screens/game_screen_test.dart",
      "line": 395,
      "type": "IssueType.missingStructure",
      "message": "Test \"should complete strategic exchange execution for competitive positioning optimization\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/spectator_view_integration_test.dart",
      "line": 103,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide comprehensive competitive overview for strategic decision-making\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/spectator_view_integration_test.dart",
      "line": 103,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide comprehensive competitive overview for strategic decision-making\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/spectator_view_integration_test.dart",
      "line": 142,
      "type": "IssueType.namingConvention",
      "message": "Test \"should reveal competitive endgame dynamics through finish indicators\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/spectator_view_integration_test.dart",
      "line": 142,
      "type": "IssueType.missingStructure",
      "message": "Test \"should reveal competitive endgame dynamics through finish indicators\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/spectator_view_integration_test.dart",
      "line": 177,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable real-time strategic adaptation through live state monitoring\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/spectator_view_integration_test.dart",
      "line": 177,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable real-time strategic adaptation through live state monitoring\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/spectator_view_integration_test.dart",
      "line": 240,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide strategic intelligence through progressive information revelation\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/spectator_view_integration_test.dart",
      "line": 240,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide strategic intelligence through progressive information revelation\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/spectator_view_integration_test.dart",
      "line": 286,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display opponent information on different screen sizes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/spectator_view_integration_test.dart",
      "line": 286,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display opponent information on different screen sizes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/spectator_view_integration_test.dart",
      "line": 286,
      "type": "IssueType.missingReason",
      "message": "Test \"should display opponent information on different screen sizes\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/spectator_view_integration_test.dart",
      "line": 309,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track column elimination opportunities for scoring optimization\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/spectator_view_integration_test.dart",
      "line": 309,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track column elimination opportunities for scoring optimization\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/spectator_view_integration_test.dart",
      "line": 309,
      "type": "IssueType.missingReason",
      "message": "Test \"should track column elimination opportunities for scoring optimization\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_draw_pile_widget_test.dart",
      "line": 43,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable strategic action card acquisition when player turn allows\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_draw_pile_widget_test.dart",
      "line": 43,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable strategic action card acquisition when player turn allows\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_draw_pile_widget_test.dart",
      "line": 108,
      "type": "IssueType.namingConvention",
      "message": "Test \"should communicate deck availability for strategic planning\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_draw_pile_widget_test.dart",
      "line": 108,
      "type": "IssueType.missingStructure",
      "message": "Test \"should communicate deck availability for strategic planning\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_draw_pile_widget_test.dart",
      "line": 165,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide interactive feedback for strategic action timing\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_draw_pile_widget_test.dart",
      "line": 165,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide interactive feedback for strategic action timing\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_draw_pile_widget_test.dart",
      "line": 184,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle concurrent draw operations during intense gameplay\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_draw_pile_widget_test.dart",
      "line": 184,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle concurrent draw operations during intense gameplay\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_draw_pile_widget_test.dart",
      "line": 223,
      "type": "IssueType.namingConvention",
      "message": "Test \"should reflect dynamic deck changes for strategic awareness\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_draw_pile_widget_test.dart",
      "line": 223,
      "type": "IssueType.missingStructure",
      "message": "Test \"should reflect dynamic deck changes for strategic awareness\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_hand_widget_test.dart",
      "line": 73,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enforce immediate action card priority for game flow integrity\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_hand_widget_test.dart",
      "line": 73,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enforce immediate action card priority for game flow integrity\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_hand_widget_test.dart",
      "line": 99,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable strategic card activation only during player turn\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_hand_widget_test.dart",
      "line": 99,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable strategic card activation only during player turn\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_hand_widget_test.dart",
      "line": 146,
      "type": "IssueType.namingConvention",
      "message": "Test \"should communicate hand capacity constraints for strategic planning\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_hand_widget_test.dart",
      "line": 146,
      "type": "IssueType.missingStructure",
      "message": "Test \"should communicate hand capacity constraints for strategic planning\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_hand_widget_test.dart",
      "line": 195,
      "type": "IssueType.namingConvention",
      "message": "Test \"should categorize cards by strategic timing for tactical awareness\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_hand_widget_test.dart",
      "line": 195,
      "type": "IssueType.missingStructure",
      "message": "Test \"should categorize cards by strategic timing for tactical awareness\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_hand_widget_test.dart",
      "line": 224,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support strategic card discarding for hand optimization\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_hand_widget_test.dart",
      "line": 224,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support strategic card discarding for hand optimization\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_hand_widget_test.dart",
      "line": 257,
      "type": "IssueType.namingConvention",
      "message": "Test \"should prevent concurrent card activations maintaining game integrity\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_hand_widget_test.dart",
      "line": 257,
      "type": "IssueType.missingStructure",
      "message": "Test \"should prevent concurrent card activations maintaining game integrity\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_hand_widget_test.dart",
      "line": 289,
      "type": "IssueType.namingConvention",
      "message": "Test \"should adapt hand visibility based on strategic context\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_hand_widget_test.dart",
      "line": 289,
      "type": "IssueType.missingStructure",
      "message": "Test \"should adapt hand visibility based on strategic context\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 31,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display action card with name and type\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 31,
      "type": "IssueType.missingReason",
      "message": "Test \"should display action card with name and type\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 52,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show correct timing indicators for all card timings\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 52,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show correct timing indicators for all card timings\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 117,
      "type": "IssueType.namingConvention",
      "message": "Test \"should be tappable when selectable\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 117,
      "type": "IssueType.missingReason",
      "message": "Test \"should be tappable when selectable\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 140,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not be tappable when not selectable\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 140,
      "type": "IssueType.missingReason",
      "message": "Test \"should not be tappable when not selectable\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 167,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show highlight when highlighted\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 167,
      "type": "IssueType.missingReason",
      "message": "Test \"should show highlight when highlighted\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 186,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show description on long press\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 186,
      "type": "IssueType.missingReason",
      "message": "Test \"should show description on long press\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 207,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display correct styling based on card category\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 207,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display correct styling based on card category\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 305,
      "type": "IssueType.namingConvention",
      "message": "Test \"should be properly sized for mobile\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/action_card_widget_test.dart",
      "line": 305,
      "type": "IssueType.missingReason",
      "message": "Test \"should be properly sized for mobile\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_animation_widget_test.dart",
      "line": 17,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide visual feedback for strategic card actions affecting gameplay\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_animation_widget_test.dart",
      "line": 17,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide visual feedback for strategic card actions affecting gameplay\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_animation_widget_test.dart",
      "line": 70,
      "type": "IssueType.namingConvention",
      "message": "Test \"should animate competitive card exchanges for strategic repositioning\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_animation_widget_test.dart",
      "line": 70,
      "type": "IssueType.missingStructure",
      "message": "Test \"should animate competitive card exchanges for strategic repositioning\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_animation_widget_test.dart",
      "line": 128,
      "type": "IssueType.namingConvention",
      "message": "Test \"should differentiate information revelation types for strategic gameplay\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_animation_widget_test.dart",
      "line": 128,
      "type": "IssueType.missingStructure",
      "message": "Test \"should differentiate information revelation types for strategic gameplay\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_animation_widget_test.dart",
      "line": 177,
      "type": "IssueType.namingConvention",
      "message": "Test \"should notify game system when strategic animations complete\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_animation_widget_test.dart",
      "line": 177,
      "type": "IssueType.missingStructure",
      "message": "Test \"should notify game system when strategic animations complete\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_animation_widget_test.dart",
      "line": 216,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle concurrent animation requests maintaining visual clarity\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_animation_widget_test.dart",
      "line": 216,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle concurrent animation requests maintaining visual clarity\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 8,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display placeholder when isPlaceholder is true\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 8,
      "type": "IssueType.missingReason",
      "message": "Test \"should display placeholder when isPlaceholder is true\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 23,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display hidden card when card is not revealed\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 23,
      "type": "IssueType.missingReason",
      "message": "Test \"should display hidden card when card is not revealed\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 41,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display card value when revealed\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 41,
      "type": "IssueType.missingReason",
      "message": "Test \"should display card value when revealed\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 60,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle tap when onTap is provided\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 60,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle tap when onTap is provided\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 81,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle long press when onLongPress is provided\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 81,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle long press when onLongPress is provided\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 104,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show selection border when isSelected is true\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 104,
      "type": "IssueType.missingReason",
      "message": "Test \"should show selection border when isSelected is true\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 125,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show highlight border when isHighlighted is true\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 125,
      "type": "IssueType.missingReason",
      "message": "Test \"should show highlight border when isHighlighted is true\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 147,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display nothing when card is null and not placeholder\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 147,
      "type": "IssueType.missingReason",
      "message": "Test \"should display nothing when card is null and not placeholder\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 164,
      "type": "IssueType.namingConvention",
      "message": "Test \"should apply correct color based on card value\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 164,
      "type": "IssueType.missingReason",
      "message": "Test \"should apply correct color based on card value\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 201,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain aspect ratio of 0.7\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/card_widget_test.dart",
      "line": 201,
      "type": "IssueType.missingReason",
      "message": "Test \"should maintain aspect ratio of 0.7\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 12,
      "type": "IssueType.namingConvention",
      "message": "Test \"should allow player to draw card during their turn\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 12,
      "type": "IssueType.missingReason",
      "message": "Test \"should allow player to draw card during their turn\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 44,
      "type": "IssueType.namingConvention",
      "message": "Test \"should prevent drawing when not player turn\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 44,
      "type": "IssueType.missingReason",
      "message": "Test \"should prevent drawing when not player turn\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 69,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide clear feedback about whose turn it is\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 69,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide clear feedback about whose turn it is\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 69,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide clear feedback about whose turn it is\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 107,
      "type": "IssueType.namingConvention",
      "message": "Test \"should accept discarded cards from player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 107,
      "type": "IssueType.missingReason",
      "message": "Test \"should accept discarded cards from player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 138,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle empty draw pile and trigger reshuffle\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 138,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle empty draw pile and trigger reshuffle\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 169,
      "type": "IssueType.namingConvention",
      "message": "Test \"should block all interactions during game pause\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 169,
      "type": "IssueType.missingReason",
      "message": "Test \"should block all interactions during game pause\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 210,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show game progression info\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/common_area_widget_test.dart",
      "line": 210,
      "type": "IssueType.missingReason",
      "message": "Test \"should show game progression info\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/deck_and_discard_widget_test.dart",
      "line": 31,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable strategic draw decisions between hidden risk and known values\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/deck_and_discard_widget_test.dart",
      "line": 31,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable strategic draw decisions between hidden risk and known values\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/deck_and_discard_widget_test.dart",
      "line": 68,
      "type": "IssueType.namingConvention",
      "message": "Test \"should reveal discard value enabling strategic risk assessment\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/deck_and_discard_widget_test.dart",
      "line": 68,
      "type": "IssueType.missingStructure",
      "message": "Test \"should reveal discard value enabling strategic risk assessment\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/deck_and_discard_widget_test.dart",
      "line": 105,
      "type": "IssueType.namingConvention",
      "message": "Test \"should force deck-only strategy when discard empty\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/deck_and_discard_widget_test.dart",
      "line": 105,
      "type": "IssueType.missingStructure",
      "message": "Test \"should force deck-only strategy when discard empty\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/deck_and_discard_widget_test.dart",
      "line": 126,
      "type": "IssueType.namingConvention",
      "message": "Test \"should execute strategic draw choices based on game context and turn rules\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/deck_and_discard_widget_test.dart",
      "line": 126,
      "type": "IssueType.missingStructure",
      "message": "Test \"should execute strategic draw choices based on game context and turn rules\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/deck_and_discard_widget_test.dart",
      "line": 192,
      "type": "IssueType.namingConvention",
      "message": "Test \"should communicate strategic draw opportunities through visual indicators\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/deck_and_discard_widget_test.dart",
      "line": 192,
      "type": "IssueType.missingStructure",
      "message": "Test \"should communicate strategic draw opportunities through visual indicators\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/deck_and_discard_widget_test.dart",
      "line": 241,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track deck depletion for endgame strategic planning\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/deck_and_discard_widget_test.dart",
      "line": 241,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track deck depletion for endgame strategic planning\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/discard_pile_widget_test.dart",
      "line": 10,
      "type": "IssueType.namingConvention",
      "message": "Test \"should reveal strategic information through visible discard values\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/discard_pile_widget_test.dart",
      "line": 10,
      "type": "IssueType.missingStructure",
      "message": "Test \"should reveal strategic information through visible discard values\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/discard_pile_widget_test.dart",
      "line": 59,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable strategic discard actions based on game context\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/discard_pile_widget_test.dart",
      "line": 59,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable strategic discard actions based on game context\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/discard_pile_widget_test.dart",
      "line": 132,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track discard patterns for strategic opponent analysis\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/discard_pile_widget_test.dart",
      "line": 132,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track discard patterns for strategic opponent analysis\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/discard_pile_widget_test.dart",
      "line": 166,
      "type": "IssueType.namingConvention",
      "message": "Test \"should communicate discard accessibility for inclusive gameplay\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/discard_pile_widget_test.dart",
      "line": 166,
      "type": "IssueType.missingStructure",
      "message": "Test \"should communicate discard accessibility for inclusive gameplay\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/discard_pile_widget_test.dart",
      "line": 185,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable strategic card disposal through drag-drop mechanics\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/discard_pile_widget_test.dart",
      "line": 185,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable strategic card disposal through drag-drop mechanics\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 7,
      "type": "IssueType.namingConvention",
      "message": "Test \"should communicate deck availability for strategic draw planning\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 7,
      "type": "IssueType.missingStructure",
      "message": "Test \"should communicate deck availability for strategic draw planning\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 40,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enforce turn-based draw restrictions for competitive fairness\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 40,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enforce turn-based draw restrictions for competitive fairness\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 84,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide visual and interactive feedback for strategic draw opportunities\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 84,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide visual and interactive feedback for strategic draw opportunities\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 84,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide visual and interactive feedback for strategic draw opportunities\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 112,
      "type": "IssueType.namingConvention",
      "message": "Test \"should adapt draw mechanics for endgame reshuffle scenarios\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 112,
      "type": "IssueType.missingStructure",
      "message": "Test \"should adapt draw mechanics for endgame reshuffle scenarios\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 151,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track deck depletion through dynamic visual updates\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 151,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track deck depletion through dynamic visual updates\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 180,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enhance draw interaction through tactile feedback\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 180,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enhance draw interaction through tactile feedback\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 214,
      "type": "IssueType.namingConvention",
      "message": "Test \"should ensure accessible draw mechanics for inclusive gameplay\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/draw_pile_widget_test.dart",
      "line": 214,
      "type": "IssueType.missingStructure",
      "message": "Test \"should ensure accessible draw mechanics for inclusive gameplay\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_animation_overlay_test.dart",
      "line": 11,
      "type": "IssueType.namingConvention",
      "message": "Test \"should communicate strategic turn direction changes affecting all players\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_animation_overlay_test.dart",
      "line": 11,
      "type": "IssueType.missingStructure",
      "message": "Test \"should communicate strategic turn direction changes affecting all players\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_animation_overlay_test.dart",
      "line": 50,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain strategic gameplay visibility during normal play\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_animation_overlay_test.dart",
      "line": 50,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain strategic gameplay visibility during normal play\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_animation_overlay_test.dart",
      "line": 84,
      "type": "IssueType.namingConvention",
      "message": "Test \"should ensure strategic communication completes before gameplay resumes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_animation_overlay_test.dart",
      "line": 84,
      "type": "IssueType.missingStructure",
      "message": "Test \"should ensure strategic communication completes before gameplay resumes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_animation_overlay_test.dart",
      "line": 130,
      "type": "IssueType.namingConvention",
      "message": "Test \"should overlay strategic notifications without disrupting game state visibility\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_animation_overlay_test.dart",
      "line": 130,
      "type": "IssueType.missingStructure",
      "message": "Test \"should overlay strategic notifications without disrupting game state visibility\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_animation_overlay_test.dart",
      "line": 190,
      "type": "IssueType.namingConvention",
      "message": "Test \"should manage rapid strategic actions preventing visual confusion\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_animation_overlay_test.dart",
      "line": 190,
      "type": "IssueType.missingStructure",
      "message": "Test \"should manage rapid strategic actions preventing visual confusion\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_animation_overlay_test.dart",
      "line": 230,
      "type": "IssueType.namingConvention",
      "message": "Test \"should accurately communicate strategic direction changes for turn planning\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_animation_overlay_test.dart",
      "line": 230,
      "type": "IssueType.missingStructure",
      "message": "Test \"should accurately communicate strategic direction changes for turn planning\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 27,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not show overlay when not selecting\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 27,
      "type": "IssueType.missingStructure",
      "message": "Test \"should not show overlay when not selecting\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 27,
      "type": "IssueType.missingReason",
      "message": "Test \"should not show overlay when not selecting\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 52,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show modal overlay when selecting opponents\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 52,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show modal overlay when selecting opponents\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 52,
      "type": "IssueType.missingReason",
      "message": "Test \"should show modal overlay when selecting opponents\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 93,
      "type": "IssueType.namingConvention",
      "message": "Test \"should allow selecting an opponent\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 93,
      "type": "IssueType.missingStructure",
      "message": "Test \"should allow selecting an opponent\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 93,
      "type": "IssueType.missingReason",
      "message": "Test \"should allow selecting an opponent\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 131,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show cancel button during selection\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 131,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show cancel button during selection\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 131,
      "type": "IssueType.missingReason",
      "message": "Test \"should show cancel button during selection\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 171,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show contextual modal for card selection from discard\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 171,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show contextual modal for card selection from discard\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 171,
      "type": "IssueType.noAssertions",
      "message": "Test \"should show contextual modal for card selection from discard\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 196,
      "type": "IssueType.namingConvention",
      "message": "Test \"should animate overlay appearance\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 196,
      "type": "IssueType.missingStructure",
      "message": "Test \"should animate overlay appearance\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 196,
      "type": "IssueType.missingReason",
      "message": "Test \"should animate overlay appearance\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 238,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show player avatars in grid layout\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 238,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show player avatars in grid layout\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 238,
      "type": "IssueType.missingReason",
      "message": "Test \"should show player avatars in grid layout\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 272,
      "type": "IssueType.namingConvention",
      "message": "Test \"should highlight selected opponent\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 272,
      "type": "IssueType.missingStructure",
      "message": "Test \"should highlight selected opponent\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 272,
      "type": "IssueType.missingReason",
      "message": "Test \"should highlight selected opponent\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 327,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle empty player list gracefully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 327,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle empty player list gracefully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 327,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle empty player list gracefully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 359,
      "type": "IssueType.namingConvention",
      "message": "Test \"should close overlay on background tap\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 359,
      "type": "IssueType.missingStructure",
      "message": "Test \"should close overlay on background tap\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 359,
      "type": "IssueType.missingReason",
      "message": "Test \"should close overlay on background tap\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 397,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show confirmation dialog for dangerous actions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 397,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show confirmation dialog for dangerous actions\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/game_selection_overlay_test.dart",
      "line": 397,
      "type": "IssueType.noAssertions",
      "message": "Test \"should show confirmation dialog for dangerous actions\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 70,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display all opponents\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 70,
      "type": "IssueType.missingReason",
      "message": "Test \"should display all opponents\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 88,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not display current player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 88,
      "type": "IssueType.missingReason",
      "message": "Test \"should not display current player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 106,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display nothing when no opponents\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 106,
      "type": "IssueType.missingReason",
      "message": "Test \"should display nothing when no opponents\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 130,
      "type": "IssueType.namingConvention",
      "message": "Test \"should scroll horizontally\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 130,
      "type": "IssueType.missingReason",
      "message": "Test \"should scroll horizontally\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 149,
      "type": "IssueType.namingConvention",
      "message": "Test \"should highlight current turn player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 149,
      "type": "IssueType.missingReason",
      "message": "Test \"should highlight current turn player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 178,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle player tap when callback provided\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 178,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle player tap when callback provided\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 205,
      "type": "IssueType.namingConvention",
      "message": "Test \"should convert player to PlayerState correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 205,
      "type": "IssueType.missingReason",
      "message": "Test \"should convert player to PlayerState correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 233,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have correct spacing between opponents\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 233,
      "type": "IssueType.missingReason",
      "message": "Test \"should have correct spacing between opponents\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 260,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have fixed height container\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 260,
      "type": "IssueType.missingReason",
      "message": "Test \"should have fixed height container\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 285,
      "type": "IssueType.namingConvention",
      "message": "Test \"should set fixed width for each opponent\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 285,
      "type": "IssueType.missingReason",
      "message": "Test \"should set fixed width for each opponent\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 348,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display opponents in grid layout\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 348,
      "type": "IssueType.missingReason",
      "message": "Test \"should display opponents in grid layout\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 367,
      "type": "IssueType.namingConvention",
      "message": "Test \"should use correct cross axis count\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 367,
      "type": "IssueType.missingReason",
      "message": "Test \"should use correct cross axis count\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 388,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not scroll\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponents_view_widget_test.dart",
      "line": 388,
      "type": "IssueType.missingReason",
      "message": "Test \"should not scroll\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 36,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display player information\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 36,
      "type": "IssueType.missingReason",
      "message": "Test \"should display player information\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 77,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show current player indicator when isCurrentPlayer is true\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 77,
      "type": "IssueType.missingReason",
      "message": "Test \"should show current player indicator when isCurrentPlayer is true\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 104,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display mini grid with 12 cards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 104,
      "type": "IssueType.missingReason",
      "message": "Test \"should display mini grid with 12 cards\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 127,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display revealed cards with values\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 127,
      "type": "IssueType.missingReason",
      "message": "Test \"should display revealed cards with values\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 159,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle tap when onTap is provided\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 159,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle tap when onTap is provided\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 182,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display finish flag when player has finished\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 182,
      "type": "IssueType.missingReason",
      "message": "Test \"should display finish flag when player has finished\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 201,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display player avatar with initials\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 201,
      "type": "IssueType.missingReason",
      "message": "Test \"should display player avatar with initials\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 216,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display statistics correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 216,
      "type": "IssueType.missingReason",
      "message": "Test \"should display statistics correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 233,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle empty cards in grid\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 233,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle empty cards in grid\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 270,
      "type": "IssueType.namingConvention",
      "message": "Test \"should apply correct color for different card colors\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 270,
      "type": "IssueType.missingReason",
      "message": "Test \"should apply correct color for different card colors\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 318,
      "type": "IssueType.namingConvention",
      "message": "Test \"should animate container when properties change\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/opponent_grid_widget_test.dart",
      "line": 318,
      "type": "IssueType.missingReason",
      "message": "Test \"should animate container when properties change\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 240,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide correct selected positions from selection state\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 240,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide correct selected positions from selection state\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 240,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide correct selected positions from selection state\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 19,
      "type": "IssueType.namingConvention",
      "message": "Test \"should integrate with CardSelectionProvider\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 19,
      "type": "IssueType.missingStructure",
      "message": "Test \"should integrate with CardSelectionProvider\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 19,
      "type": "IssueType.missingReason",
      "message": "Test \"should integrate with CardSelectionProvider\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 58,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show selection instructions when in teleport mode\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 58,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show selection instructions when in teleport mode\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 58,
      "type": "IssueType.missingReason",
      "message": "Test \"should show selection instructions when in teleport mode\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 94,
      "type": "IssueType.namingConvention",
      "message": "Test \"should update instruction text as selection progresses\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 94,
      "type": "IssueType.missingStructure",
      "message": "Test \"should update instruction text as selection progresses\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 94,
      "type": "IssueType.missingReason",
      "message": "Test \"should update instruction text as selection progresses\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 145,
      "type": "IssueType.namingConvention",
      "message": "Test \"should call onTeleportComplete when selection is confirmed\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 145,
      "type": "IssueType.missingStructure",
      "message": "Test \"should call onTeleportComplete when selection is confirmed\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 145,
      "type": "IssueType.missingReason",
      "message": "Test \"should call onTeleportComplete when selection is confirmed\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 194,
      "type": "IssueType.namingConvention",
      "message": "Test \"should cancel selection when cancel button is tapped\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 194,
      "type": "IssueType.missingStructure",
      "message": "Test \"should cancel selection when cancel button is tapped\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_simple_test.dart",
      "line": 194,
      "type": "IssueType.missingReason",
      "message": "Test \"should cancel selection when cancel button is tapped\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_test.dart",
      "line": 31,
      "type": "IssueType.namingConvention",
      "message": "Test \"should render PlayerGridWidget with selection integration\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_test.dart",
      "line": 31,
      "type": "IssueType.missingStructure",
      "message": "Test \"should render PlayerGridWidget with selection integration\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_test.dart",
      "line": 31,
      "type": "IssueType.missingReason",
      "message": "Test \"should render PlayerGridWidget with selection integration\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_test.dart",
      "line": 52,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show selection state when teleport mode is active\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_test.dart",
      "line": 52,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show selection state when teleport mode is active\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_test.dart",
      "line": 52,
      "type": "IssueType.missingReason",
      "message": "Test \"should show selection state when teleport mode is active\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_test.dart",
      "line": 86,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle card selection when in teleport mode\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_test.dart",
      "line": 86,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle card selection when in teleport mode\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_test.dart",
      "line": 86,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle card selection when in teleport mode\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_test.dart",
      "line": 125,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle provider overrides correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_test.dart",
      "line": 125,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle provider overrides correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_selection_test.dart",
      "line": 125,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle provider overrides correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 25,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display 3x4 grid of cards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 25,
      "type": "IssueType.missingReason",
      "message": "Test \"should display 3x4 grid of cards\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 37,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display \" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 74,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display grid stats when isCurrentPlayer is true\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 74,
      "type": "IssueType.missingReason",
      "message": "Test \"should display grid stats when isCurrentPlayer is true\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 100,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle card tap when canInteract is true\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 100,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle card tap when canInteract is true\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 131,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not handle tap when canInteract is false\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 131,
      "type": "IssueType.missingReason",
      "message": "Test \"should not handle tap when canInteract is false\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 157,
      "type": "IssueType.namingConvention",
      "message": "Test \"should highlight specified positions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 157,
      "type": "IssueType.missingReason",
      "message": "Test \"should highlight specified positions\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 187,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show selected positions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 187,
      "type": "IssueType.missingReason",
      "message": "Test \"should show selected positions\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 214,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show identical columns indicator\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 214,
      "type": "IssueType.missingReason",
      "message": "Test \"should show identical columns indicator\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 243,
      "type": "IssueType.namingConvention",
      "message": "Test \"should apply correct styling for current player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 243,
      "type": "IssueType.missingReason",
      "message": "Test \"should apply correct styling for current player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 261,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show placeholders when canInteract is true\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 261,
      "type": "IssueType.missingReason",
      "message": "Test \"should show placeholders when canInteract is true\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 286,
      "type": "IssueType.namingConvention",
      "message": "Test \"should calculate correct layout based on constraints\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_grid_widget_test.dart",
      "line": 286,
      "type": "IssueType.missingReason",
      "message": "Test \"should calculate correct layout based on constraints\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_hand_widget_test.dart",
      "line": 8,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable strategic card decision-making for current player only\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_hand_widget_test.dart",
      "line": 8,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable strategic card decision-making for current player only\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_hand_widget_test.dart",
      "line": 76,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide strategic discard decision based on game state constraints\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_hand_widget_test.dart",
      "line": 76,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide strategic discard decision based on game state constraints\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_hand_widget_test.dart",
      "line": 154,
      "type": "IssueType.namingConvention",
      "message": "Test \"should visualize strategic hand position to influence player decisions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_hand_widget_test.dart",
      "line": 154,
      "type": "IssueType.missingStructure",
      "message": "Test \"should visualize strategic hand position to influence player decisions\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/player_hand_widget_test.dart",
      "line": 206,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle edge cases gracefully maintaining game integrity\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/player_hand_widget_test.dart",
      "line": 206,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle edge cases gracefully maintaining game integrity\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 38,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display current player turn\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 38,
      "type": "IssueType.missingReason",
      "message": "Test \"should display current player turn\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 64,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display opponent turn\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 64,
      "type": "IssueType.missingReason",
      "message": "Test \"should display opponent turn\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 90,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show last round indicator when lastRound is true\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 90,
      "type": "IssueType.missingReason",
      "message": "Test \"should show last round indicator when lastRound is true\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 116,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show draw phase status\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 116,
      "type": "IssueType.missingReason",
      "message": "Test \"should show draw phase status\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 136,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show playing status with drawn card\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 136,
      "type": "IssueType.missingReason",
      "message": "Test \"should show playing status with drawn card\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 159,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show finished status\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 159,
      "type": "IssueType.missingReason",
      "message": "Test \"should show finished status\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 179,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show counterclockwise direction\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 179,
      "type": "IssueType.missingReason",
      "message": "Test \"should show counterclockwise direction\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 201,
      "type": "IssueType.namingConvention",
      "message": "Test \"should apply correct styling for current player turn\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/turn_info_widget_test.dart",
      "line": 201,
      "type": "IssueType.missingReason",
      "message": "Test \"should apply correct styling for current player turn\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 8,
      "type": "IssueType.namingConvention",
      "message": "Test \"should wrap child without any visual changes initially\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 8,
      "type": "IssueType.missingStructure",
      "message": "Test \"should wrap child without any visual changes initially\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 8,
      "type": "IssueType.missingReason",
      "message": "Test \"should wrap child without any visual changes initially\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 28,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show pulse animation when activated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 28,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show pulse animation when activated\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 28,
      "type": "IssueType.missingReason",
      "message": "Test \"should show pulse animation when activated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 55,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show highlight effect\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 55,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show highlight effect\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 55,
      "type": "IssueType.missingReason",
      "message": "Test \"should show highlight effect\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 82,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show ripple effect at specific position\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 82,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show ripple effect at specific position\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 82,
      "type": "IssueType.missingReason",
      "message": "Test \"should show ripple effect at specific position\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 111,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show success indicator\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 111,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show success indicator\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 111,
      "type": "IssueType.missingReason",
      "message": "Test \"should show success indicator\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 145,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show error indicator\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 145,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show error indicator\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 145,
      "type": "IssueType.missingReason",
      "message": "Test \"should show error indicator\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 176,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show tooltip on hover\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 176,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show tooltip on hover\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 176,
      "type": "IssueType.missingReason",
      "message": "Test \"should show tooltip on hover\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 210,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle multiple feedbacks gracefully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 210,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle multiple feedbacks gracefully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 210,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle multiple feedbacks gracefully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 239,
      "type": "IssueType.namingConvention",
      "message": "Test \"should apply custom animation duration\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 239,
      "type": "IssueType.missingStructure",
      "message": "Test \"should apply custom animation duration\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 239,
      "type": "IssueType.missingReason",
      "message": "Test \"should apply custom animation duration\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 269,
      "type": "IssueType.namingConvention",
      "message": "Test \"should notify when feedback completes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 269,
      "type": "IssueType.missingStructure",
      "message": "Test \"should notify when feedback completes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 269,
      "type": "IssueType.missingReason",
      "message": "Test \"should notify when feedback completes\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 298,
      "type": "IssueType.namingConvention",
      "message": "Test \"should scale feedback effect with intensity\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 298,
      "type": "IssueType.missingStructure",
      "message": "Test \"should scale feedback effect with intensity\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/game/presentation/widgets/visual_feedback_widget_test.dart",
      "line": 298,
      "type": "IssueType.missingReason",
      "message": "Test \"should scale feedback effect with intensity\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 25,
      "type": "IssueType.namingConvention",
      "message": "Test \"should save score and return with id\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 25,
      "type": "IssueType.missingStructure",
      "message": "Test \"should save score and return with id\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 25,
      "type": "IssueType.missingReason",
      "message": "Test \"should save score and return with id\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 54,
      "type": "IssueType.namingConvention",
      "message": "Test \"should save multiple scores\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 54,
      "type": "IssueType.missingStructure",
      "message": "Test \"should save multiple scores\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 54,
      "type": "IssueType.missingReason",
      "message": "Test \"should save multiple scores\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 99,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return scores for a player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 99,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return scores for a player\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 99,
      "type": "IssueType.missingReason",
      "message": "Test \"should return scores for a player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 137,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return raw top players data\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 137,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return raw top players data\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 137,
      "type": "IssueType.missingReason",
      "message": "Test \"should return raw top players data\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 175,
      "type": "IssueType.namingConvention",
      "message": "Test \"should delete score and return true\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 175,
      "type": "IssueType.missingStructure",
      "message": "Test \"should delete score and return true\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 175,
      "type": "IssueType.missingReason",
      "message": "Test \"should delete score and return true\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 185,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return false when score not found\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 185,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return false when score not found\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 185,
      "type": "IssueType.missingReason",
      "message": "Test \"should return false when score not found\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 197,
      "type": "IssueType.namingConvention",
      "message": "Test \"should delete all player data\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 197,
      "type": "IssueType.missingStructure",
      "message": "Test \"should delete all player data\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 197,
      "type": "IssueType.missingReason",
      "message": "Test \"should delete all player data\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 207,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return 0 when no data found\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 207,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return 0 when no data found\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/datasources/global_score_remote_datasource_test.dart",
      "line": 207,
      "type": "IssueType.missingReason",
      "message": "Test \"should return 0 when no data found\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 44,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create model from JSON with all fields\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 44,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create model from JSON with all fields\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 44,
      "type": "IssueType.missingReason",
      "message": "Test \"should create model from JSON with all fields\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 59,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle null gameEndedAt\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 59,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle null gameEndedAt\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 59,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle null gameEndedAt\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 69,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle boolean values correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 69,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle boolean values correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 69,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle boolean values correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 80,
      "type": "IssueType.namingConvention",
      "message": "Test \"should convert model to JSON with all fields\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 80,
      "type": "IssueType.missingStructure",
      "message": "Test \"should convert model to JSON with all fields\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 80,
      "type": "IssueType.missingReason",
      "message": "Test \"should convert model to JSON with all fields\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 98,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle null gameEndedAt in JSON\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 98,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle null gameEndedAt in JSON\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 98,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle null gameEndedAt in JSON\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 107,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create model from domain entity\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 107,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create model from domain entity\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 107,
      "type": "IssueType.missingReason",
      "message": "Test \"should create model from domain entity\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 137,
      "type": "IssueType.namingConvention",
      "message": "Test \"should convert model to domain entity\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 137,
      "type": "IssueType.missingStructure",
      "message": "Test \"should convert model to domain entity\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 137,
      "type": "IssueType.missingReason",
      "message": "Test \"should convert model to domain entity\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 152,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain null gameEndedAt\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 152,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain null gameEndedAt\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 152,
      "type": "IssueType.missingReason",
      "message": "Test \"should maintain null gameEndedAt\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 161,
      "type": "IssueType.namingConvention",
      "message": "Test \"should include id when not empty\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 161,
      "type": "IssueType.missingStructure",
      "message": "Test \"should include id when not empty\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 161,
      "type": "IssueType.missingReason",
      "message": "Test \"should include id when not empty\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 168,
      "type": "IssueType.namingConvention",
      "message": "Test \"should remove id when empty\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 168,
      "type": "IssueType.missingStructure",
      "message": "Test \"should remove id when empty\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 168,
      "type": "IssueType.missingReason",
      "message": "Test \"should remove id when empty\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 176,
      "type": "IssueType.namingConvention",
      "message": "Test \"should preserve all other fields when removing empty id\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 176,
      "type": "IssueType.missingStructure",
      "message": "Test \"should preserve all other fields when removing empty id\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 176,
      "type": "IssueType.missingReason",
      "message": "Test \"should preserve all other fields when removing empty id\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 196,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create copy with updated fields\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 196,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create copy with updated fields\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 196,
      "type": "IssueType.missingReason",
      "message": "Test \"should create copy with updated fields\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 210,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain original values when not specified\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 210,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain original values when not specified\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 210,
      "type": "IssueType.missingReason",
      "message": "Test \"should maintain original values when not specified\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 227,
      "type": "IssueType.namingConvention",
      "message": "Test \"should be equal when all fields match\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 227,
      "type": "IssueType.missingStructure",
      "message": "Test \"should be equal when all fields match\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 227,
      "type": "IssueType.missingReason",
      "message": "Test \"should be equal when all fields match\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 257,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not be equal when any field differs\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 257,
      "type": "IssueType.missingStructure",
      "message": "Test \"should not be equal when any field differs\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/models/global_score_model_test.dart",
      "line": 257,
      "type": "IssueType.missingReason",
      "message": "Test \"should not be equal when any field differs\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 32,
      "type": "IssueType.namingConvention",
      "message": "Test \"should save score via datasource and convert to domain\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 32,
      "type": "IssueType.missingStructure",
      "message": "Test \"should save score via datasource and convert to domain\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 32,
      "type": "IssueType.missingReason",
      "message": "Test \"should save score via datasource and convert to domain\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 70,
      "type": "IssueType.namingConvention",
      "message": "Test \"should throw exception when datasource fails\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 70,
      "type": "IssueType.missingStructure",
      "message": "Test \"should throw exception when datasource fails\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 70,
      "type": "IssueType.missingReason",
      "message": "Test \"should throw exception when datasource fails\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 92,
      "type": "IssueType.namingConvention",
      "message": "Test \"should save multiple scores and convert to domain\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 92,
      "type": "IssueType.missingStructure",
      "message": "Test \"should save multiple scores and convert to domain\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 92,
      "type": "IssueType.missingReason",
      "message": "Test \"should save multiple scores and convert to domain\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 154,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle empty list\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 154,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle empty list\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 154,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle empty list\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 161,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get scores from datasource and convert to domain\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 161,
      "type": "IssueType.missingStructure",
      "message": "Test \"should get scores from datasource and convert to domain\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 161,
      "type": "IssueType.missingReason",
      "message": "Test \"should get scores from datasource and convert to domain\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 199,
      "type": "IssueType.namingConvention",
      "message": "Test \"should calculate stats from player scores\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 199,
      "type": "IssueType.missingStructure",
      "message": "Test \"should calculate stats from player scores\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 199,
      "type": "IssueType.missingReason",
      "message": "Test \"should calculate stats from player scores\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 238,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null when player has no scores\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 238,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return null when player has no scores\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 238,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null when player has no scores\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 250,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get top players from datasource and convert to PlayerStats\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 250,
      "type": "IssueType.missingStructure",
      "message": "Test \"should get top players from datasource and convert to PlayerStats\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 250,
      "type": "IssueType.missingReason",
      "message": "Test \"should get top players from datasource and convert to PlayerStats\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 292,
      "type": "IssueType.namingConvention",
      "message": "Test \"should delete score via datasource\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 292,
      "type": "IssueType.missingStructure",
      "message": "Test \"should delete score via datasource\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 292,
      "type": "IssueType.missingReason",
      "message": "Test \"should delete score via datasource\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 303,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return false when score not found\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 303,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return false when score not found\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 303,
      "type": "IssueType.missingReason",
      "message": "Test \"should return false when score not found\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 315,
      "type": "IssueType.namingConvention",
      "message": "Test \"should delete all player data via datasource\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 315,
      "type": "IssueType.missingStructure",
      "message": "Test \"should delete all player data via datasource\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 315,
      "type": "IssueType.missingReason",
      "message": "Test \"should delete all player data via datasource\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 326,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return 0 when player has no data\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 326,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return 0 when player has no data\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/data/repositories/supabase_global_score_repository_test.dart",
      "line": 326,
      "type": "IssueType.missingReason",
      "message": "Test \"should return 0 when player has no data\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 6,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create GlobalScore with correct properties\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 6,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create GlobalScore with correct properties\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 6,
      "type": "IssueType.missingReason",
      "message": "Test \"should create GlobalScore with correct properties\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 32,
      "type": "IssueType.namingConvention",
      "message": "Test \"should calculate game duration correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 32,
      "type": "IssueType.missingStructure",
      "message": "Test \"should calculate game duration correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 32,
      "type": "IssueType.missingReason",
      "message": "Test \"should calculate game duration correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 52,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support null gameEndedAt for ongoing games\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 52,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support null gameEndedAt for ongoing games\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 52,
      "type": "IssueType.missingReason",
      "message": "Test \"should support null gameEndedAt for ongoing games\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 70,
      "type": "IssueType.namingConvention",
      "message": "Test \"should be immutable with Freezed\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 70,
      "type": "IssueType.missingStructure",
      "message": "Test \"should be immutable with Freezed\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 70,
      "type": "IssueType.missingReason",
      "message": "Test \"should be immutable with Freezed\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 90,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support json serialization\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 90,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support json serialization\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 90,
      "type": "IssueType.missingReason",
      "message": "Test \"should support json serialization\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 123,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create PlayerStats from list of GlobalScores\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 123,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create PlayerStats from list of GlobalScores\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 123,
      "type": "IssueType.missingReason",
      "message": "Test \"should create PlayerStats from list of GlobalScores\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 173,
      "type": "IssueType.namingConvention",
      "message": "Test \"should calculate win rate correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 173,
      "type": "IssueType.missingStructure",
      "message": "Test \"should calculate win rate correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 173,
      "type": "IssueType.missingReason",
      "message": "Test \"should calculate win rate correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 203,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle empty scores list\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 203,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle empty scores list\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 203,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle empty scores list\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 218,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support json serialization\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 218,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support json serialization\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/entities/global_score_test.dart",
      "line": 218,
      "type": "IssueType.missingReason",
      "message": "Test \"should support json serialization\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 74,
      "type": "IssueType.namingConvention",
      "message": "Test \"should save a new score and return it with generated id\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 74,
      "type": "IssueType.missingStructure",
      "message": "Test \"should save a new score and return it with generated id\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 74,
      "type": "IssueType.missingReason",
      "message": "Test \"should save a new score and return it with generated id\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 100,
      "type": "IssueType.namingConvention",
      "message": "Test \"should throw exception when save fails\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 100,
      "type": "IssueType.missingStructure",
      "message": "Test \"should throw exception when save fails\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 100,
      "type": "IssueType.missingReason",
      "message": "Test \"should throw exception when save fails\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 110,
      "type": "IssueType.namingConvention",
      "message": "Test \"should save multiple scores in batch\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 110,
      "type": "IssueType.missingStructure",
      "message": "Test \"should save multiple scores in batch\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 110,
      "type": "IssueType.missingReason",
      "message": "Test \"should save multiple scores in batch\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 122,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle empty list\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 122,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle empty list\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 122,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle empty list\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 132,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return all scores for a specific player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 132,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return all scores for a specific player\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 132,
      "type": "IssueType.missingReason",
      "message": "Test \"should return all scores for a specific player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 148,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return empty list when player has no scores\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 148,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return empty list when player has no scores\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 148,
      "type": "IssueType.missingReason",
      "message": "Test \"should return empty list when player has no scores\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 160,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return all scores for a specific room\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 160,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return all scores for a specific room\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 160,
      "type": "IssueType.missingReason",
      "message": "Test \"should return all scores for a specific room\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 178,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return calculated stats for a player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 178,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return calculated stats for a player\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 178,
      "type": "IssueType.missingReason",
      "message": "Test \"should return calculated stats for a player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 197,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null when player not found\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 197,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return null when player not found\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 197,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null when player not found\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 209,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return top players by win rate\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 209,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return top players by win rate\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 209,
      "type": "IssueType.missingReason",
      "message": "Test \"should return top players by win rate\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 246,
      "type": "IssueType.namingConvention",
      "message": "Test \"should respect limit parameter\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 246,
      "type": "IssueType.missingStructure",
      "message": "Test \"should respect limit parameter\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 246,
      "type": "IssueType.missingReason",
      "message": "Test \"should respect limit parameter\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 273,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return recent games for a player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 273,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return recent games for a player\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 273,
      "type": "IssueType.missingReason",
      "message": "Test \"should return recent games for a player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 289,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return empty list when no games found\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 289,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return empty list when no games found\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 289,
      "type": "IssueType.missingReason",
      "message": "Test \"should return empty list when no games found\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 301,
      "type": "IssueType.namingConvention",
      "message": "Test \"should delete a score by id\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 301,
      "type": "IssueType.missingStructure",
      "message": "Test \"should delete a score by id\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 301,
      "type": "IssueType.missingReason",
      "message": "Test \"should delete a score by id\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 312,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return false when score not found\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 312,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return false when score not found\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 312,
      "type": "IssueType.missingReason",
      "message": "Test \"should return false when score not found\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 324,
      "type": "IssueType.namingConvention",
      "message": "Test \"should delete all data for a player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 324,
      "type": "IssueType.missingStructure",
      "message": "Test \"should delete all data for a player\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 324,
      "type": "IssueType.missingReason",
      "message": "Test \"should delete all data for a player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 335,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return 0 when player has no data\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 335,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return 0 when player has no data\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/repositories/global_score_repository_test.dart",
      "line": 335,
      "type": "IssueType.missingReason",
      "message": "Test \"should return 0 when player has no data\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 32,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get player stats from repository\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 32,
      "type": "IssueType.missingStructure",
      "message": "Test \"should get player stats from repository\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 32,
      "type": "IssueType.missingReason",
      "message": "Test \"should get player stats from repository\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 53,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null when player has no stats\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 53,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return null when player has no stats\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 53,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null when player has no stats\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 69,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return failure when repository throws exception\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 69,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return failure when repository throws exception\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 69,
      "type": "IssueType.missingReason",
      "message": "Test \"should return failure when repository throws exception\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 85,
      "type": "IssueType.namingConvention",
      "message": "Test \"should calculate correct win rate\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 85,
      "type": "IssueType.missingStructure",
      "message": "Test \"should calculate correct win rate\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 85,
      "type": "IssueType.missingReason",
      "message": "Test \"should calculate correct win rate\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 113,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle empty player ID\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 113,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle empty player ID\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_player_stats_test.dart",
      "line": 113,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle empty player ID\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 56,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get top players from repository with default limit\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 56,
      "type": "IssueType.missingStructure",
      "message": "Test \"should get top players from repository with default limit\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 56,
      "type": "IssueType.missingReason",
      "message": "Test \"should get top players from repository with default limit\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 76,
      "type": "IssueType.namingConvention",
      "message": "Test \"should get top players with custom limit\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 76,
      "type": "IssueType.missingStructure",
      "message": "Test \"should get top players with custom limit\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 76,
      "type": "IssueType.missingReason",
      "message": "Test \"should get top players with custom limit\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 91,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle empty list\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 91,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle empty list\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 91,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle empty list\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 105,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return failure when repository throws exception\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 105,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return failure when repository throws exception\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 105,
      "type": "IssueType.missingReason",
      "message": "Test \"should return failure when repository throws exception\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 119,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle large limit\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 119,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle large limit\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 119,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle large limit\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 132,
      "type": "IssueType.namingConvention",
      "message": "Test \"should filter out players with no games\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 132,
      "type": "IssueType.missingStructure",
      "message": "Test \"should filter out players with no games\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/get_top_players_test.dart",
      "line": 132,
      "type": "IssueType.missingReason",
      "message": "Test \"should filter out players with no games\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 116,
      "type": "IssueType.namingConvention",
      "message": "Test \"should save scores for all players with correct positions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 116,
      "type": "IssueType.missingStructure",
      "message": "Test \"should save scores for all players with correct positions\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 116,
      "type": "IssueType.missingReason",
      "message": "Test \"should save scores for all players with correct positions\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 180,
      "type": "IssueType.namingConvention",
      "message": "Test \"should apply penalty to round initiator if not winner\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 180,
      "type": "IssueType.missingStructure",
      "message": "Test \"should apply penalty to round initiator if not winner\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 180,
      "type": "IssueType.missingReason",
      "message": "Test \"should apply penalty to round initiator if not winner\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 205,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not apply penalty if round initiator is winner\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 205,
      "type": "IssueType.missingStructure",
      "message": "Test \"should not apply penalty if round initiator is winner\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 205,
      "type": "IssueType.missingReason",
      "message": "Test \"should not apply penalty if round initiator is winner\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 230,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return failure when repository throws exception\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 230,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return failure when repository throws exception\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 230,
      "type": "IssueType.missingReason",
      "message": "Test \"should return failure when repository throws exception\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 246,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle game with single player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 246,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle game with single player\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 246,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle game with single player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 270,
      "type": "IssueType.namingConvention",
      "message": "Test \"should set correct game ended time\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 270,
      "type": "IssueType.missingStructure",
      "message": "Test \"should set correct game ended time\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/domain/use_cases/save_global_score_test.dart",
      "line": 270,
      "type": "IssueType.missingReason",
      "message": "Test \"should set correct game ended time\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 44,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide GlobalScoreRepository instance\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 44,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide GlobalScoreRepository instance\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 44,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide GlobalScoreRepository instance\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 51,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide SaveGlobalScoreUseCase\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 51,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide SaveGlobalScoreUseCase\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 51,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide SaveGlobalScoreUseCase\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 56,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide GetPlayerStatsUseCase\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 56,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide GetPlayerStatsUseCase\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 56,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide GetPlayerStatsUseCase\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 61,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide GetTopPlayersUseCase\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 61,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide GetTopPlayersUseCase\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 61,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide GetTopPlayersUseCase\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 80,
      "type": "IssueType.namingConvention",
      "message": "Test \"should fetch player stats successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 80,
      "type": "IssueType.missingStructure",
      "message": "Test \"should fetch player stats successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 80,
      "type": "IssueType.missingReason",
      "message": "Test \"should fetch player stats successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 93,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle null stats\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 93,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle null stats\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 93,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle null stats\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 105,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle errors\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 105,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle errors\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 105,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle errors\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 143,
      "type": "IssueType.namingConvention",
      "message": "Test \"should fetch top players successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 143,
      "type": "IssueType.missingStructure",
      "message": "Test \"should fetch top players successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 143,
      "type": "IssueType.missingReason",
      "message": "Test \"should fetch top players successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 155,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle empty list\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 155,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle empty list\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 155,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle empty list\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 165,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle errors\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 165,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle errors\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 165,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle errors\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 203,
      "type": "IssueType.namingConvention",
      "message": "Test \"should fetch recent games successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 203,
      "type": "IssueType.missingStructure",
      "message": "Test \"should fetch recent games successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 203,
      "type": "IssueType.missingReason",
      "message": "Test \"should fetch recent games successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 219,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle empty list\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 219,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle empty list\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/providers/global_score_providers_test.dart",
      "line": 219,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle empty list\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 91,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display loading indicator when loading\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 91,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display loading indicator when loading\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 91,
      "type": "IssueType.missingReason",
      "message": "Test \"should display loading indicator when loading\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 116,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display game history when loaded\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 116,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display game history when loaded\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 116,
      "type": "IssueType.missingReason",
      "message": "Test \"should display game history when loaded\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 135,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display position correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 135,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display position correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 135,
      "type": "IssueType.missingReason",
      "message": "Test \"should display position correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 145,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show game duration when available\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 145,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show game duration when available\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 145,
      "type": "IssueType.missingReason",
      "message": "Test \"should show game duration when available\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 154,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show round number\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 154,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show round number\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 154,
      "type": "IssueType.missingReason",
      "message": "Test \"should show round number\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 164,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display empty message when no games\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 164,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display empty message when no games\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 164,
      "type": "IssueType.missingReason",
      "message": "Test \"should display empty message when no games\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 173,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display error message on error\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 173,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display error message on error\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 173,
      "type": "IssueType.missingReason",
      "message": "Test \"should display error message on error\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 184,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support pull to refresh\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 184,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support pull to refresh\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 184,
      "type": "IssueType.missingReason",
      "message": "Test \"should support pull to refresh\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 199,
      "type": "IssueType.namingConvention",
      "message": "Test \"should navigate to game details on tap\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 199,
      "type": "IssueType.missingStructure",
      "message": "Test \"should navigate to game details on tap\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 199,
      "type": "IssueType.missingReason",
      "message": "Test \"should navigate to game details on tap\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 220,
      "type": "IssueType.namingConvention",
      "message": "Test \"should format dates in French\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 220,
      "type": "IssueType.missingStructure",
      "message": "Test \"should format dates in French\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/game_history_screen_test.dart",
      "line": 220,
      "type": "IssueType.missingReason",
      "message": "Test \"should format dates in French\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 85,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display loading indicator when loading\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 85,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display loading indicator when loading\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 85,
      "type": "IssueType.missingReason",
      "message": "Test \"should display loading indicator when loading\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 108,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display leaderboard when loaded\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 108,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display leaderboard when loaded\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 108,
      "type": "IssueType.missingReason",
      "message": "Test \"should display leaderboard when loaded\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 126,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display trophy icons for top 3\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 126,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display trophy icons for top 3\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 126,
      "type": "IssueType.missingReason",
      "message": "Test \"should display trophy icons for top 3\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 137,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display player statistics\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 137,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display player statistics\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 137,
      "type": "IssueType.missingReason",
      "message": "Test \"should display player statistics\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 152,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display empty message when no players\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 152,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display empty message when no players\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 152,
      "type": "IssueType.missingReason",
      "message": "Test \"should display empty message when no players\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 161,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display error message on error\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 161,
      "type": "IssueType.missingStructure",
      "message": "Test \"should display error message on error\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 161,
      "type": "IssueType.missingReason",
      "message": "Test \"should display error message on error\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 172,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support pull to refresh\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 172,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support pull to refresh\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 172,
      "type": "IssueType.missingReason",
      "message": "Test \"should support pull to refresh\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 187,
      "type": "IssueType.namingConvention",
      "message": "Test \"should navigate to player details on tap\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 187,
      "type": "IssueType.missingStructure",
      "message": "Test \"should navigate to player details on tap\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 187,
      "type": "IssueType.missingReason",
      "message": "Test \"should navigate to player details on tap\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 208,
      "type": "IssueType.namingConvention",
      "message": "Test \"should sort players by win rate\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 208,
      "type": "IssueType.missingStructure",
      "message": "Test \"should sort players by win rate\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/global_scores/presentation/screens/leaderboard_screen_test.dart",
      "line": 208,
      "type": "IssueType.missingReason",
      "message": "Test \"should sort players by win rate\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/home/presentation/navigation_integration_test.dart",
      "line": 30,
      "type": "IssueType.namingConvention",
      "message": "Test \"should navigate from home to create room\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/home/presentation/navigation_integration_test.dart",
      "line": 30,
      "type": "IssueType.missingReason",
      "message": "Test \"should navigate from home to create room\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/home/presentation/navigation_integration_test.dart",
      "line": 62,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show all routes are configured\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/home/presentation/navigation_integration_test.dart",
      "line": 62,
      "type": "IssueType.missingReason",
      "message": "Test \"should show all routes are configured\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 88,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display app title and logo\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 88,
      "type": "IssueType.missingReason",
      "message": "Test \"should display app title and logo\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 114,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display loading indicator when auth is loading\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 114,
      "type": "IssueType.missingReason",
      "message": "Test \"should display loading indicator when auth is loading\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 132,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display user info when authenticated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 132,
      "type": "IssueType.missingReason",
      "message": "Test \"should display user info when authenticated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 153,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display action buttons when authenticated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 153,
      "type": "IssueType.missingReason",
      "message": "Test \"should display action buttons when authenticated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 178,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show loading when user is null\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 178,
      "type": "IssueType.missingReason",
      "message": "Test \"should show loading when user is null\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 194,
      "type": "IssueType.namingConvention",
      "message": "Test \"should navigate to create room when button is tapped\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 194,
      "type": "IssueType.missingReason",
      "message": "Test \"should navigate to create room when button is tapped\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 219,
      "type": "IssueType.namingConvention",
      "message": "Test \"should navigate to join room when button is tapped\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 219,
      "type": "IssueType.missingReason",
      "message": "Test \"should navigate to join room when button is tapped\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 244,
      "type": "IssueType.namingConvention",
      "message": "Test \"should display error state with retry button\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/home/presentation/screens/home_screen_test.dart",
      "line": 244,
      "type": "IssueType.missingReason",
      "message": "Test \"should display error state with retry button\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/data/converters/game_state_converter_test.dart",
      "line": 64,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable bidirectional game state conversion for multiplayer persistence and synchronization\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/data/converters/game_state_converter_test.dart",
      "line": 64,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable bidirectional game state conversion for multiplayer persistence and synchronization\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/data/converters/game_state_converter_test.dart",
      "line": 193,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle edge cases for robust multiplayer game persistence\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/data/converters/game_state_converter_test.dart",
      "line": 193,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle edge cases for robust multiplayer game persistence\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/data/datasources/supabase_player_datasource_test.dart",
      "line": 22,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable multiplayer player management through database integration\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/data/datasources/supabase_player_datasource_test.dart",
      "line": 22,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable multiplayer player management through database integration\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/data/datasources/supabase_player_datasource_test.dart",
      "line": 86,
      "type": "IssueType.namingConvention",
      "message": "Test \"should execute comprehensive player operations for competitive multiplayer coordination\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/data/datasources/supabase_room_datasource_impl_test.dart",
      "line": 28,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable comprehensive competitive room data management for strategic multiplayer gaming coordination\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/data/datasources/supabase_room_datasource_impl_test.dart",
      "line": 28,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable comprehensive competitive room data management for strategic multiplayer gaming coordination\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/data/models/room_model_test.dart",
      "line": 8,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable comprehensive room data representation and conversion for competitive multiplayer coordination\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/data/models/room_model_test.dart",
      "line": 8,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable comprehensive room data representation and conversion for competitive multiplayer coordination\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/data/models/room_model_test.dart",
      "line": 96,
      "type": "IssueType.namingConvention",
      "message": "Test \"should execute bidirectional JSON serialization for persistent multiplayer room coordination\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/data/models/room_model_test.dart",
      "line": 96,
      "type": "IssueType.missingStructure",
      "message": "Test \"should execute bidirectional JSON serialization for persistent multiplayer room coordination\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/data/models/room_model_test.dart",
      "line": 187,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable comprehensive room status transitions and edge cases for competitive gameplay coordination\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/data/models/room_model_test.dart",
      "line": 187,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable comprehensive room status transitions and edge cases for competitive gameplay coordination\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 32,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable competitive room creation and participant management for strategic multiplayer gaming\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 32,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable competitive room creation and participant management for strategic multiplayer gaming\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 102,
      "type": "IssueType.namingConvention",
      "message": "Test \"should coordinate competitive participant joining for balanced multiplayer room composition\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 102,
      "type": "IssueType.missingStructure",
      "message": "Test \"should coordinate competitive participant joining for balanced multiplayer room composition\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 173,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide real-time room monitoring for synchronized competitive multiplayer coordination\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 173,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide real-time room monitoring for synchronized competitive multiplayer coordination\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 173,
      "type": "IssueType.noAssertions",
      "message": "Test \"should provide real-time room monitoring for synchronized competitive multiplayer coordination\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 206,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track competitive room events for real-time multiplayer participant coordination\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 206,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track competitive room events for real-time multiplayer participant coordination\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 206,
      "type": "IssueType.noAssertions",
      "message": "Test \"should track competitive room events for real-time multiplayer participant coordination\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 234,
      "type": "IssueType.namingConvention",
      "message": "Test \"should coordinate competitive game initialization and room state transition for organized multiplayer matches\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 234,
      "type": "IssueType.missingStructure",
      "message": "Test \"should coordinate competitive game initialization and room state transition for organized multiplayer matches\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 234,
      "type": "IssueType.noAssertions",
      "message": "Test \"should coordinate competitive game initialization and room state transition for organized multiplayer matches\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 309,
      "type": "IssueType.namingConvention",
      "message": "Test \"should discover competitive rooms for strategic multiplayer matchmaking opportunities\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/data/repositories/room_repository_impl_test.dart",
      "line": 309,
      "type": "IssueType.missingStructure",
      "message": "Test \"should discover competitive rooms for strategic multiplayer matchmaking opportunities\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/entities/room_event_test.dart",
      "line": 9,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable comprehensive room event creation and handling for competitive multiplayer coordination\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/domain/entities/room_event_test.dart",
      "line": 9,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable comprehensive room event creation and handling for competitive multiplayer coordination\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/entities/room_event_test.dart",
      "line": 162,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support event serialization for persistent multiplayer communication and synchronization\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/domain/entities/room_event_test.dart",
      "line": 162,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support event serialization for persistent multiplayer communication and synchronization\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/entities/room_test.dart",
      "line": 6,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable complete room lifecycle management for strategic competitive multiplayer gaming\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/domain/entities/room_test.dart",
      "line": 6,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable complete room lifecycle management for strategic competitive multiplayer gaming\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/entities/room_test.dart",
      "line": 122,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain room identity and support persistence for multiplayer game continuity\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/domain/entities/room_test.dart",
      "line": 122,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain room identity and support persistence for multiplayer game continuity\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/use_cases/create_room_use_case_test.dart",
      "line": 19,
      "type": "IssueType.namingConvention",
      "message": "Test \"should successfully establish competitive rooms for strategic multiplayer gaming experiences\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/domain/use_cases/create_room_use_case_test.dart",
      "line": 19,
      "type": "IssueType.missingStructure",
      "message": "Test \"should successfully establish competitive rooms for strategic multiplayer gaming experiences\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/use_cases/create_room_use_case_test.dart",
      "line": 79,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enforce competitive gaming constraints to ensure fair and strategic multiplayer experiences\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/domain/use_cases/create_room_use_case_test.dart",
      "line": 79,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enforce competitive gaming constraints to ensure fair and strategic multiplayer experiences\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/use_cases/join_room_use_case_test.dart",
      "line": 19,
      "type": "IssueType.namingConvention",
      "message": "Test \"should successfully enable competitive multiplayer participation when strategic rooms are available for joining\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/domain/use_cases/join_room_use_case_test.dart",
      "line": 19,
      "type": "IssueType.missingStructure",
      "message": "Test \"should successfully enable competitive multiplayer participation when strategic rooms are available for joining\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/use_cases/join_room_use_case_test.dart",
      "line": 92,
      "type": "IssueType.namingConvention",
      "message": "Test \"when attempting to join non-existent competitive rooms\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/domain/use_cases/join_room_use_case_test.dart",
      "line": 92,
      "type": "IssueType.missingStructure",
      "message": "Test \"when attempting to join non-existent competitive rooms\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/use_cases/join_room_use_case_test.dart",
      "line": 113,
      "type": "IssueType.namingConvention",
      "message": "Test \"when attempting to join active competitive matches in progress\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/domain/use_cases/join_room_use_case_test.dart",
      "line": 113,
      "type": "IssueType.missingStructure",
      "message": "Test \"when attempting to join active competitive matches in progress\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/use_cases/join_room_use_case_test.dart",
      "line": 146,
      "type": "IssueType.namingConvention",
      "message": "Test \"when attempting to join capacity-reached competitive rooms\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/domain/use_cases/join_room_use_case_test.dart",
      "line": 146,
      "type": "IssueType.missingStructure",
      "message": "Test \"when attempting to join capacity-reached competitive rooms\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart",
      "line": 24,
      "type": "IssueType.namingConvention",
      "message": "Test \"should stream real-time game state updates for multiplayer synchronization\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart",
      "line": 24,
      "type": "IssueType.missingStructure",
      "message": "Test \"should stream real-time game state updates for multiplayer synchronization\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart",
      "line": 24,
      "type": "IssueType.missingReason",
      "message": "Test \"should stream real-time game state updates for multiplayer synchronization\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart",
      "line": 72,
      "type": "IssueType.namingConvention",
      "message": "Test \"should determine player action permissions based on turn order\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart",
      "line": 72,
      "type": "IssueType.missingStructure",
      "message": "Test \"should determine player action permissions based on turn order\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart",
      "line": 72,
      "type": "IssueType.missingReason",
      "message": "Test \"should determine player action permissions based on turn order\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart",
      "line": 123,
      "type": "IssueType.namingConvention",
      "message": "Test \"should synchronize card reveal actions across players\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart",
      "line": 123,
      "type": "IssueType.missingStructure",
      "message": "Test \"should synchronize card reveal actions across players\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart",
      "line": 123,
      "type": "IssueType.missingReason",
      "message": "Test \"should synchronize card reveal actions across players\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/create_room_screen_test.dart",
      "line": 56,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enable comprehensive competitive room creation workflow with proper constraints and user feedback\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/create_room_screen_test.dart",
      "line": 56,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enable comprehensive competitive room creation workflow with proper constraints and user feedback\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/create_room_screen_test.dart",
      "line": 269,
      "type": "IssueType.namingConvention",
      "message": "Test \"when user authentication is missing\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/create_room_screen_test.dart",
      "line": 269,
      "type": "IssueType.missingStructure",
      "message": "Test \"when user authentication is missing\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/create_room_screen_test.dart",
      "line": 295,
      "type": "IssueType.namingConvention",
      "message": "Test \"when infrastructure fails during creation\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/create_room_screen_test.dart",
      "line": 295,
      "type": "IssueType.missingStructure",
      "message": "Test \"when infrastructure fails during creation\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/create_room_screen_test.dart",
      "line": 336,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain proper competitive styling and layout for strategic gaming interface\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/create_room_screen_test.dart",
      "line": 336,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain proper competitive styling and layout for strategic gaming interface\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 91,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide comprehensive competitive room discovery and joining experience for strategic multiplayer gaming\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 309,
      "type": "IssueType.namingConvention",
      "message": "Test \"when loading competitive room listings\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 309,
      "type": "IssueType.missingStructure",
      "message": "Test \"when loading competitive room listings\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 327,
      "type": "IssueType.namingConvention",
      "message": "Test \"when no competitive rooms are available for joining\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 327,
      "type": "IssueType.missingStructure",
      "message": "Test \"when no competitive rooms are available for joining\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 377,
      "type": "IssueType.namingConvention",
      "message": "Test \"when competitive infrastructure encounters loading failures\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 377,
      "type": "IssueType.missingStructure",
      "message": "Test \"when competitive infrastructure encounters loading failures\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 418,
      "type": "IssueType.namingConvention",
      "message": "Test \"when user lacks authentication for competitive participation\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 418,
      "type": "IssueType.missingStructure",
      "message": "Test \"when user lacks authentication for competitive participation\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 452,
      "type": "IssueType.namingConvention",
      "message": "Test \"when competitive room joining encounters capacity or infrastructure issues\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 452,
      "type": "IssueType.missingStructure",
      "message": "Test \"when competitive room joining encounters capacity or infrastructure issues\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 502,
      "type": "IssueType.namingConvention",
      "message": "Test \"when competitive room joining returns unexpected results\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 502,
      "type": "IssueType.missingStructure",
      "message": "Test \"when competitive room joining returns unexpected results\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 550,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide comprehensive time formatting for competitive room freshness assessment\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 550,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide comprehensive time formatting for competitive room freshness assessment\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 613,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain proper competitive styling and interface polish for strategic gaming\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/join_room_screen_test.dart",
      "line": 613,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain proper competitive styling and interface polish for strategic gaming\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 95,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide comprehensive competitive room lobby experience for strategic multiplayer gaming preparation\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 95,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide comprehensive competitive room lobby experience for strategic multiplayer gaming preparation\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 261,
      "type": "IssueType.namingConvention",
      "message": "Test \"when sufficient participants are available for competitive launch\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 261,
      "type": "IssueType.missingStructure",
      "message": "Test \"when sufficient participants are available for competitive launch\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 311,
      "type": "IssueType.namingConvention",
      "message": "Test \"when insufficient participants prevent competitive launch\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 311,
      "type": "IssueType.missingStructure",
      "message": "Test \"when insufficient participants prevent competitive launch\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 350,
      "type": "IssueType.namingConvention",
      "message": "Test \"when excessive participants exceed competitive balance limits\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 350,
      "type": "IssueType.missingStructure",
      "message": "Test \"when excessive participants exceed competitive balance limits\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 397,
      "type": "IssueType.namingConvention",
      "message": "Test \"across all competitive room states\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 397,
      "type": "IssueType.missingStructure",
      "message": "Test \"across all competitive room states\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 434,
      "type": "IssueType.namingConvention",
      "message": "Test \"for maximum competitive capacity scenarios\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 434,
      "type": "IssueType.missingStructure",
      "message": "Test \"for maximum competitive capacity scenarios\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 479,
      "type": "IssueType.namingConvention",
      "message": "Test \"when competitive room data loading fails\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 479,
      "type": "IssueType.missingStructure",
      "message": "Test \"when competitive room data loading fails\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 503,
      "type": "IssueType.namingConvention",
      "message": "Test \"when competitive room infrastructure encounters errors\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 503,
      "type": "IssueType.missingStructure",
      "message": "Test \"when competitive room infrastructure encounters errors\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 550,
      "type": "IssueType.namingConvention",
      "message": "Test \"when anonymous users participate in competitive rooms\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 550,
      "type": "IssueType.missingStructure",
      "message": "Test \"when anonymous users participate in competitive rooms\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 586,
      "type": "IssueType.namingConvention",
      "message": "Test \"when competitive room is already in active game state\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 586,
      "type": "IssueType.missingStructure",
      "message": "Test \"when competitive room is already in active game state\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 624,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain proper competitive styling and user identification for strategic gaming interface\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/presentation/screens/room_lobby_screen_test.dart",
      "line": 624,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain proper competitive styling and user identification for strategic gaming interface\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/simple_integration_test.dart",
      "line": 12,
      "type": "IssueType.namingConvention",
      "message": "Test \"Room model conversion works correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/simple_integration_test.dart",
      "line": 12,
      "type": "IssueType.missingReason",
      "message": "Test \"Room model conversion works correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/simple_integration_test.dart",
      "line": 36,
      "type": "IssueType.namingConvention",
      "message": "Test \"RoomEvent serialization works\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/simple_integration_test.dart",
      "line": 36,
      "type": "IssueType.missingReason",
      "message": "Test \"RoomEvent serialization works\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/simple_integration_test.dart",
      "line": 51,
      "type": "IssueType.namingConvention",
      "message": "Test \"GameState can be created with players\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/simple_integration_test.dart",
      "line": 51,
      "type": "IssueType.missingReason",
      "message": "Test \"GameState can be created with players\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/simple_integration_test.dart",
      "line": 78,
      "type": "IssueType.namingConvention",
      "message": "Test \"PlayerActionType covers all game actions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/simple_integration_test.dart",
      "line": 78,
      "type": "IssueType.missingReason",
      "message": "Test \"PlayerActionType covers all game actions\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "features/multiplayer/simple_integration_test.dart",
      "line": 96,
      "type": "IssueType.namingConvention",
      "message": "Test \"Room status transitions are valid\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "features/multiplayer/simple_integration_test.dart",
      "line": 96,
      "type": "IssueType.missingReason",
      "message": "Test \"Room status transitions are valid\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_comparison_test.dart",
      "line": 8,
      "type": "IssueType.namingConvention",
      "message": "Test \"should compare freezed files after update\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_comparison_test.dart",
      "line": 8,
      "type": "IssueType.missingStructure",
      "message": "Test \"should compare freezed files after update\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 8,
      "type": "IssueType.namingConvention",
      "message": "Test \"Card should be immutable\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 8,
      "type": "IssueType.missingStructure",
      "message": "Test \"Card should be immutable\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 8,
      "type": "IssueType.missingReason",
      "message": "Test \"Card should be immutable\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 18,
      "type": "IssueType.namingConvention",
      "message": "Test \"PlayerGrid should be immutable\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 18,
      "type": "IssueType.missingStructure",
      "message": "Test \"PlayerGrid should be immutable\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 18,
      "type": "IssueType.missingReason",
      "message": "Test \"PlayerGrid should be immutable\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 28,
      "type": "IssueType.namingConvention",
      "message": "Test \"GamePlayer should be immutable\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 28,
      "type": "IssueType.missingStructure",
      "message": "Test \"GamePlayer should be immutable\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 28,
      "type": "IssueType.missingReason",
      "message": "Test \"GamePlayer should be immutable\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 43,
      "type": "IssueType.namingConvention",
      "message": "Test \"Deep immutability with nested objects\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 43,
      "type": "IssueType.missingStructure",
      "message": "Test \"Deep immutability with nested objects\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 43,
      "type": "IssueType.missingReason",
      "message": "Test \"Deep immutability with nested objects\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 61,
      "type": "IssueType.namingConvention",
      "message": "Test \"Collections should be immutable\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 61,
      "type": "IssueType.missingStructure",
      "message": "Test \"Collections should be immutable\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_immutability_test.dart",
      "line": 61,
      "type": "IssueType.missingReason",
      "message": "Test \"Collections should be immutable\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 11,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support copyWith\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 11,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support copyWith\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 11,
      "type": "IssueType.missingReason",
      "message": "Test \"should support copyWith\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 19,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support equality\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 19,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support equality\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 19,
      "type": "IssueType.missingReason",
      "message": "Test \"should support equality\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 28,
      "type": "IssueType.namingConvention",
      "message": "Test \"should serialize to/from JSON\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 28,
      "type": "IssueType.missingStructure",
      "message": "Test \"should serialize to/from JSON\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 28,
      "type": "IssueType.missingReason",
      "message": "Test \"should serialize to/from JSON\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 36,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle reveal/hide methods\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 36,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle reveal/hide methods\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 36,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle reveal/hide methods\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 48,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support copyWith\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 48,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support copyWith\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 48,
      "type": "IssueType.missingReason",
      "message": "Test \"should support copyWith\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 58,
      "type": "IssueType.namingConvention",
      "message": "Test \"should serialize to/from JSON\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 58,
      "type": "IssueType.missingStructure",
      "message": "Test \"should serialize to/from JSON\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 58,
      "type": "IssueType.missingReason",
      "message": "Test \"should serialize to/from JSON\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 71,
      "type": "IssueType.namingConvention",
      "message": "Test \"should calculate total score correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 71,
      "type": "IssueType.missingStructure",
      "message": "Test \"should calculate total score correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 71,
      "type": "IssueType.missingReason",
      "message": "Test \"should calculate total score correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 82,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support copyWith\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 82,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support copyWith\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 82,
      "type": "IssueType.missingReason",
      "message": "Test \"should support copyWith\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 107,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle initial factory\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 107,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle initial factory\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 107,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle initial factory\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 126,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support copyWith\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 126,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support copyWith\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 126,
      "type": "IssueType.missingReason",
      "message": "Test \"should support copyWith\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 145,
      "type": "IssueType.namingConvention",
      "message": "Test \"should serialize to/from JSON\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 145,
      "type": "IssueType.missingStructure",
      "message": "Test \"should serialize to/from JSON\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 145,
      "type": "IssueType.missingReason",
      "message": "Test \"should serialize to/from JSON\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 163,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create snapshot of current freezed models state\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_models_test.dart",
      "line": 163,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create snapshot of current freezed models state\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_snapshot_test.dart",
      "line": 8,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create snapshot before freezed update\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "freezed_snapshot_test.dart",
      "line": 8,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create snapshot before freezed update\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "freezed_snapshot_test.dart",
      "line": 8,
      "type": "IssueType.missingReason",
      "message": "Test \"should create snapshot before freezed update\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 8,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create card with default values\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 8,
      "type": "IssueType.missingReason",
      "message": "Test \"should create card with default values\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 17,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create custom card with fluent API\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 17,
      "type": "IssueType.missingReason",
      "message": "Test \"should create custom card with fluent API\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 26,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create hidden card\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 26,
      "type": "IssueType.missingReason",
      "message": "Test \"should create hidden card\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 37,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create empty grid with correct dimensions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 37,
      "type": "IssueType.missingReason",
      "message": "Test \"should create empty grid with correct dimensions\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 51,
      "type": "IssueType.namingConvention",
      "message": "Test \"should add cards to specific positions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 51,
      "type": "IssueType.missingReason",
      "message": "Test \"should add cards to specific positions\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 68,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create full grid\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 68,
      "type": "IssueType.missingReason",
      "message": "Test \"should create full grid\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 84,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create player with default values\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 84,
      "type": "IssueType.missingReason",
      "message": "Test \"should create player with default values\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 99,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create custom player\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 99,
      "type": "IssueType.missingReason",
      "message": "Test \"should create custom player\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 115,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create player with full grid\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 115,
      "type": "IssueType.missingReason",
      "message": "Test \"should create player with full grid\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 129,
      "type": "IssueType.namingConvention",
      "message": "Test \"isValidCard should accept valid cards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 129,
      "type": "IssueType.missingReason",
      "message": "Test \"isValidCard should accept valid cards\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 145,
      "type": "IssueType.namingConvention",
      "message": "Test \"hasCurrentScore matcher should match player scores\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 145,
      "type": "IssueType.missingReason",
      "message": "Test \"hasCurrentScore matcher should match player scores\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 166,
      "type": "IssueType.namingConvention",
      "message": "Test \"createTestCard should create cards with custom properties\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 166,
      "type": "IssueType.missingReason",
      "message": "Test \"createTestCard should create cards with custom properties\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 175,
      "type": "IssueType.namingConvention",
      "message": "Test \"createTestGrid should create empty or filled grids\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 175,
      "type": "IssueType.missingReason",
      "message": "Test \"createTestGrid should create empty or filled grids\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 185,
      "type": "IssueType.namingConvention",
      "message": "Test \"createTestPlayer should create players with custom properties\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "helpers/freezed_test_utils_test.dart",
      "line": 185,
      "type": "IssueType.missingReason",
      "message": "Test \"createTestPlayer should create players with custom properties\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 49,
      "type": "IssueType.namingConvention",
      "message": "Test \"should complete full initialization flow successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 49,
      "type": "IssueType.missingStructure",
      "message": "Test \"should complete full initialization flow successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 49,
      "type": "IssueType.missingReason",
      "message": "Test \"should complete full initialization flow successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 59,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle initialization with mock environment variables\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 59,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle initialization with mock environment variables\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 59,
      "type": "IssueType.noAssertions",
      "message": "Test \"should handle initialization with mock environment variables\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 84,
      "type": "IssueType.namingConvention",
      "message": "Test \"should measure initialization performance\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 84,
      "type": "IssueType.missingStructure",
      "message": "Test \"should measure initialization performance\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 102,
      "type": "IssueType.namingConvention",
      "message": "Test \"should initialize services in correct order\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 102,
      "type": "IssueType.missingStructure",
      "message": "Test \"should initialize services in correct order\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 102,
      "type": "IssueType.missingReason",
      "message": "Test \"should initialize services in correct order\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 121,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle initialization failures gracefully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 121,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle initialization failures gracefully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 121,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle initialization failures gracefully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 143,
      "type": "IssueType.namingConvention",
      "message": "Test \"should verify all required services are available after init\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 143,
      "type": "IssueType.missingStructure",
      "message": "Test \"should verify all required services are available after init\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 143,
      "type": "IssueType.missingReason",
      "message": "Test \"should verify all required services are available after init\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 169,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle concurrent initialization attempts\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 169,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle concurrent initialization attempts\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 169,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle concurrent initialization attempts\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 128,
      "type": "IssueType.namingConvention",
      "message": "Test \"should integrate with Flutter app lifecycle\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 128,
      "type": "IssueType.missingStructure",
      "message": "Test \"should integrate with Flutter app lifecycle\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/app_initialization_test.dart",
      "line": 128,
      "type": "IssueType.missingReason",
      "message": "Test \"should integrate with Flutter app lifecycle\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 22,
      "type": "IssueType.namingConvention",
      "message": "Test \"should capture current Supabase initialization behavior\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 22,
      "type": "IssueType.missingStructure",
      "message": "Test \"should capture current Supabase initialization behavior\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 31,
      "type": "IssueType.namingConvention",
      "message": "Test \"should capture current auth configuration\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 31,
      "type": "IssueType.missingStructure",
      "message": "Test \"should capture current auth configuration\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 31,
      "type": "IssueType.missingReason",
      "message": "Test \"should capture current auth configuration\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 42,
      "type": "IssueType.namingConvention",
      "message": "Test \"should capture Realtime channel behavior\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 42,
      "type": "IssueType.missingStructure",
      "message": "Test \"should capture Realtime channel behavior\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 42,
      "type": "IssueType.missingReason",
      "message": "Test \"should capture Realtime channel behavior\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 54,
      "type": "IssueType.namingConvention",
      "message": "Test \"should capture current Sentry options\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 54,
      "type": "IssueType.missingStructure",
      "message": "Test \"should capture current Sentry options\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 54,
      "type": "IssueType.missingReason",
      "message": "Test \"should capture current Sentry options\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 68,
      "type": "IssueType.namingConvention",
      "message": "Test \"should capture error capture behavior\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 68,
      "type": "IssueType.missingStructure",
      "message": "Test \"should capture error capture behavior\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 68,
      "type": "IssueType.missingReason",
      "message": "Test \"should capture error capture behavior\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 79,
      "type": "IssueType.namingConvention",
      "message": "Test \"should document current initialization flow\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 79,
      "type": "IssueType.missingStructure",
      "message": "Test \"should document current initialization flow\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 79,
      "type": "IssueType.missingReason",
      "message": "Test \"should document current initialization flow\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 92,
      "type": "IssueType.namingConvention",
      "message": "Test \"should document current error handling\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 92,
      "type": "IssueType.missingStructure",
      "message": "Test \"should document current error handling\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 92,
      "type": "IssueType.missingReason",
      "message": "Test \"should document current error handling\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 107,
      "type": "IssueType.namingConvention",
      "message": "Test \"should document current environment variable handling\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 107,
      "type": "IssueType.missingStructure",
      "message": "Test \"should document current environment variable handling\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 107,
      "type": "IssueType.missingReason",
      "message": "Test \"should document current environment variable handling\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 117,
      "type": "IssueType.namingConvention",
      "message": "Test \"should document current local storage behavior\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 117,
      "type": "IssueType.missingStructure",
      "message": "Test \"should document current local storage behavior\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 117,
      "type": "IssueType.missingReason",
      "message": "Test \"should document current local storage behavior\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 129,
      "type": "IssueType.namingConvention",
      "message": "Test \"should document current connectivity handling\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 129,
      "type": "IssueType.missingStructure",
      "message": "Test \"should document current connectivity handling\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 129,
      "type": "IssueType.missingReason",
      "message": "Test \"should document current connectivity handling\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 141,
      "type": "IssueType.namingConvention",
      "message": "Test \"should document current path handling\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 141,
      "type": "IssueType.missingStructure",
      "message": "Test \"should document current path handling\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/backend_snapshot_test.dart",
      "line": 141,
      "type": "IssueType.missingReason",
      "message": "Test \"should document current path handling\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 6,
      "type": "IssueType.namingConvention",
      "message": "Test \"should initialize complete game with all components\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 6,
      "type": "IssueType.missingStructure",
      "message": "Test \"should initialize complete game with all components\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 6,
      "type": "IssueType.missingReason",
      "message": "Test \"should initialize complete game with all components\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 35,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enforce proper game constraints\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 35,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enforce proper game constraints\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 35,
      "type": "IssueType.missingReason",
      "message": "Test \"should enforce proper game constraints\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 57,
      "type": "IssueType.namingConvention",
      "message": "Test \"should validate and process card reveals server-side\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 57,
      "type": "IssueType.missingStructure",
      "message": "Test \"should validate and process card reveals server-side\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 57,
      "type": "IssueType.missingReason",
      "message": "Test \"should validate and process card reveals server-side\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 84,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle column completion automatically\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 84,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle column completion automatically\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 84,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle column completion automatically\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 110,
      "type": "IssueType.namingConvention",
      "message": "Test \"should validate action card usage comprehensively\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 110,
      "type": "IssueType.missingStructure",
      "message": "Test \"should validate action card usage comprehensively\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 110,
      "type": "IssueType.missingReason",
      "message": "Test \"should validate action card usage comprehensively\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 130,
      "type": "IssueType.namingConvention",
      "message": "Test \"should process teleport action with position validation\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 130,
      "type": "IssueType.missingStructure",
      "message": "Test \"should process teleport action with position validation\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 130,
      "type": "IssueType.missingReason",
      "message": "Test \"should process teleport action with position validation\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 154,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle immediate vs optional action timing\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 154,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle immediate vs optional action timing\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 154,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle immediate vs optional action timing\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 173,
      "type": "IssueType.namingConvention",
      "message": "Test \"should advance turns in correct order\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 173,
      "type": "IssueType.missingStructure",
      "message": "Test \"should advance turns in correct order\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 173,
      "type": "IssueType.missingReason",
      "message": "Test \"should advance turns in correct order\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 193,
      "type": "IssueType.namingConvention",
      "message": "Test \"should detect end game conditions accurately\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 193,
      "type": "IssueType.missingStructure",
      "message": "Test \"should detect end game conditions accurately\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 193,
      "type": "IssueType.missingReason",
      "message": "Test \"should detect end game conditions accurately\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 218,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide real-time updates via database subscriptions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 218,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide real-time updates via database subscriptions\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 218,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide real-time updates via database subscriptions\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 241,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enforce Row Level Security policies\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 241,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enforce Row Level Security policies\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 241,
      "type": "IssueType.missingReason",
      "message": "Test \"should enforce Row Level Security policies\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 263,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain referential integrity\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 263,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain referential integrity\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 263,
      "type": "IssueType.missingReason",
      "message": "Test \"should maintain referential integrity\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 285,
      "type": "IssueType.namingConvention",
      "message": "Test \"should enforce business logic constraints\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 285,
      "type": "IssueType.missingStructure",
      "message": "Test \"should enforce business logic constraints\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/database_functions_integration_test.dart",
      "line": 285,
      "type": "IssueType.missingReason",
      "message": "Test \"should enforce business logic constraints\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/deep_links_test.dart",
      "line": 27,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle room deep link when authenticated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/deep_links_test.dart",
      "line": 27,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle room deep link when authenticated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/deep_links_test.dart",
      "line": 56,
      "type": "IssueType.namingConvention",
      "message": "Test \"should redirect to home with redirect param when not authenticated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/deep_links_test.dart",
      "line": 56,
      "type": "IssueType.missingReason",
      "message": "Test \"should redirect to home with redirect param when not authenticated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/deep_links_test.dart",
      "line": 96,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle join-room deep link without auth\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/deep_links_test.dart",
      "line": 96,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle join-room deep link without auth\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/deep_links_test.dart",
      "line": 127,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle app scheme deep links\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/deep_links_test.dart",
      "line": 127,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle app scheme deep links\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/deep_links_test.dart",
      "line": 127,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle app scheme deep links\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 6,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support full multiplayer game from start to finish\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 6,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support full multiplayer game from start to finish\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 6,
      "type": "IssueType.missingReason",
      "message": "Test \"should support full multiplayer game from start to finish\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 62,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle concurrent player actions safely\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 62,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle concurrent player actions safely\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 62,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle concurrent player actions safely\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 89,
      "type": "IssueType.namingConvention",
      "message": "Test \"should provide consistent UI experience across all players\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 89,
      "type": "IssueType.missingStructure",
      "message": "Test \"should provide consistent UI experience across all players\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 89,
      "type": "IssueType.missingReason",
      "message": "Test \"should provide consistent UI experience across all players\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 117,
      "type": "IssueType.namingConvention",
      "message": "Test \"should gracefully handle network disconnections\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 117,
      "type": "IssueType.missingStructure",
      "message": "Test \"should gracefully handle network disconnections\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 117,
      "type": "IssueType.missingReason",
      "message": "Test \"should gracefully handle network disconnections\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 137,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle server errors without corrupting game state\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 137,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle server errors without corrupting game state\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 137,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle server errors without corrupting game state\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 160,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain performance under load\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 160,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain performance under load\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 160,
      "type": "IssueType.missingReason",
      "message": "Test \"should maintain performance under load\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 183,
      "type": "IssueType.namingConvention",
      "message": "Test \"should track comprehensive game metrics\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 183,
      "type": "IssueType.missingStructure",
      "message": "Test \"should track comprehensive game metrics\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 183,
      "type": "IssueType.missingReason",
      "message": "Test \"should track comprehensive game metrics\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 204,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support game replay and debugging\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 204,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support game replay and debugging\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 204,
      "type": "IssueType.missingReason",
      "message": "Test \"should support game replay and debugging\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 226,
      "type": "IssueType.namingConvention",
      "message": "Test \"should prevent cheating and manipulation\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 226,
      "type": "IssueType.missingStructure",
      "message": "Test \"should prevent cheating and manipulation\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 226,
      "type": "IssueType.missingReason",
      "message": "Test \"should prevent cheating and manipulation\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 247,
      "type": "IssueType.namingConvention",
      "message": "Test \"should protect player privacy and data\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 247,
      "type": "IssueType.missingStructure",
      "message": "Test \"should protect player privacy and data\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 247,
      "type": "IssueType.missingReason",
      "message": "Test \"should protect player privacy and data\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 269,
      "type": "IssueType.namingConvention",
      "message": "Test \"should scale to support multiple concurrent games\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 269,
      "type": "IssueType.missingStructure",
      "message": "Test \"should scale to support multiple concurrent games\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 269,
      "type": "IssueType.missingReason",
      "message": "Test \"should scale to support multiple concurrent games\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 289,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support future game mode extensions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 289,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support future game mode extensions\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/end_to_end_game_experience_test.dart",
      "line": 289,
      "type": "IssueType.missingReason",
      "message": "Test \"should support future game mode extensions\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/full_integration_test.dart",
      "line": 214,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle complete user session flow\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/full_integration_test.dart",
      "line": 214,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle complete user session flow\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/full_integration_test.dart",
      "line": 214,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle complete user session flow\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/full_integration_test.dart",
      "line": 319,
      "type": "IssueType.namingConvention",
      "message": "Test \"should validate all critical paths are covered\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/full_integration_test.dart",
      "line": 319,
      "type": "IssueType.missingStructure",
      "message": "Test \"should validate all critical paths are covered\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/full_integration_test.dart",
      "line": 57,
      "type": "IssueType.namingConvention",
      "message": "Test \"should complete full app lifecycle with all services\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/full_integration_test.dart",
      "line": 57,
      "type": "IssueType.missingStructure",
      "message": "Test \"should complete full app lifecycle with all services\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/full_integration_test.dart",
      "line": 57,
      "type": "IssueType.missingReason",
      "message": "Test \"should complete full app lifecycle with all services\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 50,
      "type": "IssueType.namingConvention",
      "message": "Test \"should measure app initialization performance\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 50,
      "type": "IssueType.missingStructure",
      "message": "Test \"should measure app initialization performance\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 78,
      "type": "IssueType.namingConvention",
      "message": "Test \"should measure service initialization performance\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 78,
      "type": "IssueType.missingStructure",
      "message": "Test \"should measure service initialization performance\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 124,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle concurrent service operations efficiently\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 124,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle concurrent service operations efficiently\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 150,
      "type": "IssueType.namingConvention",
      "message": "Test \"should measure memory usage during operations\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 150,
      "type": "IssueType.missingStructure",
      "message": "Test \"should measure memory usage during operations\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 176,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle network disconnection and reconnection\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 176,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle network disconnection and reconnection\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 176,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle network disconnection and reconnection\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 208,
      "type": "IssueType.namingConvention",
      "message": "Test \"should queue operations during offline mode\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 208,
      "type": "IssueType.missingStructure",
      "message": "Test \"should queue operations during offline mode\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 208,
      "type": "IssueType.missingReason",
      "message": "Test \"should queue operations during offline mode\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 243,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle Supabase realtime reconnection\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 243,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle Supabase realtime reconnection\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 243,
      "type": "IssueType.noAssertions",
      "message": "Test \"should handle Supabase realtime reconnection\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 280,
      "type": "IssueType.namingConvention",
      "message": "Test \"should implement exponential backoff for reconnection\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 280,
      "type": "IssueType.missingStructure",
      "message": "Test \"should implement exponential backoff for reconnection\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 280,
      "type": "IssueType.missingReason",
      "message": "Test \"should implement exponential backoff for reconnection\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 313,
      "type": "IssueType.namingConvention",
      "message": "Test \"should persist and restore state during reconnection\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 313,
      "type": "IssueType.missingStructure",
      "message": "Test \"should persist and restore state during reconnection\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 313,
      "type": "IssueType.missingReason",
      "message": "Test \"should persist and restore state during reconnection\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 330,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle timeout during reconnection attempts\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 330,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle timeout during reconnection attempts\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 330,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle timeout during reconnection attempts\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 350,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle rapid connection state changes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 350,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle rapid connection state changes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 350,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle rapid connection state changes\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 377,
      "type": "IssueType.namingConvention",
      "message": "Test \"should maintain performance under load\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/performance_reconnection_test.dart",
      "line": 377,
      "type": "IssueType.missingStructure",
      "message": "Test \"should maintain performance under load\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 40,
      "type": "IssueType.namingConvention",
      "message": "Test \"should establish realtime connection successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 40,
      "type": "IssueType.missingStructure",
      "message": "Test \"should establish realtime connection successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 40,
      "type": "IssueType.missingReason",
      "message": "Test \"should establish realtime connection successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 52,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle presence sync for multiplayer\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 52,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle presence sync for multiplayer\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 52,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle presence sync for multiplayer\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 93,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle broadcast events for game actions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 93,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle broadcast events for game actions\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 93,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle broadcast events for game actions\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 151,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle postgres changes for game state sync\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 151,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle postgres changes for game state sync\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 151,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle postgres changes for game state sync\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 210,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle connection errors and reconnection\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 210,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle connection errors and reconnection\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 210,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle connection errors and reconnection\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 238,
      "type": "IssueType.namingConvention",
      "message": "Test \"should clean up channels on unsubscribe\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 238,
      "type": "IssueType.missingStructure",
      "message": "Test \"should clean up channels on unsubscribe\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 238,
      "type": "IssueType.missingReason",
      "message": "Test \"should clean up channels on unsubscribe\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 257,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle multiple channels for different game rooms\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 257,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle multiple channels for different game rooms\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 257,
      "type": "IssueType.noAssertions",
      "message": "Test \"should handle multiple channels for different game rooms\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 280,
      "type": "IssueType.namingConvention",
      "message": "Test \"should verify heartbeat mechanism for connection health\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 280,
      "type": "IssueType.missingStructure",
      "message": "Test \"should verify heartbeat mechanism for connection health\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/realtime_websocket_test.dart",
      "line": 280,
      "type": "IssueType.missingReason",
      "message": "Test \"should verify heartbeat mechanism for connection health\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 31,
      "type": "IssueType.namingConvention",
      "message": "Test \"should initialize app configuration successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 31,
      "type": "IssueType.missingStructure",
      "message": "Test \"should initialize app configuration successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 31,
      "type": "IssueType.missingReason",
      "message": "Test \"should initialize app configuration successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 47,
      "type": "IssueType.namingConvention",
      "message": "Test \"should initialize services without errors\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 47,
      "type": "IssueType.missingStructure",
      "message": "Test \"should initialize services without errors\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 47,
      "type": "IssueType.missingReason",
      "message": "Test \"should initialize services without errors\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 86,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle service operations correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 86,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle service operations correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 86,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle service operations correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 117,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle connectivity changes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 117,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle connectivity changes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 117,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle connectivity changes\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 152,
      "type": "IssueType.namingConvention",
      "message": "Test \"should measure performance of operations\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 152,
      "type": "IssueType.missingStructure",
      "message": "Test \"should measure performance of operations\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 216,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle error scenarios gracefully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 216,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle error scenarios gracefully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 216,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle error scenarios gracefully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 236,
      "type": "IssueType.namingConvention",
      "message": "Test \"should validate service integration points\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 236,
      "type": "IssueType.missingStructure",
      "message": "Test \"should validate service integration points\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 236,
      "type": "IssueType.missingReason",
      "message": "Test \"should validate service integration points\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 182,
      "type": "IssueType.namingConvention",
      "message": "Test \"should integrate with Flutter widget tree\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 182,
      "type": "IssueType.missingStructure",
      "message": "Test \"should integrate with Flutter widget tree\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/simple_integration_test.dart",
      "line": 182,
      "type": "IssueType.missingReason",
      "message": "Test \"should integrate with Flutter widget tree\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/state_management_navigation_test.dart",
      "line": 26,
      "type": "IssueType.namingConvention",
      "message": "Test \"placeholder test\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/state_management_navigation_test.dart",
      "line": 26,
      "type": "IssueType.missingStructure",
      "message": "Test \"placeholder test\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/state_management_navigation_test.dart",
      "line": 26,
      "type": "IssueType.missingReason",
      "message": "Test \"placeholder test\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 36,
      "type": "IssueType.namingConvention",
      "message": "Test \"should complete anonymous sign-in flow successfully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 36,
      "type": "IssueType.missingStructure",
      "message": "Test \"should complete anonymous sign-in flow successfully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 36,
      "type": "IssueType.missingReason",
      "message": "Test \"should complete anonymous sign-in flow successfully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 62,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle anonymous sign-in failure gracefully\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 62,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle anonymous sign-in failure gracefully\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 62,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle anonymous sign-in failure gracefully\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 78,
      "type": "IssueType.namingConvention",
      "message": "Test \"should skip sign-in if user already authenticated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 78,
      "type": "IssueType.missingStructure",
      "message": "Test \"should skip sign-in if user already authenticated\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 78,
      "type": "IssueType.missingReason",
      "message": "Test \"should skip sign-in if user already authenticated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 91,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle sign-out and state invalidation\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 91,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle sign-out and state invalidation\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 91,
      "type": "IssueType.noAssertions",
      "message": "Test \"should handle sign-out and state invalidation\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 107,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle concurrent auth requests properly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 107,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle concurrent auth requests properly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 107,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle concurrent auth requests properly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 136,
      "type": "IssueType.namingConvention",
      "message": "Test \"currentUserId provider should reflect auth state\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 136,
      "type": "IssueType.missingStructure",
      "message": "Test \"currentUserId provider should reflect auth state\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 136,
      "type": "IssueType.missingReason",
      "message": "Test \"currentUserId provider should reflect auth state\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 151,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle network errors during auth\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 151,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle network errors during auth\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 151,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle network errors during auth\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 162,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle session expiration\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 162,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle session expiration\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/supabase_auth_flow_test.dart",
      "line": 162,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle session expiration\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 21,
      "type": "IssueType.namingConvention",
      "message": "Test \"CardSelectionProvider works with new syntax\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 21,
      "type": "IssueType.missingStructure",
      "message": "Test \"CardSelectionProvider works with new syntax\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 21,
      "type": "IssueType.missingReason",
      "message": "Test \"CardSelectionProvider works with new syntax\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 31,
      "type": "IssueType.namingConvention",
      "message": "Test \"GameAnimationProvider works with new syntax\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 31,
      "type": "IssueType.missingStructure",
      "message": "Test \"GameAnimationProvider works with new syntax\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 31,
      "type": "IssueType.missingReason",
      "message": "Test \"GameAnimationProvider works with new syntax\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 43,
      "type": "IssueType.namingConvention",
      "message": "Test \"router v2 is properly configured\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 43,
      "type": "IssueType.missingStructure",
      "message": "Test \"router v2 is properly configured\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 43,
      "type": "IssueType.missingReason",
      "message": "Test \"router v2 is properly configured\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 52,
      "type": "IssueType.namingConvention",
      "message": "Test \"router has guards configured\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 52,
      "type": "IssueType.missingStructure",
      "message": "Test \"router has guards configured\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 52,
      "type": "IssueType.missingReason",
      "message": "Test \"router has guards configured\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 61,
      "type": "IssueType.namingConvention",
      "message": "Test \"all migrated components are accessible\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 61,
      "type": "IssueType.missingStructure",
      "message": "Test \"all migrated components are accessible\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 61,
      "type": "IssueType.missingReason",
      "message": "Test \"all migrated components are accessible\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 70,
      "type": "IssueType.namingConvention",
      "message": "Test \"migration statistics summary\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 70,
      "type": "IssueType.missingStructure",
      "message": "Test \"migration statistics summary\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 70,
      "type": "IssueType.missingReason",
      "message": "Test \"migration statistics summary\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 97,
      "type": "IssueType.namingConvention",
      "message": "Test \"all required documentation created\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 97,
      "type": "IssueType.missingStructure",
      "message": "Test \"all required documentation created\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "integration/task_3_validation_test.dart",
      "line": 97,
      "type": "IssueType.missingReason",
      "message": "Test \"all required documentation created\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serializable_comparison_test.dart",
      "line": 8,
      "type": "IssueType.namingConvention",
      "message": "Test \"should compare .g.dart files after update\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "json_serializable_comparison_test.dart",
      "line": 8,
      "type": "IssueType.missingStructure",
      "message": "Test \"should compare .g.dart files after update\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serializable_snapshot_test.dart",
      "line": 8,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create snapshot before json_serializable update\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "json_serializable_snapshot_test.dart",
      "line": 8,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create snapshot before json_serializable update\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serializable_snapshot_test.dart",
      "line": 8,
      "type": "IssueType.missingReason",
      "message": "Test \"should create snapshot before json_serializable update\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 11,
      "type": "IssueType.namingConvention",
      "message": "Test \"should serialize/deserialize Card correctly\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 11,
      "type": "IssueType.missingStructure",
      "message": "Test \"should serialize/deserialize Card correctly\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 11,
      "type": "IssueType.missingReason",
      "message": "Test \"should serialize/deserialize Card correctly\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 22,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle Card with default values\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 22,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle Card with default values\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 22,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle Card with default values\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 34,
      "type": "IssueType.namingConvention",
      "message": "Test \"should round-trip Card through JSON string\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 34,
      "type": "IssueType.missingStructure",
      "message": "Test \"should round-trip Card through JSON string\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 34,
      "type": "IssueType.missingReason",
      "message": "Test \"should round-trip Card through JSON string\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 45,
      "type": "IssueType.namingConvention",
      "message": "Test \"should serialize/deserialize empty PlayerGrid\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 45,
      "type": "IssueType.missingStructure",
      "message": "Test \"should serialize/deserialize empty PlayerGrid\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 45,
      "type": "IssueType.missingReason",
      "message": "Test \"should serialize/deserialize empty PlayerGrid\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 56,
      "type": "IssueType.namingConvention",
      "message": "Test \"should serialize/deserialize PlayerGrid with cards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 56,
      "type": "IssueType.missingStructure",
      "message": "Test \"should serialize/deserialize PlayerGrid with cards\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 56,
      "type": "IssueType.missingReason",
      "message": "Test \"should serialize/deserialize PlayerGrid with cards\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 71,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle null cards in grid\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 71,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle null cards in grid\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 71,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle null cards in grid\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 84,
      "type": "IssueType.namingConvention",
      "message": "Test \"should serialize/deserialize GamePlayer\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 84,
      "type": "IssueType.missingStructure",
      "message": "Test \"should serialize/deserialize GamePlayer\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 84,
      "type": "IssueType.missingReason",
      "message": "Test \"should serialize/deserialize GamePlayer\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 109,
      "type": "IssueType.namingConvention",
      "message": "Test \"should serialize/deserialize Room\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 109,
      "type": "IssueType.missingStructure",
      "message": "Test \"should serialize/deserialize Room\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 109,
      "type": "IssueType.missingReason",
      "message": "Test \"should serialize/deserialize Room\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 131,
      "type": "IssueType.namingConvention",
      "message": "Test \"should throw on invalid Card JSON\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 131,
      "type": "IssueType.missingStructure",
      "message": "Test \"should throw on invalid Card JSON\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 131,
      "type": "IssueType.missingReason",
      "message": "Test \"should throw on invalid Card JSON\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 138,
      "type": "IssueType.namingConvention",
      "message": "Test \"should throw on missing required fields\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 138,
      "type": "IssueType.missingStructure",
      "message": "Test \"should throw on missing required fields\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 138,
      "type": "IssueType.missingReason",
      "message": "Test \"should throw on missing required fields\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 150,
      "type": "IssueType.namingConvention",
      "message": "Test \"should serialize large PlayerGrid efficiently\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 150,
      "type": "IssueType.missingStructure",
      "message": "Test \"should serialize large PlayerGrid efficiently\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "json_serialization_test.dart",
      "line": 150,
      "type": "IssueType.missingReason",
      "message": "Test \"should serialize large PlayerGrid efficiently\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "migration/linting_comparison_test.dart",
      "line": 6,
      "type": "IssueType.namingConvention",
      "message": "Test \"should compare linting issues before and after update\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "migration/linting_comparison_test.dart",
      "line": 6,
      "type": "IssueType.missingStructure",
      "message": "Test \"should compare linting issues before and after update\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "migration/linting_comparison_test.dart",
      "line": 6,
      "type": "IssueType.missingReason",
      "message": "Test \"should compare linting issues before and after update\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "migration/linting_final_test.dart",
      "line": 6,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have zero errors after migration\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "migration/linting_final_test.dart",
      "line": 6,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have zero errors after migration\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "migration/linting_final_test.dart",
      "line": 25,
      "type": "IssueType.namingConvention",
      "message": "Test \"should verify flutter_lints version is updated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "migration/linting_final_test.dart",
      "line": 25,
      "type": "IssueType.missingStructure",
      "message": "Test \"should verify flutter_lints version is updated\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "migration/linting_final_test.dart",
      "line": 25,
      "type": "IssueType.missingReason",
      "message": "Test \"should verify flutter_lints version is updated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "migration/linting_final_test.dart",
      "line": 32,
      "type": "IssueType.namingConvention",
      "message": "Test \"should create migration report\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "migration/linting_final_test.dart",
      "line": 32,
      "type": "IssueType.missingStructure",
      "message": "Test \"should create migration report\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "migration/linting_final_test.dart",
      "line": 32,
      "type": "IssueType.missingReason",
      "message": "Test \"should create migration report\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "migration/linting_test.dart",
      "line": 6,
      "type": "IssueType.namingConvention",
      "message": "Test \"should capture current linting state\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "migration/linting_test.dart",
      "line": 6,
      "type": "IssueType.missingStructure",
      "message": "Test \"should capture current linting state\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "migration/linting_test.dart",
      "line": 6,
      "type": "IssueType.missingReason",
      "message": "Test \"should capture current linting state\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "migration/linting_test.dart",
      "line": 52,
      "type": "IssueType.namingConvention",
      "message": "Test \"should verify linting configuration exists\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "migration/linting_test.dart",
      "line": 52,
      "type": "IssueType.missingStructure",
      "message": "Test \"should verify linting configuration exists\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "migration/linting_test.dart",
      "line": 52,
      "type": "IssueType.missingReason",
      "message": "Test \"should verify linting configuration exists\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "migration/sdk_compatibility_test.dart",
      "line": 6,
      "type": "IssueType.namingConvention",
      "message": "Test \"should meet minimum Dart SDK requirements\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "migration/sdk_compatibility_test.dart",
      "line": 6,
      "type": "IssueType.missingStructure",
      "message": "Test \"should meet minimum Dart SDK requirements\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "migration/sdk_compatibility_test.dart",
      "line": 35,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have correct SDK constraints in pubspec.yaml\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "migration/sdk_compatibility_test.dart",
      "line": 35,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have correct SDK constraints in pubspec.yaml\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "migration/sdk_compatibility_test.dart",
      "line": 67,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have Flutter environment properly configured\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "migration/sdk_compatibility_test.dart",
      "line": 67,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have Flutter environment properly configured\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 23,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have correct number of routes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 23,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have correct number of routes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 23,
      "type": "IssueType.missingReason",
      "message": "Test \"should have correct number of routes\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 28,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have all required route paths\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 28,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have all required route paths\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 28,
      "type": "IssueType.missingReason",
      "message": "Test \"should have all required route paths\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 44,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have all required route names\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 44,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have all required route names\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 44,
      "type": "IssueType.missingReason",
      "message": "Test \"should have all required route names\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 57,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have correct initial location\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 57,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have correct initial location\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 57,
      "type": "IssueType.missingReason",
      "message": "Test \"should have correct initial location\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 61,
      "type": "IssueType.namingConvention",
      "message": "Test \"router configuration should be valid\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 61,
      "type": "IssueType.missingStructure",
      "message": "Test \"router configuration should be valid\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 61,
      "type": "IssueType.missingReason",
      "message": "Test \"router configuration should be valid\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 69,
      "type": "IssueType.namingConvention",
      "message": "Test \"room lobby route should accept roomId parameter\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 69,
      "type": "IssueType.missingStructure",
      "message": "Test \"room lobby route should accept roomId parameter\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 69,
      "type": "IssueType.missingReason",
      "message": "Test \"room lobby route should accept roomId parameter\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 77,
      "type": "IssueType.namingConvention",
      "message": "Test \"game route should accept roomId parameter\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 77,
      "type": "IssueType.missingStructure",
      "message": "Test \"game route should accept roomId parameter\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 77,
      "type": "IssueType.missingReason",
      "message": "Test \"game route should accept roomId parameter\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 87,
      "type": "IssueType.namingConvention",
      "message": "Test \"should document all navigation methods\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 87,
      "type": "IssueType.missingStructure",
      "message": "Test \"should document all navigation methods\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 87,
      "type": "IssueType.missingReason",
      "message": "Test \"should document all navigation methods\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 102,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not have any guards currently\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 102,
      "type": "IssueType.missingStructure",
      "message": "Test \"should not have any guards currently\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 102,
      "type": "IssueType.missingReason",
      "message": "Test \"should not have any guards currently\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 189,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support deep link to home\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 189,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support deep link to home\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 189,
      "type": "IssueType.missingReason",
      "message": "Test \"should support deep link to home\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 197,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support deep link to create room\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 197,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support deep link to create room\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 197,
      "type": "IssueType.missingReason",
      "message": "Test \"should support deep link to create room\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 208,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support deep link to room with ID\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 208,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support deep link to room with ID\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 208,
      "type": "IssueType.missingReason",
      "message": "Test \"should support deep link to room with ID\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 219,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support deep link to game with ID\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 219,
      "type": "IssueType.missingStructure",
      "message": "Test \"should support deep link to game with ID\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 219,
      "type": "IssueType.missingReason",
      "message": "Test \"should support deep link to game with ID\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 230,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle invalid deep links\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 230,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle invalid deep links\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 230,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle invalid deep links\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 112,
      "type": "IssueType.namingConvention",
      "message": "Test \"error page should be configured\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 112,
      "type": "IssueType.missingStructure",
      "message": "Test \"error page should be configured\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 112,
      "type": "IssueType.missingReason",
      "message": "Test \"error page should be configured\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 128,
      "type": "IssueType.namingConvention",
      "message": "Test \"should navigate from home to create room\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 128,
      "type": "IssueType.missingStructure",
      "message": "Test \"should navigate from home to create room\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 128,
      "type": "IssueType.missingReason",
      "message": "Test \"should navigate from home to create room\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 149,
      "type": "IssueType.namingConvention",
      "message": "Test \"should navigate to room with ID\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 149,
      "type": "IssueType.missingStructure",
      "message": "Test \"should navigate to room with ID\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 149,
      "type": "IssueType.missingReason",
      "message": "Test \"should navigate to room with ID\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 168,
      "type": "IssueType.namingConvention",
      "message": "Test \"should navigate to game with ID\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 168,
      "type": "IssueType.missingStructure",
      "message": "Test \"should navigate to game with ID\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/go_router_audit_test.dart",
      "line": 168,
      "type": "IssueType.missingReason",
      "message": "Test \"should navigate to game with ID\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 22,
      "type": "IssueType.namingConvention",
      "message": "Test \"initial location should be home\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 22,
      "type": "IssueType.missingStructure",
      "message": "Test \"initial location should be home\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 22,
      "type": "IssueType.missingReason",
      "message": "Test \"initial location should be home\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 28,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have all required routes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 28,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have all required routes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 28,
      "type": "IssueType.missingReason",
      "message": "Test \"should have all required routes\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 46,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have named routes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 46,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have named routes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 46,
      "type": "IssueType.missingReason",
      "message": "Test \"should have named routes\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 65,
      "type": "IssueType.namingConvention",
      "message": "Test \"should parse room lobby route with parameter\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 65,
      "type": "IssueType.missingStructure",
      "message": "Test \"should parse room lobby route with parameter\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 65,
      "type": "IssueType.missingReason",
      "message": "Test \"should parse room lobby route with parameter\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 73,
      "type": "IssueType.namingConvention",
      "message": "Test \"should parse game route with parameter\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 73,
      "type": "IssueType.missingStructure",
      "message": "Test \"should parse game route with parameter\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 73,
      "type": "IssueType.missingReason",
      "message": "Test \"should parse game route with parameter\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 81,
      "type": "IssueType.namingConvention",
      "message": "Test \"router should be properly configured\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 81,
      "type": "IssueType.missingStructure",
      "message": "Test \"router should be properly configured\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 81,
      "type": "IssueType.missingReason",
      "message": "Test \"router should be properly configured\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 192,
      "type": "IssueType.namingConvention",
      "message": "Test \"should support authentication guards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 192,
      "type": "IssueType.missingReason",
      "message": "Test \"should support authentication guards\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 88,
      "type": "IssueType.namingConvention",
      "message": "Test \"should navigate to create room\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 88,
      "type": "IssueType.missingStructure",
      "message": "Test \"should navigate to create room\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 88,
      "type": "IssueType.missingReason",
      "message": "Test \"should navigate to create room\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 126,
      "type": "IssueType.namingConvention",
      "message": "Test \"should navigate with room ID parameter\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 126,
      "type": "IssueType.missingStructure",
      "message": "Test \"should navigate with room ID parameter\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 126,
      "type": "IssueType.missingReason",
      "message": "Test \"should navigate with room ID parameter\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 164,
      "type": "IssueType.namingConvention",
      "message": "Test \"error page should show for invalid route\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 164,
      "type": "IssueType.missingStructure",
      "message": "Test \"error page should show for invalid route\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_config_test.dart",
      "line": 164,
      "type": "IssueType.missingReason",
      "message": "Test \"error page should show for invalid route\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_with_guards_test.dart",
      "line": 14,
      "type": "IssueType.namingConvention",
      "message": "Test \"should redirect to home when authenticated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/router_with_guards_test.dart",
      "line": 14,
      "type": "IssueType.missingStructure",
      "message": "Test \"should redirect to home when authenticated\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_with_guards_test.dart",
      "line": 14,
      "type": "IssueType.missingReason",
      "message": "Test \"should redirect to home when authenticated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_with_guards_test.dart",
      "line": 99,
      "type": "IssueType.namingConvention",
      "message": "Test \"router should refresh when auth state changes\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/router_with_guards_test.dart",
      "line": 99,
      "type": "IssueType.missingStructure",
      "message": "Test \"router should refresh when auth state changes\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_with_guards_test.dart",
      "line": 99,
      "type": "IssueType.missingReason",
      "message": "Test \"router should refresh when auth state changes\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_with_guards_test.dart",
      "line": 19,
      "type": "IssueType.namingConvention",
      "message": "Test \"should protect game route when not authenticated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/router_with_guards_test.dart",
      "line": 19,
      "type": "IssueType.missingStructure",
      "message": "Test \"should protect game route when not authenticated\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_with_guards_test.dart",
      "line": 19,
      "type": "IssueType.missingReason",
      "message": "Test \"should protect game route when not authenticated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_with_guards_test.dart",
      "line": 58,
      "type": "IssueType.namingConvention",
      "message": "Test \"should allow access to game when authenticated\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "navigation/router_with_guards_test.dart",
      "line": 58,
      "type": "IssueType.missingStructure",
      "message": "Test \"should allow access to game when authenticated\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "navigation/router_with_guards_test.dart",
      "line": 58,
      "type": "IssueType.missingReason",
      "message": "Test \"should allow access to game when authenticated\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 16,
      "type": "IssueType.namingConvention",
      "message": "Test \"initial state should have correct values\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 16,
      "type": "IssueType.missingStructure",
      "message": "Test \"initial state should have correct values\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 16,
      "type": "IssueType.missingReason",
      "message": "Test \"initial state should have correct values\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 23,
      "type": "IssueType.namingConvention",
      "message": "Test \"should update draw pile count\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 23,
      "type": "IssueType.missingStructure",
      "message": "Test \"should update draw pile count\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 23,
      "type": "IssueType.missingReason",
      "message": "Test \"should update draw pile count\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 31,
      "type": "IssueType.namingConvention",
      "message": "Test \"should update discard pile count\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 31,
      "type": "IssueType.missingStructure",
      "message": "Test \"should update discard pile count\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 31,
      "type": "IssueType.missingReason",
      "message": "Test \"should update discard pile count\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 39,
      "type": "IssueType.namingConvention",
      "message": "Test \"should update both counts\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 39,
      "type": "IssueType.missingStructure",
      "message": "Test \"should update both counts\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 39,
      "type": "IssueType.missingReason",
      "message": "Test \"should update both counts\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 47,
      "type": "IssueType.namingConvention",
      "message": "Test \"should set loading state\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 47,
      "type": "IssueType.missingStructure",
      "message": "Test \"should set loading state\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 47,
      "type": "IssueType.missingReason",
      "message": "Test \"should set loading state\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 55,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle draw card action\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 55,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle draw card action\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 55,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle draw card action\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 71,
      "type": "IssueType.namingConvention",
      "message": "Test \"initial state should be AsyncData with null\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 71,
      "type": "IssueType.missingStructure",
      "message": "Test \"initial state should be AsyncData with null\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 71,
      "type": "IssueType.missingReason",
      "message": "Test \"initial state should be AsyncData with null\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 76,
      "type": "IssueType.namingConvention",
      "message": "Test \"should have notifier instance\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 76,
      "type": "IssueType.missingStructure",
      "message": "Test \"should have notifier instance\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 76,
      "type": "IssueType.missingReason",
      "message": "Test \"should have notifier instance\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 83,
      "type": "IssueType.namingConvention",
      "message": "Test \"actionCardLocalDataSource provider should provide instance\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 83,
      "type": "IssueType.missingStructure",
      "message": "Test \"actionCardLocalDataSource provider should provide instance\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 83,
      "type": "IssueType.missingReason",
      "message": "Test \"actionCardLocalDataSource provider should provide instance\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 90,
      "type": "IssueType.namingConvention",
      "message": "Test \"actionCardRepository provider should provide instance\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 90,
      "type": "IssueType.missingStructure",
      "message": "Test \"actionCardRepository provider should provide instance\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_providers_test.dart",
      "line": 90,
      "type": "IssueType.missingReason",
      "message": "Test \"actionCardRepository provider should provide instance\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 14,
      "type": "IssueType.namingConvention",
      "message": "Test \"initial state should have correct values\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 14,
      "type": "IssueType.missingStructure",
      "message": "Test \"initial state should have correct values\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 14,
      "type": "IssueType.missingReason",
      "message": "Test \"initial state should have correct values\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 21,
      "type": "IssueType.namingConvention",
      "message": "Test \"should update draw pile count\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 21,
      "type": "IssueType.missingStructure",
      "message": "Test \"should update draw pile count\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 21,
      "type": "IssueType.missingReason",
      "message": "Test \"should update draw pile count\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 30,
      "type": "IssueType.namingConvention",
      "message": "Test \"should update discard pile count\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 30,
      "type": "IssueType.missingStructure",
      "message": "Test \"should update discard pile count\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 30,
      "type": "IssueType.missingReason",
      "message": "Test \"should update discard pile count\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 39,
      "type": "IssueType.namingConvention",
      "message": "Test \"should update both counts\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 39,
      "type": "IssueType.missingStructure",
      "message": "Test \"should update both counts\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 39,
      "type": "IssueType.missingReason",
      "message": "Test \"should update both counts\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 48,
      "type": "IssueType.namingConvention",
      "message": "Test \"should set loading state\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 48,
      "type": "IssueType.missingStructure",
      "message": "Test \"should set loading state\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 48,
      "type": "IssueType.missingReason",
      "message": "Test \"should set loading state\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 58,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle draw card action\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 58,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle draw card action\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 58,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle draw card action\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 81,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not draw when pile is empty\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 81,
      "type": "IssueType.missingStructure",
      "message": "Test \"should not draw when pile is empty\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 81,
      "type": "IssueType.missingReason",
      "message": "Test \"should not draw when pile is empty\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 95,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle discard card action\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 95,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle discard card action\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 95,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle discard card action\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 118,
      "type": "IssueType.namingConvention",
      "message": "Test \"should reset counts\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 118,
      "type": "IssueType.missingStructure",
      "message": "Test \"should reset counts\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 118,
      "type": "IssueType.missingReason",
      "message": "Test \"should reset counts\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 133,
      "type": "IssueType.namingConvention",
      "message": "Test \"auto-generated provider should be available\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 133,
      "type": "IssueType.missingStructure",
      "message": "Test \"auto-generated provider should be available\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/action_card_state_provider_test.dart",
      "line": 133,
      "type": "IssueType.missingReason",
      "message": "Test \"auto-generated provider should be available\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 17,
      "type": "IssueType.namingConvention",
      "message": "Test \"initial state should be not selecting\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 17,
      "type": "IssueType.missingStructure",
      "message": "Test \"initial state should be not selecting\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 17,
      "type": "IssueType.missingReason",
      "message": "Test \"initial state should be not selecting\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 27,
      "type": "IssueType.namingConvention",
      "message": "Test \"should start teleport selection mode\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 27,
      "type": "IssueType.missingStructure",
      "message": "Test \"should start teleport selection mode\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 27,
      "type": "IssueType.missingReason",
      "message": "Test \"should start teleport selection mode\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 36,
      "type": "IssueType.namingConvention",
      "message": "Test \"should select two cards for teleport\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 36,
      "type": "IssueType.missingStructure",
      "message": "Test \"should select two cards for teleport\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 36,
      "type": "IssueType.missingReason",
      "message": "Test \"should select two cards for teleport\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 56,
      "type": "IssueType.namingConvention",
      "message": "Test \"should toggle selection when clicking same card\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 56,
      "type": "IssueType.missingStructure",
      "message": "Test \"should toggle selection when clicking same card\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 56,
      "type": "IssueType.missingReason",
      "message": "Test \"should toggle selection when clicking same card\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 70,
      "type": "IssueType.namingConvention",
      "message": "Test \"should start peek selection with max cards\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 70,
      "type": "IssueType.missingStructure",
      "message": "Test \"should start peek selection with max cards\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 70,
      "type": "IssueType.missingReason",
      "message": "Test \"should start peek selection with max cards\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 79,
      "type": "IssueType.namingConvention",
      "message": "Test \"should allow multiple card selections up to max\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 79,
      "type": "IssueType.missingStructure",
      "message": "Test \"should allow multiple card selections up to max\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 79,
      "type": "IssueType.missingReason",
      "message": "Test \"should allow multiple card selections up to max\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 102,
      "type": "IssueType.namingConvention",
      "message": "Test \"should toggle selection when clicking selected card\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 102,
      "type": "IssueType.missingStructure",
      "message": "Test \"should toggle selection when clicking selected card\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 102,
      "type": "IssueType.missingReason",
      "message": "Test \"should toggle selection when clicking selected card\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 116,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle bomb selection\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 116,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle bomb selection\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 116,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle bomb selection\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 131,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle mirror selection\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 131,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle mirror selection\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 131,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle mirror selection\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 141,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle opponent selection\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 141,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle opponent selection\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 141,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle opponent selection\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 157,
      "type": "IssueType.namingConvention",
      "message": "Test \"should require opponent then card for steal\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 157,
      "type": "IssueType.missingStructure",
      "message": "Test \"should require opponent then card for steal\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 157,
      "type": "IssueType.missingReason",
      "message": "Test \"should require opponent then card for steal\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 182,
      "type": "IssueType.namingConvention",
      "message": "Test \"should complete teleport selection and return data\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 182,
      "type": "IssueType.missingStructure",
      "message": "Test \"should complete teleport selection and return data\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 182,
      "type": "IssueType.missingReason",
      "message": "Test \"should complete teleport selection and return data\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 196,
      "type": "IssueType.namingConvention",
      "message": "Test \"should complete peek selection and return positions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 196,
      "type": "IssueType.missingStructure",
      "message": "Test \"should complete peek selection and return positions\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 196,
      "type": "IssueType.missingReason",
      "message": "Test \"should complete peek selection and return positions\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 209,
      "type": "IssueType.namingConvention",
      "message": "Test \"should return null if selection not complete\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 209,
      "type": "IssueType.missingStructure",
      "message": "Test \"should return null if selection not complete\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 209,
      "type": "IssueType.missingReason",
      "message": "Test \"should return null if selection not complete\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 219,
      "type": "IssueType.namingConvention",
      "message": "Test \"should reset state when cancelled\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 219,
      "type": "IssueType.missingStructure",
      "message": "Test \"should reset state when cancelled\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 219,
      "type": "IssueType.missingReason",
      "message": "Test \"should reset state when cancelled\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 233,
      "type": "IssueType.namingConvention",
      "message": "Test \"should correctly identify selected positions\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 233,
      "type": "IssueType.missingStructure",
      "message": "Test \"should correctly identify selected positions\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/card_selection_provider_test.dart",
      "line": 233,
      "type": "IssueType.missingReason",
      "message": "Test \"should correctly identify selected positions\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 17,
      "type": "IssueType.namingConvention",
      "message": "Test \"initial state should have correct default values\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 17,
      "type": "IssueType.missingStructure",
      "message": "Test \"initial state should have correct default values\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 17,
      "type": "IssueType.missingReason",
      "message": "Test \"initial state should have correct default values\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 23,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show direction change with forward direction\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 23,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show direction change with forward direction\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 23,
      "type": "IssueType.missingReason",
      "message": "Test \"should show direction change with forward direction\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 31,
      "type": "IssueType.namingConvention",
      "message": "Test \"should show direction change with backward direction\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 31,
      "type": "IssueType.missingStructure",
      "message": "Test \"should show direction change with backward direction\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 31,
      "type": "IssueType.missingReason",
      "message": "Test \"should show direction change with backward direction\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 39,
      "type": "IssueType.namingConvention",
      "message": "Test \"should not update if already showing direction change\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 39,
      "type": "IssueType.missingStructure",
      "message": "Test \"should not update if already showing direction change\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 39,
      "type": "IssueType.missingReason",
      "message": "Test \"should not update if already showing direction change\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 55,
      "type": "IssueType.namingConvention",
      "message": "Test \"should hide direction change\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 55,
      "type": "IssueType.missingStructure",
      "message": "Test \"should hide direction change\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 55,
      "type": "IssueType.missingReason",
      "message": "Test \"should hide direction change\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 71,
      "type": "IssueType.namingConvention",
      "message": "Test \"should handle show-hide-show sequence\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 71,
      "type": "IssueType.missingStructure",
      "message": "Test \"should handle show-hide-show sequence\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/game_animation_provider_test.dart",
      "line": 71,
      "type": "IssueType.missingReason",
      "message": "Test \"should handle show-hide-show sequence\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/supabase_provider_test.dart",
      "line": 18,
      "type": "IssueType.namingConvention",
      "message": "Test \"legacy provider should provide SupabaseClient\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/supabase_provider_test.dart",
      "line": 18,
      "type": "IssueType.missingStructure",
      "message": "Test \"legacy provider should provide SupabaseClient\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/supabase_provider_test.dart",
      "line": 18,
      "type": "IssueType.missingReason",
      "message": "Test \"legacy provider should provide SupabaseClient\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/supabase_provider_test.dart",
      "line": 28,
      "type": "IssueType.namingConvention",
      "message": "Test \"modern provider should provide same SupabaseClient\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/supabase_provider_test.dart",
      "line": 28,
      "type": "IssueType.missingStructure",
      "message": "Test \"modern provider should provide same SupabaseClient\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/supabase_provider_test.dart",
      "line": 28,
      "type": "IssueType.missingReason",
      "message": "Test \"modern provider should provide same SupabaseClient\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/supabase_provider_test.dart",
      "line": 39,
      "type": "IssueType.namingConvention",
      "message": "Test \"both providers should return the same instance\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers/supabase_provider_test.dart",
      "line": 39,
      "type": "IssueType.missingStructure",
      "message": "Test \"both providers should return the same instance\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers/supabase_provider_test.dart",
      "line": 39,
      "type": "IssueType.missingReason",
      "message": "Test \"both providers should return the same instance\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers_audit_test.dart",
      "line": 6,
      "type": "IssueType.namingConvention",
      "message": "Test \"should document all providers in the codebase\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers_audit_test.dart",
      "line": 6,
      "type": "IssueType.missingStructure",
      "message": "Test \"should document all providers in the codebase\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers_audit_test.dart",
      "line": 6,
      "type": "IssueType.missingReason",
      "message": "Test \"should document all providers in the codebase\" has assertions without reasons",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers_audit_test.dart",
      "line": 60,
      "type": "IssueType.namingConvention",
      "message": "Test \"should check for StateNotifier usage\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers_audit_test.dart",
      "line": 60,
      "type": "IssueType.missingStructure",
      "message": "Test \"should check for StateNotifier usage\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers_audit_test.dart",
      "line": 60,
      "type": "IssueType.noAssertions",
      "message": "Test \"should check for StateNotifier usage\" has no assertions",
      "severity": "IssueSeverity.error"
    },
    {
      "file": "providers_audit_test.dart",
      "line": 91,
      "type": "IssueType.namingConvention",
      "message": "Test \"should check current Riverpod syntax usage\" does not follow should_when pattern",
      "severity": "IssueSeverity.warning"
    },
    {
      "file": "providers_audit_test.dart",
      "line": 91,
      "type": "IssueType.missingStructure",
      "message": "Test \"should check current Riverpod syntax usage\" missing Arrange/Act/Assert comments",
      "severity": "IssueSeverity.info"
    },
    {
      "file": "providers_audit_test.dart",
      "line": 91,
      "type": "IssueType.noAssertions",
      "message": "Test \"should check current Riverpod syntax usage\" has no assertions",
      "severity": "IssueSeverity.error"
    }
  ]
}