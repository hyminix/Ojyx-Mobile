00:00 +0: loading /mnt/d/dev/Ojyx/test/core/config/env_config_test.dart                                                                                                                                00:01 +0: loading /mnt/d/dev/Ojyx/test/core/config/env_config_test.dart                                                                                                                                00:02 +0: loading /mnt/d/dev/Ojyx/test/core/config/env_config_test.dart                                                                                                                                00:03 +0: loading /mnt/d/dev/Ojyx/test/core/config/env_config_test.dart                                                                                                                                00:04 +0: loading /mnt/d/dev/Ojyx/test/core/config/env_config_test.dart                                                                                                                                00:04 +0: /mnt/d/dev/Ojyx/test/core/config/env_config_test.dart: EnvConfig should have default values                                                                                                  00:04 +1: /mnt/d/dev/Ojyx/test/core/config/env_config_test.dart: EnvConfig should have default values                                                                                                  00:04 +1: /mnt/d/dev/Ojyx/test/core/config/env_config_test.dart: EnvConfig should correctly identify environment                                                                                       00:04 +2: /mnt/d/dev/Ojyx/test/core/config/env_config_test.dart: EnvConfig should correctly identify environment                                                                                       00:04 +2: /mnt/d/dev/Ojyx/test/core/config/env_config_test.dart: EnvConfig should validate required configuration                                                                                      00:04 +3: /mnt/d/dev/Ojyx/test/core/config/env_config_test.dart: EnvConfig should validate required configuration                                                                                      00:04 +3: /mnt/d/dev/Ojyx/test/core/config/env_config_test.dart: EnvConfig should validate in order of priority                                                                                        00:04 +4: /mnt/d/dev/Ojyx/test/core/config/env_config_test.dart: EnvConfig should validate in order of priority                                                                                        00:04 +4: loading /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart                                                                                                                             00:04 +4: /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart: RouterProvider should create GoRouter instance                                                                                     00:05 +4: /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart: RouterProvider should create GoRouter instance                                                                                     00:05 +5: /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart: RouterProvider should create GoRouter instance                                                                                     00:05 +5: /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart: RouterProvider should have all required routes                                                                                     00:05 +6: /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart: RouterProvider should have all required routes                                                                                     00:05 +6: /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart: RouterProvider should have named routes                                                                                            00:05 +7: /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart: RouterProvider should have named routes                                                                                            00:05 +7: /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart: RouterProvider should have error builder                                                                                           00:05 +8: /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart: RouterProvider should have error builder                                                                                           00:05 +8: /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart: RouterProvider home route should build HomeScreen                                                                                  00:05 +9: /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart: RouterProvider home route should build HomeScreen                                                                                  00:05 +9: /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart: RouterProvider room routes should extract roomId parameter                                                                         00:05 +10: /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart: RouterProvider room routes should extract roomId parameter                                                                        00:06 +10: /mnt/d/dev/Ojyx/test/core/config/router_config_test.dart: RouterProvider room routes should extract roomId parameter                                                                        00:06 +10: loading /mnt/d/dev/Ojyx/test/core/config/sentry_config_test.dart                                                                                                                            00:06 +10: /mnt/d/dev/Ojyx/test/core/config/sentry_config_test.dart: SentryConfig should initialize Sentry in debug mode without DSN                                                                   00:06 +11: /mnt/d/dev/Ojyx/test/core/config/sentry_config_test.dart: SentryConfig should initialize Sentry in debug mode without DSN                                                                   00:06 +11: /mnt/d/dev/Ojyx/test/core/config/sentry_config_test.dart: SentryConfig should capture exception with extra data                                                                             00:06 +12: /mnt/d/dev/Ojyx/test/core/config/sentry_config_test.dart: SentryConfig should capture exception with extra data                                                                             00:06 +12: /mnt/d/dev/Ojyx/test/core/config/sentry_config_test.dart: SentryConfig should capture message with level and extra data                                                                     00:06 +13: /mnt/d/dev/Ojyx/test/core/config/sentry_config_test.dart: SentryConfig should capture message with level and extra data                                                                     00:06 +13: /mnt/d/dev/Ojyx/test/core/config/sentry_config_test.dart: SentryConfig should start transaction                                                                                             00:06 +13 -1: /mnt/d/dev/Ojyx/test/core/config/sentry_config_test.dart: SentryConfig should start transaction [E]                                                                                      
  Expected: null
    Actual: <Instance of 'NoOpSentrySpan'>
  
  package:matcher                                     expect
  package:flutter_test/src/widget_tester.dart 474:18  expect
  test/core/config/sentry_config_test.dart 65:7       main.<fn>.<fn>
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/core/config/sentry_config_test.dart -p vm --plain-name 'SentryConfig should start transaction'
00:06 +13 -1: /mnt/d/dev/Ojyx/test/core/config/sentry_config_test.dart: SentryConfig should set user with data                                                                                         00:06 +14 -1: /mnt/d/dev/Ojyx/test/core/config/sentry_config_test.dart: SentryConfig should set user with data                                                                                         00:06 +14 -1: /mnt/d/dev/Ojyx/test/core/config/sentry_config_test.dart: SentryConfig should clear user when null                                                                                       00:06 +15 -1: /mnt/d/dev/Ojyx/test/core/config/sentry_config_test.dart: SentryConfig should clear user when null                                                                                       00:06 +15 -1: loading /mnt/d/dev/Ojyx/test/core/config/supabase_config_test.dart                                                                                                                       00:06 +15 -1: /mnt/d/dev/Ojyx/test/core/config/supabase_config_test.dart: SupabaseConfig (setUpAll)                                                                                                    00:07 +15 -1: /mnt/d/dev/Ojyx/test/core/config/supabase_config_test.dart: SupabaseConfig (setUpAll)                                                                                                    00:07 +15 -1: /mnt/d/dev/Ojyx/test/core/config/supabase_config_test.dart: SupabaseConfig should expose client getters                                                                                  00:07 +16 -1: /mnt/d/dev/Ojyx/test/core/config/supabase_config_test.dart: SupabaseConfig should expose client getters                                                                                  00:07 +16 -1: /mnt/d/dev/Ojyx/test/core/config/supabase_config_test.dart: SupabaseConfig should check authentication status                                                                            00:07 +17 -1: /mnt/d/dev/Ojyx/test/core/config/supabase_config_test.dart: SupabaseConfig should check authentication status                                                                            00:07 +17 -1: /mnt/d/dev/Ojyx/test/core/config/supabase_config_test.dart: SupabaseConfig should handle signInAnonymously                                                                               00:07 +18 -1: /mnt/d/dev/Ojyx/test/core/config/supabase_config_test.dart: SupabaseConfig should handle signInAnonymously                                                                               00:07 +18 -1: /mnt/d/dev/Ojyx/test/core/config/supabase_config_test.dart: SupabaseConfig should handle signOut                                                                                         00:07 +19 -1: /mnt/d/dev/Ojyx/test/core/config/supabase_config_test.dart: SupabaseConfig should handle signOut                                                                                         00:07 +19 -1: /mnt/d/dev/Ojyx/test/core/config/supabase_config_test.dart: SupabaseConfig should have initialize method                                                                                 00:07 +20 -1: /mnt/d/dev/Ojyx/test/core/config/supabase_config_test.dart: SupabaseConfig should have initialize method                                                                                 00:07 +20 -1: /mnt/d/dev/Ojyx/test/core/config/supabase_config_test.dart: SupabaseConfig (tearDownAll)                                                                                                 00:07 +20 -1: loading /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart                                                                                                                              00:07 +20 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should create ServerFailure with error details                                                                              00:07 +21 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should create ServerFailure with error details                                                                              00:07 +21 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should create NetworkFailure                                                                                                00:07 +22 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should create NetworkFailure                                                                                                00:07 +22 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should create ValidationFailure with field errors                                                                           00:07 +23 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should create ValidationFailure with field errors                                                                           00:07 +23 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should create GameLogicFailure with code                                                                                    00:07 +24 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should create GameLogicFailure with code                                                                                    00:07 +24 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should create AuthenticationFailure                                                                                         00:07 +25 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should create AuthenticationFailure                                                                                         00:07 +25 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should create TimeoutFailure with duration                                                                                  00:07 +26 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should create TimeoutFailure with duration                                                                                  00:07 +26 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should create UnknownFailure                                                                                                00:07 +27 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should create UnknownFailure                                                                                                00:07 +27 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should support equality                                                                                                     00:07 +28 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should support equality                                                                                                     00:08 +28 -1: /mnt/d/dev/Ojyx/test/core/errors/failures_test.dart: Failure should support equality                                                                                                     00:08 +28 -1: loading /mnt/d/dev/Ojyx/test/core/providers/supabase_provider_test.dart                                                                                                                  00:08 +28 -1: /mnt/d/dev/Ojyx/test/core/providers/supabase_provider_test.dart: supabaseClientProvider should provide SupabaseClient instance                                                           00:08 +29 -1: /mnt/d/dev/Ojyx/test/core/providers/supabase_provider_test.dart: supabaseClientProvider should provide SupabaseClient instance                                                           00:08 +29 -1: /mnt/d/dev/Ojyx/test/core/providers/supabase_provider_test.dart: supabaseClientProvider provider should be of correct type                                                               00:08 +30 -1: /mnt/d/dev/Ojyx/test/core/providers/supabase_provider_test.dart: supabaseClientProvider provider should be of correct type                                                               00:09 +30 -1: /mnt/d/dev/Ojyx/test/core/providers/supabase_provider_test.dart: supabaseClientProvider provider should be of correct type                                                               00:09 +30 -1: loading /mnt/d/dev/Ojyx/test/core/usecases/usecase_test.dart                                                                                                                             00:09 +30 -1: /mnt/d/dev/Ojyx/test/core/usecases/usecase_test.dart: UseCase should return success result when params are valid                                                                         00:09 +31 -1: /mnt/d/dev/Ojyx/test/core/usecases/usecase_test.dart: UseCase should return success result when params are valid                                                                         00:09 +31 -1: /mnt/d/dev/Ojyx/test/core/usecases/usecase_test.dart: UseCase should return failure when params indicate failure                                                                         00:09 +32 -1: /mnt/d/dev/Ojyx/test/core/usecases/usecase_test.dart: UseCase should return failure when params indicate failure                                                                         00:09 +32 -1: /mnt/d/dev/Ojyx/test/core/usecases/usecase_test.dart: UseCaseNoParams should return success result without params                                                                        00:09 +33 -1: /mnt/d/dev/Ojyx/test/core/usecases/usecase_test.dart: UseCaseNoParams should return success result without params                                                                        00:09 +33 -1: /mnt/d/dev/Ojyx/test/core/usecases/usecase_test.dart: UseCaseNoParams should return failure when configured to fail                                                                      00:09 +34 -1: /mnt/d/dev/Ojyx/test/core/usecases/usecase_test.dart: UseCaseNoParams should return failure when configured to fail                                                                      00:09 +34 -1: /mnt/d/dev/Ojyx/test/core/usecases/usecase_test.dart: NoParams should be constructable                                                                                                   00:09 +35 -1: /mnt/d/dev/Ojyx/test/core/usecases/usecase_test.dart: NoParams should be constructable                                                                                                   00:09 +35 -1: loading /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart                                                                                                                              00:09 +35 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Game Constants should have valid player limits                                                                                      00:09 +36 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Game Constants should have valid player limits                                                                                      00:09 +36 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Game Constants should have valid grid dimensions                                                                                    00:09 +37 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Game Constants should have valid grid dimensions                                                                                    00:09 +37 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Game Constants should have valid initial game settings                                                                              00:09 +38 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Game Constants should have valid initial game settings                                                                              00:09 +38 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Game Constants should have valid card value range                                                                                   00:09 +39 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Game Constants should have valid card value range                                                                                   00:09 +39 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Timing Constants should have reasonable timeout durations                                                                           00:09 +40 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Timing Constants should have reasonable timeout durations                                                                           00:09 +40 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Card Distribution should have distribution for all card values                                                                      00:09 +41 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Card Distribution should have distribution for all card values                                                                      00:09 +41 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Card Distribution should have correct total cards                                                                                   00:09 +42 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Card Distribution should have correct total cards                                                                                   00:09 +42 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Card Distribution should have valid distribution counts                                                                             00:09 +43 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Card Distribution should have valid distribution counts                                                                             00:09 +43 -1: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Card Distribution should have more neutral cards than extreme cards                                                                 00:09 +43 -2: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: Card Distribution should have more neutral cards than extreme cards [E]                                                             
  Expected: a value greater than <15>
    Actual: <15>
     Which: is not a value greater than <15>
  
  package:matcher                                     expect
  package:flutter_test/src/widget_tester.dart 474:18  expect
  test/core/utils/constants_test.dart 80:7            main.<fn>.<fn>
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart -p vm --plain-name 'Card Distribution should have more neutral cards than extreme cards'
00:09 +43 -2: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: CardValueColor enum should have all color categories                                                                                00:09 +44 -2: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: CardValueColor enum should have all color categories                                                                                00:10 +44 -2: /mnt/d/dev/Ojyx/test/core/utils/constants_test.dart: CardValueColor enum should have all color categories                                                                                00:10 +44 -2: loading /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart                                                                                                                             00:10 +44 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: CardValueExtensions cardColor should return darkBlue for negative values                                                           00:10 +45 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: CardValueExtensions cardColor should return darkBlue for negative values                                                           00:10 +45 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: CardValueExtensions cardColor should return lightBlue for zero                                                                     00:10 +46 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: CardValueExtensions cardColor should return lightBlue for zero                                                                     00:10 +46 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: CardValueExtensions cardColor should return green for values 1-4                                                                   00:10 +47 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: CardValueExtensions cardColor should return green for values 1-4                                                                   00:10 +47 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: CardValueExtensions cardColor should return yellow for values 5-8                                                                  00:10 +48 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: CardValueExtensions cardColor should return yellow for values 5-8                                                                  00:10 +48 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: CardValueExtensions cardColor should return red for values 9 and above                                                             00:10 +49 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: CardValueExtensions cardColor should return red for values 9 and above                                                             00:10 +49 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: CardValueExtensions displayColor should return correct colors for each category                                                    00:10 +50 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: CardValueExtensions displayColor should return correct colors for each category                                                    00:10 +50 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: CardValueExtensions displayColor should cover all card value ranges                                                                00:10 +51 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: CardValueExtensions displayColor should cover all card value ranges                                                                00:10 +51 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions shuffled should return a new shuffled list                                                                          00:10 +52 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions shuffled should return a new shuffled list                                                                          00:10 +52 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions shuffled should not modify original list                                                                            00:10 +53 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions shuffled should not modify original list                                                                            00:10 +53 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions shuffled should handle empty list                                                                                   00:10 +54 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions shuffled should handle empty list                                                                                   00:10 +54 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions chunked should split list into chunks of specified size                                                             00:10 +55 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions chunked should split list into chunks of specified size                                                             00:10 +55 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions chunked should handle incomplete last chunk                                                                         00:10 +56 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions chunked should handle incomplete last chunk                                                                         00:10 +56 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions chunked should handle chunk size larger than list                                                                   00:10 +57 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions chunked should handle chunk size larger than list                                                                   00:10 +57 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions chunked should handle empty list                                                                                    00:10 +58 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions chunked should handle empty list                                                                                    00:10 +58 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions chunked should handle chunk size of 1                                                                               00:10 +59 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions chunked should handle chunk size of 1                                                                               00:11 +59 -2: /mnt/d/dev/Ojyx/test/core/utils/extensions_test.dart: ListExtensions chunked should handle chunk size of 1                                                                               00:11 +59 -2: loading /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart                                                                                                00:11 +59 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: AuthNotifier should return existing user if already authenticated                                     00:11 +60 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: AuthNotifier should return existing user if already authenticated                                     00:11 +60 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: AuthNotifier should sign in anonymously if no current user                                            00:11 +61 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: AuthNotifier should sign in anonymously if no current user                                            00:11 +61 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: AuthNotifier should return null if anonymous sign in fails                                            00:11 +62 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: AuthNotifier should return null if anonymous sign in fails                                            00:11 +62 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: AuthNotifier signOut should sign out user and invalidate state                                        00:11 +63 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: AuthNotifier signOut should sign out user and invalidate state                                        00:11 +63 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: AuthNotifier currentUserId should return user id when authenticated                                   00:11 +64 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: AuthNotifier currentUserId should return user id when authenticated                                   00:11 +64 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: AuthNotifier currentUserId should return null when not authenticated                                  00:11 +65 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: AuthNotifier currentUserId should return null when not authenticated                                  00:11 +65 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: currentUserId provider should return user id when user is authenticated                               00:11 +66 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: currentUserId provider should return user id when user is authenticated                               00:11 +66 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: currentUserId provider should return null when user is not authenticated                              00:11 +67 -2: /mnt/d/dev/Ojyx/test/features/auth/presentation/providers/auth_provider_test.dart: currentUserId provider should return null when user is not authenticated                              00:11 +67 -2: loading /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart                                                                                  00:11 +67 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should initialize with default action cards               00:11 +68 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should initialize with default action cards               00:11 +68 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should get empty player action cards initially            00:11 +69 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should get empty player action cards initially            00:11 +69 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should add action card to player                          00:11 +70 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should add action card to player                          00:11 +70 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should add multiple action cards to different players     00:11 +71 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should add multiple action cards to different players     00:11 +71 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should throw when adding more than 3 cards to a player    00:11 +72 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should throw when adding more than 3 cards to a player    00:11 +72 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should remove action card from player                     00:11 +73 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should remove action card from player                     00:11 +73 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should throw when removing card player does not have      00:11 +74 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should throw when removing card player does not have      00:11 +74 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should draw action card from pile                         00:11 +75 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should draw action card from pile                         00:11 +75 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should return null when drawing from empty pile           00:11 +76 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should return null when drawing from empty pile           00:11 +76 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should discard action card                                00:11 +77 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should discard action card                                00:11 +77 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should shuffle action cards                               00:11 +78 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should shuffle action cards                               00:11 +78 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should maintain player cards after operations             00:11 +79 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should maintain player cards after operations             00:12 +79 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_impl_test.dart: ActionCardLocalDataSourceImpl should maintain player cards after operations             00:12 +79 -2: loading /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart                                                                                       00:12 +79 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should define getAvailableActionCards method             00:12 +80 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should define getAvailableActionCards method             00:12 +80 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should define getPlayerActionCards method                00:12 +81 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should define getPlayerActionCards method                00:12 +81 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should define addActionCardToPlayer method               00:12 +82 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should define addActionCardToPlayer method               00:12 +82 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ... interface should handle exception when adding card to player with full hand              00:12 +83 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ... interface should handle exception when adding card to player with full hand              00:12 +83 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should define removeActionCardFromPlayer method          00:12 +84 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should define removeActionCardFromPlayer method          00:12 +84 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ... interface should handle exception when removing card player doesn't have                 00:12 +85 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ... interface should handle exception when removing card player doesn't have                 00:12 +85 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should define drawActionCard method                      00:12 +86 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should define drawActionCard method                      00:12 +86 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should return null when draw pile is empty               00:12 +87 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should return null when draw pile is empty               00:12 +87 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should define discardActionCard method                   00:12 +88 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should define discardActionCard method                   00:12 +88 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should define shuffleActionCards method                  00:12 +89 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should define shuffleActionCards method                  00:12 +89 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should handle multiple operations in sequence            00:12 +90 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should handle multiple operations in sequence            00:13 +90 -2: /mnt/d/dev/Ojyx/test/features/game/data/datasources/action_card_local_datasource_test.dart: ActionCardLocalDataSource interface should handle multiple operations in sequence            00:13 +90 -2: loading /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart                                                                                                        00:13 +90 -2: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel should create GameStateModel with all required fields                                          00:13 +91 -2: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel should create GameStateModel with all required fields                                          00:13 +91 -2: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel should create GameStateModel with optional fields                                              00:13 +92 -2: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel should create GameStateModel with optional fields                                              00:13 +92 -2: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel Domain conversion should convert from domain entity correctly                                  00:13 +93 -2: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel Domain conversion should convert from domain entity correctly                                  00:13 +93 -2: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel Domain conversion should convert to domain entity correctly                                    00:13 +94 -2: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel Domain conversion should convert to domain entity correctly                                    00:13 +94 -2: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel Domain conversion should maintain data integrity through round-trip conversion                 00:13 +95 -2: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel Domain conversion should maintain data integrity through round-trip conversion                 00:13 +95 -2: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel JSON serialization should serialize to JSON correctly                                          00:13 +95 -3: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel JSON serialization should serialize to JSON correctly [E]                                      
  Expected: 'waiting'
    Actual: 'waitingToStart'
     Which: is different. Both strings start the same, but the actual value also has the following trailing characters: ToStart
  
  package:matcher                                                  expect
  package:flutter_test/src/widget_tester.dart 474:18               expect
  test/features/game/data/models/game_state_model_test.dart 257:9  main.<fn>.<fn>.<fn>
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart -p vm --plain-name 'GameStateModel JSON serialization should serialize to JSON correctly'
00:13 +95 -3: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel JSON serialization should deserialize from JSON correctly                                      00:13 +96 -3: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel JSON serialization should deserialize from JSON correctly                                      00:13 +96 -3: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel should support equality comparison                                                             00:13 +97 -3: /mnt/d/dev/Ojyx/test/features/game/data/models/game_state_model_test.dart: GameStateModel should support equality comparison                                                             00:13 +97 -3: loading /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart                                                                                       00:13 +97 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should get available action cards from datasource                   00:13 +98 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should get available action cards from datasource                   00:13 +98 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should get player action cards from datasource                      00:13 +99 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should get player action cards from datasource                      00:13 +99 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should add action card to player through datasource                 00:13 +100 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should add action card to player through datasource                00:13 +100 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should remove action card from player through datasource           00:13 +101 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should remove action card from player through datasource           00:13 +101 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should draw action card from datasource                            00:13 +102 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should draw action card from datasource                            00:13 +102 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should return null when drawing from empty pile                    00:13 +103 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should return null when drawing from empty pile                    00:13 +103 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should discard action card through datasource                      00:13 +104 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should discard action card through datasource                      00:13 +104 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should shuffle action cards through datasource                     00:13 +105 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should shuffle action cards through datasource                     00:13 +105 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ... should propagate exception when adding card to player with full hand                    00:13 +106 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ... should propagate exception when adding card to player with full hand                    00:13 +106 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should propagate exception when removing card player does not have 00:13 +107 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should propagate exception when removing card player does not have 00:14 +107 -3: /mnt/d/dev/Ojyx/test/features/game/data/repositories/action_card_repository_impl_test.dart: ActionCardRepositoryImpl should propagate exception when removing card player does not have 00:14 +107 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart                                                                                                        00:14 +107 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard should create ActionCard with required parameters                                                  00:14 +108 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard should create ActionCard with required parameters                                                  00:14 +108 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard should create ActionCard with all parameters                                                       00:14 +109 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard should create ActionCard with all parameters                                                       00:14 +109 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard isImmediate getter should return true when timing is immediate                                     00:14 +110 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard isImmediate getter should return true when timing is immediate                                     00:14 +110 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard isImmediate getter should return false when timing is not immediate                                00:14 +111 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard isImmediate getter should return false when timing is not immediate                                00:14 +111 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard isOptional getter should return true when timing is optional                                       00:14 +112 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard isOptional getter should return true when timing is optional                                       00:14 +112 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard isOptional getter should return true by default when timing not specified                          00:14 +113 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard isOptional getter should return true by default when timing not specified                          00:14 +113 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard isReactive getter should return true when timing is reactive                                       00:14 +114 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard isReactive getter should return true when timing is reactive                                       00:14 +114 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard JSON serialization should serialize to JSON correctly                                              00:14 +115 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard JSON serialization should serialize to JSON correctly                                              00:14 +115 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard JSON serialization should deserialize from JSON correctly                                          00:14 +116 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard JSON serialization should deserialize from JSON correctly                                          00:14 +116 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard ActionCardType enum should have all expected card types                                            00:14 +117 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard ActionCardType enum should have all expected card types                                            00:14 +117 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard ActionTiming enum should have all expected timing types                                            00:14 +118 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard ActionTiming enum should have all expected timing types                                            00:14 +118 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard ActionTarget enum should have all expected target types                                            00:14 +119 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard ActionTarget enum should have all expected target types                                            00:14 +119 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard should support equality comparison                                                                 00:14 +120 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard should support equality comparison                                                                 00:15 +120 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/action_card_test.dart: ActionCard should support equality comparison                                                                 00:15 +120 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart                                                                                                               00:15 +120 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should create a valid card with value in range                                                           00:15 +121 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should create a valid card with value in range                                                           00:15 +121 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should throw assertion error for value below minimum                                                     00:15 +122 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should throw assertion error for value below minimum                                                     00:15 +122 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should throw assertion error for value above maximum                                                     00:15 +123 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should throw assertion error for value above maximum                                                     00:15 +123 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should create revealed card                                                                              00:15 +124 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should create revealed card                                                                              00:15 +124 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should correctly identify card color                                                                     00:15 +125 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should correctly identify card color                                                                     00:15 +125 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should reveal card                                                                                       00:15 +126 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should reveal card                                                                                       00:15 +126 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should hide card                                                                                         00:15 +127 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should hide card                                                                                         00:15 +127 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should support value equality                                                                            00:15 +128 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/card_test.dart: Card Entity should support value equality                                                                            00:15 +128 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart                                                                                                         00:15 +128 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should create DeckState with draw and discard piles                                                  00:15 +129 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should create DeckState with draw and discard piles                                                  00:15 +129 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should create empty DeckState                                                                        00:15 +130 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should create empty DeckState                                                                        00:15 +130 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should get top discard card when discard pile is not empty                                           00:15 +131 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should get top discard card when discard pile is not empty                                           00:15 +131 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should return null for top discard when pile is empty                                                00:15 +132 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should return null for top discard when pile is empty                                                00:15 +132 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should calculate remaining draw count                                                                00:15 +133 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should calculate remaining draw count                                                                00:15 +133 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should check if draw pile is empty                                                                   00:15 +134 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should check if draw pile is empty                                                                   00:15 +134 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should draw a card from draw pile                                                                    00:15 +135 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should draw a card from draw pile                                                                    00:15 +135 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should return null when drawing from empty pile                                                      00:15 +136 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should return null when drawing from empty pile                                                      00:15 +136 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should add card to discard pile                                                                      00:15 +137 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should add card to discard pile                                                                      00:15 +137 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should reshuffle discard pile into draw pile                                                         00:15 +138 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should reshuffle discard pile into draw pile                                                         00:15 +138 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should not reshuffle if discard pile has one or no cards                                             00:15 +139 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should not reshuffle if discard pile has one or no cards                                             00:15 +139 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should support value equality                                                                        00:15 +140 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should support value equality                                                                        00:15 +140 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should serialize to and from JSON                                                                    00:15 +141 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should serialize to and from JSON                                                                    00:15 +141 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should copy with modifications                                                                       00:15 +142 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should copy with modifications                                                                       00:16 +142 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/deck_state_test.dart: DeckState should copy with modifications                                                                       00:16 +142 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart                                                                                                         00:16 +142 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should create initial game state                                                              00:16 +143 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should create initial game state                                                              00:16 +143 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should get current player                                                                     00:16 +144 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should get current player                                                                     00:16 +144 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should move to next player clockwise                                                          00:16 +145 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should move to next player clockwise                                                          00:16 +145 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should move to next player counter-clockwise                                                  00:16 +146 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should move to next player counter-clockwise                                                  00:16 +146 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should wrap around when moving to next player                                                 00:16 +147 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should wrap around when moving to next player                                                 00:16 +147 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should draw card from deck                                                                    00:16 +148 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should draw card from deck                                                                    00:16 +148 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should reshuffle discard pile when deck is empty                                              00:16 +149 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should reshuffle discard pile when deck is empty                                              00:16 +149 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should discard card                                                                           00:16 +150 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should discard card                                                                           00:16 +150 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should check if game can start                                                                00:16 +151 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should check if game can start                                                                00:16 +151 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should detect end of round when player reveals all cards                                      00:16 +152 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should detect end of round when player reveals all cards                                      00:16 +152 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should check if all players finished last round                                               00:16 +153 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should check if all players finished last round                                               00:16 +153 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should calculate scores with penalty for initiator                                            00:16 +154 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should calculate scores with penalty for initiator                                            00:17 +154 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/game_state_test.dart: GameState Entity should calculate scores with penalty for initiator                                            00:17 +154 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart                                                                                                        00:17 +154 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should create empty grid with correct dimensions                                            00:17 +155 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should create empty grid with correct dimensions                                            00:17 +155 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should create grid from cards list                                                          00:17 +156 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should create grid from cards list                                                          00:17 +156 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should throw if cards list has wrong length                                                 00:17 +157 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should throw if cards list has wrong length                                                 00:17 +157 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should get card at position                                                                 00:17 +158 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should get card at position                                                                 00:17 +158 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should set card at position                                                                 00:17 +159 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should set card at position                                                                 00:17 +159 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should reveal card at position                                                              00:17 +160 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should reveal card at position                                                              00:17 +160 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should calculate total score correctly                                                      00:17 +161 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should calculate total score correctly                                                      00:17 +161 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should check if all cards are revealed                                                      00:17 +162 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should check if all cards are revealed                                                      00:17 +162 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should detect identical columns                                                             00:17 +163 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should detect identical columns                                                             00:17 +163 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should remove column                                                                        00:17 +164 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_grid_test.dart: PlayerGrid Entity should remove column                                                                        00:17 +164 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart                                                                                                       00:17 +164 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should create a valid PlayerState                                                                00:17 +165 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should create a valid PlayerState                                                                00:17 +165 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should handle empty card list                                                                    00:17 +166 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should handle empty card list                                                                    00:17 +166 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should support value equality                                                                    00:17 +167 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should support value equality                                                                    00:17 +167 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should be different when properties differ                                                       00:17 +168 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should be different when properties differ                                                       00:17 +168 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should handle finished state                                                                     00:17 +169 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should handle finished state                                                                     00:17 +169 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should handle multiple identical columns                                                         00:17 +170 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should handle multiple identical columns                                                         00:17 +170 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should serialize to/from JSON                                                                    00:17 +171 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should serialize to/from JSON                                                                    00:17 +171 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should create a copy with copyWith                                                               00:17 +172 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should create a copy with copyWith                                                               00:17 +172 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should validate cards list length                                                                00:17 +173 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should validate cards list length                                                                00:18 +173 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_state_test.dart: PlayerState should validate cards list length                                                                00:18 +173 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart                                                                                                             00:18 +173 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should create player with required fields                                                            00:18 +174 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should create player with required fields                                                            00:18 +174 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should create host player                                                                            00:18 +175 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should create host player                                                                            00:18 +175 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should add action card to hand                                                                       00:18 +176 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should add action card to hand                                                                       00:18 +176 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should not add more than 3 action cards                                                              00:18 +177 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should not add more than 3 action cards                                                              00:18 +177 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should remove action card from hand                                                                  00:18 +178 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should remove action card from hand                                                                  00:18 +178 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should calculate current score                                                                       00:18 +179 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should calculate current score                                                                       00:18 +179 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should support value equality                                                                        00:18 +180 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should support value equality                                                                        00:19 +180 -3: /mnt/d/dev/Ojyx/test/features/game/domain/entities/player_test.dart: Player Entity should support value equality                                                                        00:19 +180 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart                                                                                         00:19 +180 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should get empty list when no action cards available                      00:19 +181 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should get empty list when no action cards available                      00:19 +181 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should get available action cards                                         00:19 +182 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should get available action cards                                         00:19 +182 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should get player action cards when empty                                 00:19 +183 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should get player action cards when empty                                 00:19 +183 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should add action card to player                                          00:19 +184 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should add action card to player                                          00:19 +184 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should prevent adding more than 3 action cards                            00:19 +185 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should prevent adding more than 3 action cards                            00:19 +185 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should remove action card from player                                     00:19 +186 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should remove action card from player                                     00:19 +186 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should throw when removing card player does not have                      00:19 +187 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should throw when removing card player does not have                      00:19 +187 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should draw action card from pile                                         00:19 +188 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should draw action card from pile                                         00:19 +188 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should return null when drawing from empty pile                           00:19 +189 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should return null when drawing from empty pile                           00:19 +189 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should discard action card                                                00:19 +190 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should discard action card                                                00:19 +190 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should shuffle action cards                                               00:19 +191 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should shuffle action cards                                               00:19 +191 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should handle multiple players independently                              00:19 +192 -3: /mnt/d/dev/Ojyx/test/features/game/domain/repositories/action_card_repository_test.dart: ActionCardRepository should handle multiple players independently                              00:19 +192 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/calculate_scores_test.dart                                                                                                  00:19 +192 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/calculate_scores_test.dart: CalculateScores UseCase should calculate basic scores correctly                                         00:19 +193 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/calculate_scores_test.dart: CalculateScores UseCase should calculate basic scores correctly                                         00:19 +193 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/calculate_scores_test.dart: CalculateScores UseCase should handle empty grids                                                       00:19 +194 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/calculate_scores_test.dart: CalculateScores UseCase should handle empty grids                                                       00:19 +194 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/calculate_scores_test.dart: CalculateScores UseCase should handle negative scores                                                   00:19 +195 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/calculate_scores_test.dart: CalculateScores UseCase should handle negative scores                                                   00:19 +195 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/calculate_scores_test.dart: CalculateScores UseCase should only count revealed cards                                                00:19 +196 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/calculate_scores_test.dart: CalculateScores UseCase should only count revealed cards                                                00:19 +196 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/calculate_scores_test.dart: CalculateScores UseCase should apply score multiplier                                                   00:19 +197 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/calculate_scores_test.dart: CalculateScores UseCase should apply score multiplier                                                   00:19 +197 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/calculate_scores_test.dart: CalculateScores UseCase should return sorted scores when requested                                      00:19 +198 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/calculate_scores_test.dart: CalculateScores UseCase should return sorted scores when requested                                      00:20 +198 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/calculate_scores_test.dart: CalculateScores UseCase should return sorted scores when requested                                      00:20 +198 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart                                                                                                   00:20 +198 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should continue to next player when not in last round                              00:20 +199 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should continue to next player when not in last round                              00:20 +199 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should end round when last player finished their last turn                         00:20 +200 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should end round when last player finished their last turn                         00:20 +200 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should apply double penalty if initiator does not have lowest score                00:20 +201 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should apply double penalty if initiator does not have lowest score                00:20 +201 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should not apply penalty if initiator has lowest score                             00:20 +202 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should not apply penalty if initiator has lowest score                             00:20 +202 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should handle tied lowest scores correctly                                         00:20 +203 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should handle tied lowest scores correctly                                         00:20 +203 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should set finishedAt timestamp when round ends                                    00:20 +204 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should set finishedAt timestamp when round ends                                    00:20 +204 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should continue last round if not at last player                                   00:20 +205 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should continue last round if not at last player                                   00:21 +205 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/check_end_round_test.dart: CheckEndRound UseCase should continue last round if not at last player                                   00:21 +205 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart                                                                                                      00:21 +205 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should discard drawn card successfully                                                  00:21 +206 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should discard drawn card successfully                                                  00:21 +206 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should exchange card with grid successfully                                             00:21 +207 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should exchange card with grid successfully                                             00:21 +207 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should fail if no drawn card                                                            00:21 +208 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should fail if no drawn card                                                            00:21 +208 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should fail if not player turn                                                          00:21 +209 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should fail if not player turn                                                          00:21 +209 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should fail if grid position is empty                                                   00:21 +210 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should fail if grid position is empty                                                   00:21 +210 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should fail if grid position is invalid                                                 00:21 +211 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should fail if grid position is invalid                                                 00:21 +211 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should wrap around to first player after last player turn                               00:21 +212 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should wrap around to first player after last player turn                               00:21 +212 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should check for column completion after exchange                                       00:21 +213 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/discard_card_test.dart: DiscardCard UseCase should check for column completion after exchange                                       00:21 +213 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/distribute_cards_test.dart                                                                                                  00:21 +213 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/distribute_cards_test.dart: DistributeCards UseCase should distribute 12 cards to each player                                       00:21 +214 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/distribute_cards_test.dart: DistributeCards UseCase should distribute 12 cards to each player                                       00:21 +214 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/distribute_cards_test.dart: DistributeCards UseCase should reveal 2 initial cards for each player                                   00:21 +215 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/distribute_cards_test.dart: DistributeCards UseCase should reveal 2 initial cards for each player                                   00:21 +215 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/distribute_cards_test.dart: DistributeCards UseCase should create initial discard pile                                              00:21 +216 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/distribute_cards_test.dart: DistributeCards UseCase should create initial discard pile                                              00:21 +216 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/distribute_cards_test.dart: DistributeCards UseCase should maintain unique cards in distribution                                    00:21 +217 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/distribute_cards_test.dart: DistributeCards UseCase should maintain unique cards in distribution                                    00:21 +217 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/distribute_cards_test.dart: DistributeCards UseCase should handle maximum players                                                   00:21 +218 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/distribute_cards_test.dart: DistributeCards UseCase should handle maximum players                                                   00:22 +218 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/distribute_cards_test.dart: DistributeCards UseCase should handle maximum players                                                   00:22 +218 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart                                                                                                         00:22 +218 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart: DrawCard UseCase should draw card from deck successfully                                                       00:22 +219 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart: DrawCard UseCase should draw card from deck successfully                                                       00:22 +219 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart: DrawCard UseCase should draw card from discard pile successfully                                               00:22 +220 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart: DrawCard UseCase should draw card from discard pile successfully                                               00:22 +220 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart: DrawCard UseCase should fail if not player turn                                                                00:22 +221 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart: DrawCard UseCase should fail if not player turn                                                                00:22 +221 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart: DrawCard UseCase should fail if already drawn card                                                             00:22 +222 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart: DrawCard UseCase should fail if already drawn card                                                             00:22 +222 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart: DrawCard UseCase should fail if deck is empty                                                                  00:22 +223 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart: DrawCard UseCase should fail if deck is empty                                                                  00:22 +223 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart: DrawCard UseCase should fail if discard pile is empty                                                          00:22 +224 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart: DrawCard UseCase should fail if discard pile is empty                                                          00:22 +224 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart: DrawCard UseCase should reshuffle deck when empty except last discard                                          00:22 +225 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/draw_card_test.dart: DrawCard UseCase should reshuffle deck when empty except last discard                                          00:22 +225 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/end_turn_test.dart                                                                                                          00:22 +225 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/end_turn_test.dart: EndTurn UseCase should validate completed columns and clear them                                                00:22 +226 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/end_turn_test.dart: EndTurn UseCase should validate completed columns and clear them                                                00:22 +226 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/end_turn_test.dart: EndTurn UseCase should not clear column if not all cards revealed                                               00:22 +227 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/end_turn_test.dart: EndTurn UseCase should not clear column if not all cards revealed                                               00:22 +227 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/end_turn_test.dart: EndTurn UseCase should check if player has revealed all cards                                                   00:22 +228 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/end_turn_test.dart: EndTurn UseCase should check if player has revealed all cards                                                   00:22 +228 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/end_turn_test.dart: EndTurn UseCase should handle multiple completed columns                                                        00:22 +229 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/end_turn_test.dart: EndTurn UseCase should handle multiple completed columns                                                        00:22 +229 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/end_turn_test.dart: EndTurn UseCase should calculate score correctly                                                                00:22 +230 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/end_turn_test.dart: EndTurn UseCase should calculate score correctly                                                                00:22 +230 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/end_turn_test.dart: EndTurn UseCase should not process turn for wrong player                                                        00:22 +231 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/end_turn_test.dart: EndTurn UseCase should not process turn for wrong player                                                        00:23 +231 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/end_turn_test.dart: EndTurn UseCase should not process turn for wrong player                                                        00:23 +231 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart                                                                                      00:23 +231 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should initialize game with correct number of players             00:23 +232 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should initialize game with correct number of players             00:23 +232 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should set first player as host                                   00:23 +233 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should set first player as host                                   00:23 +233 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should initialize players with empty grids and no action cards    00:23 +234 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should initialize players with empty grids and no action cards    00:23 +234 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should set player names correctly                                 00:23 +235 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should set player names correctly                                 00:23 +235 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should start with first player when no starting player specified  00:23 +236 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should start with first player when no starting player specified  00:23 +236 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: ... should start with specified player when startingPlayerId is provided                    00:23 +237 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: ... should start with specified player when startingPlayerId is provided                    00:23 +237 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should default to first player if startingPlayerId not found      00:23 +238 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should default to first player if startingPlayerId not found      00:23 +238 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should handle single player game                                  00:23 +239 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should handle single player game                                  00:23 +239 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should create players with correct IDs                            00:23 +240 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should create players with correct IDs                            00:24 +240 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/game_initialization_use_case_test.dart: GameInitializationUseCase should create players with correct IDs                            00:24 +240 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/process_last_round_test.dart                                                                                                00:24 +240 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/process_last_round_test.dart: ProcessLastRound UseCase should reveal all cards for all players except initiator                     00:24 +241 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/process_last_round_test.dart: ProcessLastRound UseCase should reveal all cards for all players except initiator                     00:24 +241 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/process_last_round_test.dart: ProcessLastRound UseCase should not change status during last round processing                        00:24 +242 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/process_last_round_test.dart: ProcessLastRound UseCase should not change status during last round processing                        00:24 +242 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/process_last_round_test.dart: ProcessLastRound UseCase should handle case when initiator is not found                               00:24 +243 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/process_last_round_test.dart: ProcessLastRound UseCase should handle case when initiator is not found                               00:24 +243 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/process_last_round_test.dart: ProcessLastRound UseCase should reveal cards only in occupied positions                               00:24 +244 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/process_last_round_test.dart: ProcessLastRound UseCase should reveal cards only in occupied positions                               00:24 +244 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/process_last_round_test.dart: ProcessLastRound UseCase should handle multiple players correctly                                     00:24 +245 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/process_last_round_test.dart: ProcessLastRound UseCase should handle multiple players correctly                                     00:24 +245 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/process_last_round_test.dart: ProcessLastRound UseCase should do nothing if not in last round                                       00:24 +246 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/process_last_round_test.dart: ProcessLastRound UseCase should do nothing if not in last round                                       00:24 +246 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/reveal_initial_cards_test.dart                                                                                              00:24 +246 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/reveal_initial_cards_test.dart: RevealInitialCards UseCase should reveal exactly 2 cards per player                                 00:24 +247 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/reveal_initial_cards_test.dart: RevealInitialCards UseCase should reveal exactly 2 cards per player                                 00:24 +247 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/reveal_initial_cards_test.dart: RevealInitialCards UseCase should fail if positions list has wrong length                           00:24 +248 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/reveal_initial_cards_test.dart: RevealInitialCards UseCase should fail if positions list has wrong length                           00:24 +248 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/reveal_initial_cards_test.dart: RevealInitialCards UseCase should fail if position is invalid                                       00:24 +249 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/reveal_initial_cards_test.dart: RevealInitialCards UseCase should fail if position is invalid                                       00:24 +249 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/reveal_initial_cards_test.dart: RevealInitialCards UseCase should fail if player not found                                          00:24 +250 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/reveal_initial_cards_test.dart: RevealInitialCards UseCase should fail if player not found                                          00:24 +250 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/reveal_initial_cards_test.dart: RevealInitialCards UseCase should not reveal already revealed cards                                 00:24 +251 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/reveal_initial_cards_test.dart: RevealInitialCards UseCase should not reveal already revealed cards                                 00:24 +251 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/reveal_initial_cards_test.dart: RevealInitialCards UseCase should handle simultaneous reveals for all players                       00:24 +252 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/reveal_initial_cards_test.dart: RevealInitialCards UseCase should handle simultaneous reveals for all players                       00:25 +252 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/reveal_initial_cards_test.dart: RevealInitialCards UseCase should handle simultaneous reveals for all players                       00:25 +252 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/start_game_test.dart                                                                                                        00:25 +252 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/start_game_test.dart: StartGame UseCase should start game with proper distribution                                                  00:25 +253 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/start_game_test.dart: StartGame UseCase should start game with proper distribution                                                  00:25 +253 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/start_game_test.dart: StartGame UseCase should fail if not enough players                                                           00:25 +254 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/start_game_test.dart: StartGame UseCase should fail if not enough players                                                           00:25 +254 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/start_game_test.dart: StartGame UseCase should fail if game already started                                                         00:25 +255 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/start_game_test.dart: StartGame UseCase should fail if game already started                                                         00:25 +255 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/start_game_test.dart: StartGame UseCase should use default positions if not provided                                                00:25 +256 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/start_game_test.dart: StartGame UseCase should use default positions if not provided                                                00:25 +256 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/start_game_test.dart: StartGame UseCase should handle maximum players                                                               00:25 +257 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/start_game_test.dart: StartGame UseCase should handle maximum players                                                               00:26 +257 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/start_game_test.dart: StartGame UseCase should handle maximum players                                                               00:26 +257 -3: loading /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart                                                                                          00:26 +257 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: (setUpAll)                                                                                      00:26 +257 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: UseActionCardUseCase should use optional action card successfully                               00:26 +258 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: UseActionCardUseCase should use optional action card successfully                               00:26 +258 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: UseActionCardUseCase should fail if player does not have the action card                        00:26 +259 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: UseActionCardUseCase should fail if player does not have the action card                        00:26 +259 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: UseActionCardUseCase should use mandatory action card immediately                               00:26 +260 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: UseActionCardUseCase should use mandatory action card immediately                               00:26 +260 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: UseActionCardUseCase should validate target data for cards that require it                      00:26 +261 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: UseActionCardUseCase should validate target data for cards that require it                      00:26 +261 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: UseActionCardUseCase should handle teleportation action card with valid targets                 00:26 +262 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: UseActionCardUseCase should handle teleportation action card with valid targets                 00:26 +262 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: UseActionCardUseCase should not allow using action card when not player turn                    00:26 +263 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: UseActionCardUseCase should not allow using action card when not player turn                    00:26 +263 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: UseActionCardUseCase should allow reaction cards outside of turn                                00:26 +264 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: UseActionCardUseCase should allow reaction cards outside of turn                                00:26 +264 -3: /mnt/d/dev/Ojyx/test/features/game/domain/use_cases/use_action_card_use_case_test.dart: (tearDownAll)                                                                                   00:26 +264 -3: loading /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart                                                                                              00:26 +264 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should handle complete draw and discard flow                         00:27 +264 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should handle complete draw and discard flow                         00:27 +265 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/action_card_providers_test.dart: actionCardRepositoryProvider should provide action card repository                           00:27 +266 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should handle reshuffle when draw pile is empty                      00:27 +267 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should handle reshuffle when draw pile is empty                      00:27 +268 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should handle reshuffle when draw pile is empty                      00:27 +269 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should handle reshuffle when draw pile is empty                      00:27 +270 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should handle reshuffle when draw pile is empty                      00:27 +271 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should handle reshuffle when draw pile is empty                      00:27 +272 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should handle reshuffle when draw pile is empty                      00:27 +273 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should handle reshuffle when draw pile is empty                      00:27 +274 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should handle reshuffle when draw pile is empty                      00:27 +274 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should prevent actions when not player turn                          00:27 +275 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should prevent actions when not player turn                          00:27 +275 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should show proper animations during card transitions                00:27 +276 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should show proper animations during card transitions                00:27 +276 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should update UI correctly after multiple operations                 00:27 +277 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should update UI correctly after multiple operations                 00:28 +277 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/draw_discard_integration_test.dart: Draw/Discard Integration Tests should update UI correctly after multiple operations                 00:28 +277 -3: loading /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart                                                                                         00:28 +277 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: GameStateNotifier should have null initial state                                               00:28 +278 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: GameStateNotifier should have null initial state                                               00:28 +278 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: GameStateNotifier should load game state                                                       00:28 +279 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: GameStateNotifier should load game state                                                       00:28 +279 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: GameStateNotifier should update state with function                                            00:28 +280 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: GameStateNotifier should update state with function                                            00:28 +280 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: GameStateNotifier should not update state if current state is null                             00:28 +281 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: GameStateNotifier should not update state if current state is null                             00:28 +281 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: GameStateNotifier should handle multiple state updates                                         00:28 +282 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: GameStateNotifier should handle multiple state updates                                         00:28 +282 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: GameStateNotifier should have placeholder methods for game actions                             00:28 +283 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: GameStateNotifier should have placeholder methods for game actions                             00:28 +283 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: gameInitializationUseCaseProvider should provide GameInitializationUseCase instance            00:28 +284 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: gameInitializationUseCaseProvider should provide GameInitializationUseCase instance            00:28 +284 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: gameInitializationUseCaseProvider should provide same instance on multiple reads               00:28 +285 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: gameInitializationUseCaseProvider should provide same instance on multiple reads               00:28 +285 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: gameInitializationUseCaseProvider should initialize game using provided use case               00:28 +286 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/providers/game_state_notifier_test.dart: gameInitializationUseCaseProvider should initialize game using provided use case               00:28 +286 -3: loading /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart                                                                                                   00:28 +286 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should display loading when game state is null                                                00:29 +286 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should display loading when game state is null                                                00:29 +287 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should display all opponents in spectator view                    00:30 +287 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should display all opponents in spectator view                    00:30 +287 -3: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should display game components when game state is loaded                                      
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#dfee1 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#f8bc6 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#29077 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#69c58 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (4) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:30 +287 -4: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should display game components when game state is loaded [E]                                  
  Test failed. See exception logs above.
  The test description was: should display game components when game state is loaded
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart -p vm --plain-name 'GameScreen should display game components when game state is loaded'
00:30 +287 -4: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should display all opponents in spectator view                    00:30 +287 -4: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should display app bar with title and exit button                                             
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#17956 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#8fb30 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#f6907 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#89790 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (4) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:30 +287 -5: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should display app bar with title and exit button [E]                                         
  Test failed. See exception logs above.
  The test description was: should display app bar with title and exit button
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart -p vm --plain-name 'GameScreen should display app bar with title and exit button'
00:30 +287 -5: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should display all opponents in spectator view                    
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#94d4d relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#b8f07 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#f6bc6 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 117 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#3f223 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(3.0, 3.0) (can use size)
  constraints: BoxConstraints(w=194.0, h=214.0)
  size: Size(194.0, 214.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#ceba7 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#e5b71 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#ac6a1 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:30 +287 -5: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should show exit dialog when exit button is pressed                                           
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#c40aa relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#2e6e8 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#f4106 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#38611 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:30 +287 -5: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should display all opponents in spectator view                    
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (7) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:30 +287 -6: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should display all opponents in spectator view [E]                
  Test failed. See exception logs above.
  The test description was: should display all opponents in spectator view
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart -p vm --plain-name 'Spectator View Integration Test should display all opponents in spectator view'
00:30 +288 -6: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should show exit dialog when exit button is pressed                                           00:31 +288 -6: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should show exit dialog when exit button is pressed                                           00:31 +289 -6: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should show exit dialog when exit button is pressed                                           00:31 +289 -6: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should show exit dialog when exit button is pressed                                           
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (4) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:31 +289 -7: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should show exit dialog when exit button is pressed [E]                                       
  Test failed. See exception logs above.
  The test description was: should show exit dialog when exit button is pressed
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart -p vm --plain-name 'GameScreen should show exit dialog when exit button is pressed'
00:31 +290 -7: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should highlight current turn player in spectator view            00:31 +291 -7: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should highlight current turn player in spectator view            00:31 +292 -7: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should highlight current turn player in spectator view            00:31 +292 -7: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should highlight current turn player in spectator view            
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#93ec7 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#c51f2 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#a5176 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 117 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#da3d3 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(3.0, 3.0) (can use size)
  constraints: BoxConstraints(w=194.0, h=214.0)
  size: Size(194.0, 214.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#4096e OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#ed16e relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#afde0 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (7) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:31 +292 -8: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should highlight current turn player in spectator view [E]        
  Test failed. See exception logs above.
  The test description was: should highlight current turn player in spectator view
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart -p vm --plain-name 'Spectator View Integration Test should highlight current turn player in spectator view'
00:31 +293 -8: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should display error when current player not found                                            00:31 +294 -8: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/common_area_widget_test.dart: CommonAreaWidget should display both draw and discard piles                                       00:31 +295 -8: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/common_area_widget_test.dart: CommonAreaWidget should display both draw and discard piles                                       00:31 +296 -8: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/common_area_widget_test.dart: CommonAreaWidget should display both draw and discard piles                                       00:31 +297 -8: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/common_area_widget_test.dart: CommonAreaWidget should display both draw and discard piles                                       00:31 +298 -8: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/common_area_widget_test.dart: CommonAreaWidget should display both draw and discard piles                                       00:31 +299 -8: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/common_area_widget_test.dart: CommonAreaWidget should display both draw and discard piles                                       00:31 +299 -8: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should show finish flag for players who finished                  
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#c6f26 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#11823 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#14537 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 117 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#62294 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(3.0, 3.0) (can use size)
  constraints: BoxConstraints(w=194.0, h=214.0)
  size: Size(194.0, 214.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#265c9 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#2d0ec relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#0855a OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (7) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:31 +299 -9: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should show finish flag for players who finished [E]              
  Test failed. See exception logs above.
  The test description was: should show finish flag for players who finished
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart -p vm --plain-name 'Spectator View Integration Test should show finish flag for players who finished'
00:31 +300 -9: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/common_area_widget_test.dart: CommonAreaWidget should display both draw and discard piles                                       00:31 +300 -9: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should update spectator view when game state changes              
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#8d258 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#7b606 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#fd33c relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 117 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#bd322 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(3.0, 3.0) (can use size)
  constraints: BoxConstraints(w=194.0, h=214.0)
  size: Size(194.0, 214.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#3adf3 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#e9608 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#54693 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:31 +301 -9: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should update spectator view when game state changes              00:31 +302 -9: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should update spectator view when game state changes              00:32 +302 -9: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should update spectator view when game state changes              00:32 +302 -9: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should initialize multiplayer sync on init                                                    
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#68dbb relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#7eccb relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#1180b relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#05ced OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:32 +303 -9: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should update spectator view when game state changes              00:32 +303 -9: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should initialize multiplayer sync on init                                                    
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (4) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:32 +303 -10: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should initialize multiplayer sync on init [E]                                               
  Test failed. See exception logs above.
  The test description was: should initialize multiplayer sync on init
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart -p vm --plain-name 'GameScreen should initialize multiplayer sync on init'
00:32 +304 -10: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should update spectator view when game state changes             00:32 +305 -10: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should update spectator view when game state changes             00:32 +306 -10: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should update spectator view when game state changes             00:32 +306 -10: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should handle game over state                                                                
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#e477b relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#11bf7 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#3250e relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#20edc OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (4) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:32 +306 -11: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should handle game over state [E]                                                            
  Test failed. See exception logs above.
  The test description was: should handle game over state
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart -p vm --plain-name 'GameScreen should handle game over state'
00:32 +307 -11: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should update spectator view when game state changes             00:32 +307 -11: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should update spectator view when game state changes             
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: true
  Actual: <false>

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart:176:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart line 176
The test description was:
  should update spectator view when game state changes
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (8) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:32 +307 -12: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should update spectator view when game state changes [E]         
  Test failed. See exception logs above.
  The test description was: should update spectator view when game state changes
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart -p vm --plain-name 'Spectator View Integration Test should update spectator view when game state changes'
00:32 +308 -12: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/deck_and_discard_widget_test.dart: DeckAndDiscardWidget should display deck and discard pile                                   00:32 +309 -12: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/deck_and_discard_widget_test.dart: DeckAndDiscardWidget should display deck and discard pile                                   00:32 +310 -12: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/deck_and_discard_widget_test.dart: DeckAndDiscardWidget should display deck and discard pile                                   00:32 +310 -12: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should pass correct props to child widgets                                                   
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#7bd13 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#93cc4 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#29a93 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#3efd5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:32 +311 -12: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/deck_and_discard_widget_test.dart: DeckAndDiscardWidget should display deck and discard pile                                   00:32 +311 -12: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should pass correct props to child widgets                                                   
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (4) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:32 +311 -13: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should pass correct props to child widgets [E]                                               
  Test failed. See exception logs above.
  The test description was: should pass correct props to child widgets
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart -p vm --plain-name 'GameScreen should pass correct props to child widgets'
00:32 +312 -13: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/deck_and_discard_widget_test.dart: DeckAndDiscardWidget should display deck and discard pile                                   00:32 +313 -13: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should handle tap on opponent grid                               00:32 +314 -13: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should handle tap on opponent grid                               00:32 +314 -13: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should handle tap on opponent grid                               
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#62190 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#0cd20 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#1169c relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#f3313 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#e99a5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#8da6a relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#d7a58 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════

Warning: A call to tap() with finder "Found 1 widget with type "OpponentGridWidget" (ignoring all but first): [
  OpponentGridWidget(dependencies: [InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#fe0b8]]),
]" derived an Offset (Offset(132.0, 1464.9)) that would not hit test on the specified widget.
Maybe the widget is actually off-screen, or another widget is obscuring it, or the widget cannot receive pointer events.
Indeed, Offset(132.0, 1464.9) is outside the bounds of the root of the render tree, Size(800.0, 600.0).
The finder corresponds to this RenderBox: RenderSemanticsGestureHandler#73783
The hit test result at that offset is: HitTestResult(HitTestEntry<HitTestTarget>#03887(_ReusableRenderView#4d5a4), HitTestEntry<HitTestTarget>#873e3(<AutomatedTestWidgetsFlutterBinding>))
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:2077:25)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1861:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:1041:7)
#3      main.<anonymous closure>.<anonymous closure> (file:///mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart:198:20)
<asynchronous suspension>
#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
#6      StackZoneSpecification._registerCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:114:42)
<asynchronous suspension>
To silence this warning, pass "warnIfMissed: false" to "tap()".
To make this warning fatal, set WidgetController.hitTestWarningShouldBeFatal to true.

══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (7) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:32 +314 -14: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should handle tap on opponent grid [E]                           
  Test failed. See exception logs above.
  The test description was: should handle tap on opponent grid
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart -p vm --plain-name 'Spectator View Integration Test should handle tap on opponent grid'
00:32 +315 -14: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should be scrollable                                                                         00:32 +315 -14: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should be scrollable                                                                         
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#adf18 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#1beb8 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#4d28d relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#48962 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:32 +315 -14: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/deck_and_discard_widget_test.dart: DeckAndDiscardWidget should handle deck tap when canDraw is true                            

Warning: A call to tap() with finder "Found 1 widget with type "CardWidget" (ignoring all but first): [
  CardWidget(dependencies: [InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#16f67]]),
]" derived an Offset (Offset(206.1, 99.9)) that would not hit test on the specified widget.
Maybe the widget is actually off-screen, or another widget is obscuring it, or the widget cannot receive pointer events.
The finder corresponds to this RenderBox: RenderAspectRatio#e8ae5 relayoutBoundary=up1
The hit test result at that offset is: HitTestResult(HitTestEntry<HitTestTarget>#8d24f(TextSpan(inherit: false, color: Color(alpha: 1.0000, red: 0.4039, green: 0.3137, blue: 0.6431, colorSpace: ColorSpace.sRGB), family: MaterialIcons, size: 32.0, height: 1.0x, leadingDistribution: even, "")), RenderParagraph#0a296@Offset(16.0, 15.9), RenderPositionedBox#e67a8@Offset(16.0, 15.9), RenderConstrainedBox#b2539@Offset(16.0, 15.9), RenderExcludeSemantics#0fdb9@Offset(16.0, 15.9), RenderSemanticsAnnotations#1bdb2@Offset(16.0, 15.9), RenderPositionedBox#170b7@Offset(37.0, 52.9), RenderPadding#22763@Offset(37.0, 52.9), RenderDecoratedBox#9893c@Offset(37.0, 52.9), RenderStack#02e11@Offset(37.0, 52.9), RenderPadding#47092@Offset(40.0, 55.9), RenderDecoratedBox#91738@Offset(40.0, 55.9), RenderConstrainedBox#3e335@Offset(40.0, 55.9), RenderPointerListener#8410c@Offset(40.0, 55.9), RenderSemanticsGestureHandler#ca548@Offset(40.0, 55.9), RenderStack#a2fca@Offset(40.0, 55.9), RenderFlex#0a4f3@Offset(73.3, 83.9), RenderFlex#c8c97@Offset(190.1, 83.9), RenderPadding#35f60@Offset(206.1, 99.9), RenderDecoratedBox#81281@Offset(206.1, 99.9), RenderCustomMultiChildLayoutBox#b6a07@Offset(206.1, 99.9), _RenderInkFeatures#97f2d@Offset(206.1, 99.9), RenderPhysicalModel#3cfba@Offset(206.1, 99.9), RenderSemanticsAnnotations#59001@Offset(206.1, 99.9), RenderRepaintBoundary#f1d3c@Offset(206.1, 99.9), RenderIgnorePointer#8a9d3@Offset(206.1, 99.9), _RenderSnapshotWidget#2031c@Offset(206.1, 99.9), _RenderSnapshotWidget#59c4a@Offset(206.1, 99.9), _RenderSnapshotWidget#f2de6@Offset(206.1, 99.9), _RenderSnapshotWidget#5cbfc@Offset(206.1, 99.9), RenderRepaintBoundary#a007a@Offset(206.1, 99.9), RenderSemanticsAnnotations#ddb68@Offset(206.1, 99.9), RenderOffstage#8a320@Offset(206.1, 99.9), RenderSemanticsAnnotations#ce701@Offset(206.1, 99.9), _RenderTheater#1e55f@Offset(206.1, 99.9), RenderAbsorbPointer#8ae3c@Offset(206.1, 99.9), RenderPointerListener#eff91@Offset(206.1, 99.9), RenderSemanticsAnnotations#7d9e8@Offset(206.1, 99.9), RenderCustomPaint#e122e@Offset(206.1, 99.9), RenderSemanticsAnnotations#002df@Offset(206.1, 99.9), RenderSemanticsAnnotations#bb7da@Offset(206.1, 99.9), RenderTapRegionSurface#64ae6@Offset(206.1, 99.9), RenderSemanticsAnnotations#fdfec@Offset(206.1, 99.9), RenderSemanticsAnnotations#d0871@Offset(206.1, 99.9), RenderSemanticsAnnotations#f334c@Offset(206.1, 99.9), HitTestEntry<HitTestTarget>#22261(_ReusableRenderView#2f39e), HitTestEntry<HitTestTarget>#3af73(<AutomatedTestWidgetsFlutterBinding>))
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:2077:25)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1861:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:1041:7)
#3      main.<anonymous closure>.<anonymous closure> (file:///mnt/d/dev/Ojyx/test/features/game/presentation/widgets/deck_and_discard_widget_test.dart:110:20)
<asynchronous suspension>
#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
#6      StackZoneSpecification._registerCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:114:42)
<asynchronous suspension>
To silence this warning, pass "warnIfMissed: false" to "tap()".
To make this warning fatal, set WidgetController.hitTestWarningShouldBeFatal to true.

00:32 +315 -14: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should be scrollable                                                                         
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (4) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:32 +315 -15: /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart: GameScreen should be scrollable [E]                                                                     
  Test failed. See exception logs above.
  The test description was: should be scrollable
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/screens/game_screen_test.dart -p vm --plain-name 'GameScreen should be scrollable'
00:33 +316 -15: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should show correct revealed card counts                         00:33 +316 -15: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/deck_and_discard_widget_test.dart: DeckAndDiscardWidget should handle discard tap when canDraw is true                         

Warning: A call to tap() with finder "Found 1 widget with type "CardWidget" (ignoring all but first): [
  CardWidget(dependencies: [InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#0f0c3]]),
]" derived an Offset (Offset(606.1, 99.9)) that would not hit test on the specified widget.
Maybe the widget is actually off-screen, or another widget is obscuring it, or the widget cannot receive pointer events.
The finder corresponds to this RenderBox: RenderAspectRatio#b6564 relayoutBoundary=up1
The hit test result at that offset is: HitTestResult(HitTestEntry<HitTestTarget>#7ce18(TextSpan(inherit: false, color: Color(alpha: 1.0000, red: 0.4039, green: 0.3137, blue: 0.6431, colorSpace: ColorSpace.sRGB), family: MaterialIcons, size: 32.0, height: 1.0x, leadingDistribution: even, "")), RenderParagraph#9556c@Offset(16.0, 15.9), RenderPositionedBox#8cdd6@Offset(16.0, 15.9), RenderConstrainedBox#fe845@Offset(16.0, 15.9), RenderExcludeSemantics#58aec@Offset(16.0, 15.9), RenderSemanticsAnnotations#a67c7@Offset(16.0, 15.9), RenderPositionedBox#f3ed5@Offset(37.0, 52.9), RenderPadding#d935d@Offset(37.0, 52.9), RenderDecoratedBox#43a9b@Offset(37.0, 52.9), RenderStack#4b2fb@Offset(37.0, 52.9), RenderPadding#ab35d@Offset(40.0, 55.9), RenderDecoratedBox#2d65e@Offset(40.0, 55.9), RenderConstrainedBox#be9a7@Offset(40.0, 55.9), RenderPointerListener#77fac@Offset(40.0, 55.9), RenderSemanticsGestureHandler#f9ed0@Offset(40.0, 55.9), RenderFlex#fa968@Offset(61.0, 83.9), RenderFlex#959d0@Offset(590.1, 83.9), RenderPadding#5cee5@Offset(606.1, 99.9), RenderDecoratedBox#930b7@Offset(606.1, 99.9), RenderCustomMultiChildLayoutBox#6b4eb@Offset(606.1, 99.9), _RenderInkFeatures#55969@Offset(606.1, 99.9), RenderPhysicalModel#7ef39@Offset(606.1, 99.9), RenderSemanticsAnnotations#470ea@Offset(606.1, 99.9), RenderRepaintBoundary#3eb6c@Offset(606.1, 99.9), RenderIgnorePointer#e7b87@Offset(606.1, 99.9), _RenderSnapshotWidget#a8d8b@Offset(606.1, 99.9), _RenderSnapshotWidget#b61d0@Offset(606.1, 99.9), _RenderSnapshotWidget#5ba35@Offset(606.1, 99.9), _RenderSnapshotWidget#2ed49@Offset(606.1, 99.9), RenderRepaintBoundary#8bd8c@Offset(606.1, 99.9), RenderSemanticsAnnotations#ff25a@Offset(606.1, 99.9), RenderOffstage#a207b@Offset(606.1, 99.9), RenderSemanticsAnnotations#3ef85@Offset(606.1, 99.9), _RenderTheater#a23b6@Offset(606.1, 99.9), RenderAbsorbPointer#e4fbf@Offset(606.1, 99.9), RenderPointerListener#fe315@Offset(606.1, 99.9), RenderSemanticsAnnotations#e3aad@Offset(606.1, 99.9), RenderCustomPaint#3a4ce@Offset(606.1, 99.9), RenderSemanticsAnnotations#e616c@Offset(606.1, 99.9), RenderSemanticsAnnotations#b11ca@Offset(606.1, 99.9), RenderTapRegionSurface#c1cd6@Offset(606.1, 99.9), RenderSemanticsAnnotations#a3380@Offset(606.1, 99.9), RenderSemanticsAnnotations#4830a@Offset(606.1, 99.9), RenderSemanticsAnnotations#c5bf8@Offset(606.1, 99.9), HitTestEntry<HitTestTarget>#c6fe4(_ReusableRenderView#2f39e), HitTestEntry<HitTestTarget>#6e8de(<AutomatedTestWidgetsFlutterBinding>))
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:2077:25)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1861:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:1041:7)
#3      main.<anonymous closure>.<anonymous closure> (file:///mnt/d/dev/Ojyx/test/features/game/presentation/widgets/deck_and_discard_widget_test.dart:139:20)
<asynchronous suspension>
#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
#6      StackZoneSpecification._registerCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:114:42)
<asynchronous suspension>
To silence this warning, pass "warnIfMissed: false" to "tap()".
To make this warning fatal, set WidgetController.hitTestWarningShouldBeFatal to true.

00:33 +317 -15: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should show correct revealed card counts                         00:33 +318 -15: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should show correct revealed card counts                         00:33 +318 -15: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should show correct revealed card counts                         
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#46c89 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#ebaa5 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#4a06b relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 117 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#f83fb OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(3.0, 3.0) (can use size)
  constraints: BoxConstraints(w=194.0, h=214.0)
  size: Size(194.0, 214.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#e5a1a OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#fb815 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#fd9eb OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:33 +319 -15: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should show correct revealed card counts                         00:33 +320 -15: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should show correct revealed card counts                         00:33 +321 -15: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should show correct revealed card counts                         00:33 +321 -15: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should show correct revealed card counts                         
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: at least one matching candidate
  Actual: _TextWidgetFinder:<Found 0 widgets with text "2": []>
   Which: means none were found but some were expected

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart:213:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart line 213
The test description was:
  should show correct revealed card counts
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (8) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:33 +321 -16: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should show correct revealed card counts [E]                     
  Test failed. See exception logs above.
  The test description was: should show correct revealed card counts
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart -p vm --plain-name 'Spectator View Integration Test should show correct revealed card counts'
00:33 +322 -16: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should handle different screen sizes                             00:33 +323 -16: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should handle different screen sizes                             00:33 +324 -16: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should handle different screen sizes                             00:33 +324 -16: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should handle different screen sizes                             
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#62c57 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=956.0, 0.0<=h<=Infinity)
  size: Size(956.0, 334.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#2deb9 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=956.0, 0.0<=h<=Infinity)
  size: Size(956.0, 334.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#d1054 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=956.0, 0.0<=h<=Infinity)
  size: Size(956.0, 334.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 117 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#973ac OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(3.0, 3.0) (can use size)
  constraints: BoxConstraints(w=194.0, h=214.0)
  size: Size(194.0, 214.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#63afb OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#48907 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#7005b OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (7) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:33 +324 -17: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should handle different screen sizes [E]                         
  Test failed. See exception logs above.
  The test description was: should handle different screen sizes
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart -p vm --plain-name 'Spectator View Integration Test should handle different screen sizes'
00:33 +324 -17: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/discard_pile_widget_test.dart: DiscardPileWidget should handle tap when callback provided                                      00:33 +325 -17: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should display player avatars with initials                      00:33 +326 -17: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should display player avatars with initials                      00:33 +327 -17: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should display player avatars with initials                      00:33 +328 -17: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should display player avatars with initials                      00:33 +328 -17: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should display player avatars with initials                      
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#41dd6 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#b090a relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#aee62 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 117 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#cc050 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(3.0, 3.0) (can use size)
  constraints: BoxConstraints(w=194.0, h=214.0)
  size: Size(194.0, 214.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#3cc59 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#7d911 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#46bc4 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (7) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:33 +328 -18: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should display player avatars with initials [E]                  
  Test failed. See exception logs above.
  The test description was: should display player avatars with initials
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart -p vm --plain-name 'Spectator View Integration Test should display player avatars with initials'
00:33 +329 -18: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/draw_pile_widget_test.dart: DrawPileWidget should display draw pile with card count                                            00:33 +330 -18: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/draw_pile_widget_test.dart: DrawPileWidget should display draw pile with card count                                            00:33 +331 -18: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/draw_pile_widget_test.dart: DrawPileWidget should display draw pile with card count                                            00:34 +332 -18: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/draw_pile_widget_test.dart: DrawPileWidget should display draw pile with card count                                            00:34 +333 -18: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/draw_pile_widget_test.dart: DrawPileWidget should display draw pile with card count                                            00:34 +333 -18: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should show identical columns if any                             
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#829a3 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#5da0b relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#214f7 relayoutBoundary=up20 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← Column ← Padding ← _SingleChildViewport ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=732.0, 0.0<=h<=Infinity)
  size: Size(732.0, 254.3)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#31b09 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: at least one matching candidate
  Actual: _TextWidgetFinder:<Found 0 widgets with text "1": []>
   Which: means none were found but some were expected

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart:279:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart line 279
The test description was:
  should show identical columns if any
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (5) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:34 +333 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart: Spectator View Integration Test should show identical columns if any [E]                         
  Test failed. See exception logs above.
  The test description was: should show identical columns if any
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/spectator_view_integration_test.dart -p vm --plain-name 'Spectator View Integration Test should show identical columns if any'
00:34 +334 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/draw_pile_widget_test.dart: DrawPileWidget should display draw pile with card count                                            00:34 +334 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/draw_pile_widget_test.dart: DrawPileWidget should show empty state when no cards                                               00:34 +335 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/draw_pile_widget_test.dart: DrawPileWidget should show empty state when no cards                                               00:34 +335 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/draw_pile_widget_test.dart: DrawPileWidget should handle tap when onTap is provided and is player turn                         00:34 +336 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should display all opponents                                              00:34 +337 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should display all opponents                                              00:34 +338 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should display all opponents                                              00:34 +339 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should display all opponents                                              00:34 +340 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should display all opponents                                              00:34 +341 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should display all opponents                                              00:34 +342 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should display all opponents                                              00:34 +343 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should display all opponents                                              00:34 +344 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should display all opponents                                              00:34 +345 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should display all opponents                                              00:34 +345 -19: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should display all opponents                                              
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#a64f6 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#ccb7b relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#f1ec4 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:35 +345 -20: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should display all opponents [E]                                          
  Test failed. See exception logs above.
  The test description was: should display all opponents
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart -p vm --plain-name 'OpponentsViewWidget should display all opponents'
00:35 +345 -20: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should not display current player                                         
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#788c5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#28b9c relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#53e22 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:35 +345 -21: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should not display current player [E]                                     
  Test failed. See exception logs above.
  The test description was: should not display current player
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart -p vm --plain-name 'OpponentsViewWidget should not display current player'
00:35 +346 -21: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display player information                                           00:35 +346 -21: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should scroll horizontally                                                
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#05b59 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#5b411 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#eeeb9 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:35 +346 -22: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should scroll horizontally [E]                                            
  Test failed. See exception logs above.
  The test description was: should scroll horizontally
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart -p vm --plain-name 'OpponentsViewWidget should scroll horizontally'
00:35 +346 -22: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should highlight current turn player                                      
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 117 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#71f20 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(3.0, 3.0) (can use size)
  constraints: BoxConstraints(w=194.0, h=214.0)
  size: Size(194.0, 214.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#4e5d6 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#44e30 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:35 +346 -23: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should highlight current turn player [E]                                  
  Test failed. See exception logs above.
  The test description was: should highlight current turn player
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart -p vm --plain-name 'OpponentsViewWidget should highlight current turn player'
00:35 +346 -23: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should handle player tap when callback provided                           
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#62947 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#9c47c relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#f1960 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:35 +346 -24: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should handle player tap when callback provided [E]                       
  Test failed. See exception logs above.
  The test description was: should handle player tap when callback provided
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart -p vm --plain-name 'OpponentsViewWidget should handle player tap when callback provided'
00:35 +346 -24: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should convert player to PlayerState correctly                            
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#33029 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#9ffd1 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#40fae OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: <1>
  Actual: <0>

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart:215:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart line 215
The test description was:
  should convert player to PlayerState correctly
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (4) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:35 +346 -25: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should convert player to PlayerState correctly [E]                        
  Test failed. See exception logs above.
  The test description was: should convert player to PlayerState correctly
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart -p vm --plain-name 'OpponentsViewWidget should convert player to PlayerState correctly'
00:35 +346 -25: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display player information                                           00:35 +346 -25: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should have correct spacing between opponents                             
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#3acd5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#0e982 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#2d634 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:35 +346 -26: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should have correct spacing between opponents [E]                         
  Test failed. See exception logs above.
  The test description was: should have correct spacing between opponents
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart -p vm --plain-name 'OpponentsViewWidget should have correct spacing between opponents'
00:35 +346 -26: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should have fixed height container                                        
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#8bbeb OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#3d3ce relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#b5a0f OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:35 +346 -27: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should have fixed height container [E]                                    
  Test failed. See exception logs above.
  The test description was: should have fixed height container
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart -p vm --plain-name 'OpponentsViewWidget should have fixed height container'
00:35 +346 -27: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display player information                                           
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 101 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#eae68 relayoutBoundary=up5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ←
    KeyedSubtree-[GlobalKey#83929] ← _BodyBuilder ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=600.0)
  size: Size(800.0, 600.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TextWidgetFinder:<Found 2 widgets with text "4": [
            Text("4", debugLabel: ((englishLike bodySmall 2021).merge((blackMountainView
bodySmall).apply)).copyWith, inherit: false, color: Color(alpha: 1.0000, red: 0.1059, green: 0.3686,
blue: 0.1255, colorSpace: ColorSpace.sRGB), family: Roboto, size: 10.0, weight: 700, letterSpacing:
0.4, baseline: alphabetic, height: 1.3x, leadingDistribution: even, decoration: Color(alpha: 1.0000,
red: 0.1137, green: 0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB) TextDecoration.none,
dependencies: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery]),
            Text("4", debugLabel: ((englishLike bodyMedium 2021).merge((blackMountainView
bodyMedium).apply)).copyWith, inherit: false, color: Color(alpha: 1.0000, red: 0.1137, green:
0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB), family: Roboto, size: 14.0, weight: 700,
letterSpacing: 0.3, baseline: alphabetic, height: 1.4x, leadingDistribution: even, decoration:
Color(alpha: 1.0000, red: 0.1137, green: 0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB)
TextDecoration.none, dependencies: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery]),
          ]>
   Which: is too many

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart:49:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart line 49
The test description was:
  should display player information
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (2) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:35 +346 -28: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display player information [E]                                       
  Test failed. See exception logs above.
  The test description was: should display player information
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart -p vm --plain-name 'OpponentGridWidget should display player information'
00:36 +346 -28: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should set fixed width for each opponent                                  
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#91c8b OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 2.4 pixels on the right.

The relevant error-causing widget was:
  Row
  Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:169:22

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#ce5c9 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← DecoratedBox ← Container ← Column ← Padding ← DecoratedBox ← Container ←
    AnimatedContainer ← Listener ← _GestureSemantics ← RawGestureDetector ← ⋯
  parentData: offset=Offset(8.0, 8.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=184.0, 0.0<=h<=Infinity)
  size: Size(184.0, 33.0)
  direction: horizontal
  mainAxisAlignment: spaceAround
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 31 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#04e73 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← SizedBox ← Padding
    ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=200.0, h=220.0)
  size: Size(200.0, 220.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -29: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsViewWidget should set fixed width for each opponent [E]                              
  Test failed. See exception logs above.
  The test description was: should set fixed width for each opponent
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart -p vm --plain-name 'OpponentsViewWidget should set fixed width for each opponent'
00:36 +346 -29: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsGridViewWidget should display opponents in grid layout                               
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 292 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponents_view_widget.dart:145:12

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#0c286 relayoutBoundary=up1 OVERFLOWING:
  needs compositing
  creator: Column ← OpponentsGridViewWidget ← KeyedSubtree-[GlobalKey#6b436] ← _BodyBuilder ←
    MediaQuery ← LayoutId-[<_ScaffoldSlot.body>] ← CustomMultiChildLayout ← _ActionsScope ← Actions ←
    AnimatedBuilder ← DefaultTextStyle ← AnimatedDefaultTextStyle ← ⋯
  parentData: offset=Offset(0.0, 0.0); id=_ScaffoldSlot.body (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=600.0)
  size: Size(800.0, 600.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: max
  crossAxisAlignment: start
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -30: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsGridViewWidget should display opponents in grid layout [E]                           
  Test failed. See exception logs above.
  The test description was: should display opponents in grid layout
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart -p vm --plain-name 'OpponentsGridViewWidget should display opponents in grid layout'
00:36 +346 -30: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should show current player indicator when isCurrentPlayer is true           
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 107 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#ed289 relayoutBoundary=up5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ←
    KeyedSubtree-[GlobalKey#eda58] ← _BodyBuilder ← ⋯
  parentData: offset=Offset(3.0, 3.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=794.0, 0.0<=h<=594.0)
  size: Size(794.0, 594.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following StateError was thrown running a test:
Bad state: Too many elements

When the exception was thrown, this was the stack:
#0      Iterable.single (dart:core/iterable.dart:696:24)
#1      WidgetController.widget (package:flutter_test/src/controller.dart:804:30)
#2      main.<anonymous closure>.<anonymous closure> (file:///mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart:72:34)
<asynchronous suspension>
#3      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#4      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

The test description was:
  should show current player indicator when isCurrentPlayer is true
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (2) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -31: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should show current player indicator when isCurrentPlayer is true [E]       
  Test failed. See exception logs above.
  The test description was: should show current player indicator when isCurrentPlayer is true
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart -p vm --plain-name 'OpponentGridWidget should show current player indicator when isCurrentPlayer is true'
00:36 +346 -31: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsGridViewWidget should use correct cross axis count                                   
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 11 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#42178 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← RepaintBoundary ←
    IndexedSemantics ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=248.0, h=275.6)
  size: Size(248.0, 275.6)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 11 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#60063 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← RepaintBoundary ←
    IndexedSemantics ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=248.0, h=275.6)
  size: Size(248.0, 275.6)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 11 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#b83e8 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← RepaintBoundary ←
    IndexedSemantics ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=248.0, h=275.6)
  size: Size(248.0, 275.6)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 11 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#e8610 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ← RepaintBoundary ←
    IndexedSemantics ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(w=248.0, h=275.6)
  size: Size(248.0, 275.6)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 3.1 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponents_view_widget.dart:145:12

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#20c27 relayoutBoundary=up1 OVERFLOWING:
  needs compositing
  creator: Column ← OpponentsGridViewWidget ← KeyedSubtree-[GlobalKey#5cdb4] ← _BodyBuilder ←
    MediaQuery ← LayoutId-[<_ScaffoldSlot.body>] ← CustomMultiChildLayout ← _ActionsScope ← Actions ←
    AnimatedBuilder ← DefaultTextStyle ← AnimatedDefaultTextStyle ← ⋯
  parentData: offset=Offset(0.0, 0.0); id=_ScaffoldSlot.body (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=600.0)
  size: Size(800.0, 600.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: max
  crossAxisAlignment: start
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (5) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -32: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsGridViewWidget should use correct cross axis count [E]                               
  Test failed. See exception logs above.
  The test description was: should use correct cross axis count
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart -p vm --plain-name 'OpponentsGridViewWidget should use correct cross axis count'
00:36 +346 -32: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display mini grid with 12 cards                                      
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 101 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#cd33e relayoutBoundary=up5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ←
    KeyedSubtree-[GlobalKey#9c06d] ← _BodyBuilder ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=600.0)
  size: Size(800.0, 600.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -33: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display mini grid with 12 cards [E]                                  
  Test failed. See exception logs above.
  The test description was: should display mini grid with 12 cards
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart -p vm --plain-name 'OpponentGridWidget should display mini grid with 12 cards'
00:36 +346 -33: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsGridViewWidget should not scroll                                                     
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 292 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponents_view_widget.dart:145:12

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#baa72 relayoutBoundary=up1 OVERFLOWING:
  needs compositing
  creator: Column ← OpponentsGridViewWidget ← KeyedSubtree-[GlobalKey#1fcdb] ← _BodyBuilder ←
    MediaQuery ← LayoutId-[<_ScaffoldSlot.body>] ← CustomMultiChildLayout ← _ActionsScope ← Actions ←
    AnimatedBuilder ← DefaultTextStyle ← AnimatedDefaultTextStyle ← ⋯
  parentData: offset=Offset(0.0, 0.0); id=_ScaffoldSlot.body (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=600.0)
  size: Size(800.0, 600.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: max
  crossAxisAlignment: start
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -34: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart: OpponentsGridViewWidget should not scroll [E]                                                 
  Test failed. See exception logs above.
  The test description was: should not scroll
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponents_view_widget_test.dart -p vm --plain-name 'OpponentsGridViewWidget should not scroll'
00:36 +346 -34: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display revealed cards with values                                   
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 101 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#e723a relayoutBoundary=up5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ←
    KeyedSubtree-[GlobalKey#ba32a] ← _BodyBuilder ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=600.0)
  size: Size(800.0, 600.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TextWidgetFinder:<Found 2 widgets with text "1": [
            Text("1", debugLabel: ((englishLike bodySmall 2021).merge((blackMountainView
bodySmall).apply)).copyWith, inherit: false, color: Color(alpha: 1.0000, red: 0.1059, green: 0.3686,
blue: 0.1255, colorSpace: ColorSpace.sRGB), family: Roboto, size: 10.0, weight: 700, letterSpacing:
0.4, baseline: alphabetic, height: 1.3x, leadingDistribution: even, decoration: Color(alpha: 1.0000,
red: 0.1137, green: 0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB) TextDecoration.none,
dependencies: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery]),
            Text("1", debugLabel: ((englishLike bodyMedium 2021).merge((blackMountainView
bodyMedium).apply)).copyWith, inherit: false, color: Color(alpha: 1.0000, red: 0.1137, green:
0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB), family: Roboto, size: 14.0, weight: 700,
letterSpacing: 0.3, baseline: alphabetic, height: 1.4x, leadingDistribution: even, decoration:
Color(alpha: 1.0000, red: 0.1137, green: 0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB)
TextDecoration.none, dependencies: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery]),
          ]>
   Which: is too many

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart:115:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart line 115
The test description was:
  should display revealed cards with values
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (2) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -35: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display revealed cards with values [E]                               
  Test failed. See exception logs above.
  The test description was: should display revealed cards with values
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart -p vm --plain-name 'OpponentGridWidget should display revealed cards with values'
00:36 +346 -35: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should display 3x4 grid of cards                                                
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 10.0 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#5a669 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#eb997] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=366.0, 0.0<=h<=Infinity)
  size: Size(366.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 10.0 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#b554a relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#eb997] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=366.0, 0.0<=h<=Infinity)
  size: Size(366.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 10.0 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#7eb27 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#eb997] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=366.0, 0.0<=h<=Infinity)
  size: Size(366.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -36: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should display 3x4 grid of cards [E]                                            
  Test failed. See exception logs above.
  The test description was: should display 3x4 grid of cards
  
00:36 +346 -36: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should handle tap when onTap is provided                                    
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 101 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#1b6b5 relayoutBoundary=up5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ←
    KeyedSubtree-[GlobalKey#8e9e3] ← _BodyBuilder ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=600.0)
  size: Size(800.0, 600.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -37: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should handle tap when onTap is provided [E]                                
  Test failed. See exception logs above.
  The test description was: should handle tap when onTap is provided
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart -p vm --plain-name 'OpponentGridWidget should handle tap when onTap is provided'
00:36 +346 -37: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display finish flag when player has finished                         
To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart -p vm --plain-name 'PlayerGridWidget should display 3x4 grid of cards'
00:36 +346 -37: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display finish flag when player has finished                         
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 101 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#c25ee relayoutBoundary=up5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ←
    KeyedSubtree-[GlobalKey#eb63a] ← _BodyBuilder ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=600.0)
  size: Size(800.0, 600.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -38: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display finish flag when player has finished [E]                     
  Test failed. See exception logs above.
  The test description was: should display finish flag when player has finished
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart -p vm --plain-name 'OpponentGridWidget should display finish flag when player has finished'
00:36 +346 -38: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display player avatar with initials                                  
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 101 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#2af1e relayoutBoundary=up5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ←
    KeyedSubtree-[GlobalKey#4a87a] ← _BodyBuilder ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=600.0)
  size: Size(800.0, 600.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -39: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display player avatar with initials [E]                              
  Test failed. See exception logs above.
  The test description was: should display player avatar with initials
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart -p vm --plain-name 'OpponentGridWidget should display player avatar with initials'
00:36 +346 -39: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should display "Votre grille" when isCurrentPlayer is true                      
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#89616 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#8fc3a] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#1e1f0 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#8fc3a] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#57d98 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#8fc3a] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -40: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should display "Votre grille" when isCurrentPlayer is true [E]                  
  Test failed. See exception logs above.
  The test description was: should display "Votre grille" when isCurrentPlayer is true
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart -p vm --plain-name 'PlayerGridWidget should display "Votre grille" when isCurrentPlayer is true'
00:36 +346 -40: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display statistics correctly                                         
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 101 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#694bb relayoutBoundary=up5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ←
    KeyedSubtree-[GlobalKey#7c67d] ← _BodyBuilder ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=600.0)
  size: Size(800.0, 600.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -41: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should display statistics correctly [E]                                     
  Test failed. See exception logs above.
  The test description was: should display statistics correctly
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart -p vm --plain-name 'OpponentGridWidget should display statistics correctly'
00:36 +346 -41: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should not display "Votre grille" when isCurrentPlayer is false                 
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 10.0 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#fb43d relayoutBoundary=up7 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← KeyedSubtree-[GlobalKey#3f466] ← _BodyBuilder ← MediaQuery ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=766.0, 0.0<=h<=Infinity)
  size: Size(766.0, 265.7)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 10.0 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#5b7e1 relayoutBoundary=up7 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← KeyedSubtree-[GlobalKey#3f466] ← _BodyBuilder ← MediaQuery ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=766.0, 0.0<=h<=Infinity)
  size: Size(766.0, 265.7)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 10.0 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#ed695 relayoutBoundary=up7 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← KeyedSubtree-[GlobalKey#3f466] ← _BodyBuilder ← MediaQuery ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=766.0, 0.0<=h<=Infinity)
  size: Size(766.0, 265.7)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 255 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:49:18

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#ae0bf relayoutBoundary=up4 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ← PlayerGridWidget ←
    KeyedSubtree-[GlobalKey#3f466] ← _BodyBuilder ← MediaQuery ← LayoutId-[<_ScaffoldSlot.body>] ←
    CustomMultiChildLayout ← _ActionsScope ← ⋯
  parentData: offset=Offset(17.0, 17.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=766.0, 0.0<=h<=566.0)
  size: Size(766.0, 566.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -41: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should handle empty cards in grid                                           
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 101 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#a2511 relayoutBoundary=up5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ←
    KeyedSubtree-[GlobalKey#55e0a] ← _BodyBuilder ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=600.0)
  size: Size(800.0, 600.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -42: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should handle empty cards in grid [E]                                       
  Test failed. See exception logs above.
  The test description was: should handle empty cards in grid
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart -p vm --plain-name 'OpponentGridWidget should handle empty cards in grid'
00:36 +346 -42: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should not display "Votre grille" when isCurrentPlayer is false                 
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (4) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -43: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should not display "Votre grille" when isCurrentPlayer is false [E]             
  Test failed. See exception logs above.
  The test description was: should not display "Votre grille" when isCurrentPlayer is false
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart -p vm --plain-name 'PlayerGridWidget should not display "Votre grille" when isCurrentPlayer is false'
00:36 +346 -43: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should display grid stats when isCurrentPlayer is true                          
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#01b7a relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#f78de] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#e089d relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#f78de] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#a104d relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#f78de] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -43: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should apply correct color for different card colors                        
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 101 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#b3805 relayoutBoundary=up5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ←
    KeyedSubtree-[GlobalKey#eedf4] ← _BodyBuilder ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=600.0)
  size: Size(800.0, 600.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TextWidgetFinder:<Found 2 widgets with text "4": [
            Text("4", debugLabel: ((englishLike bodySmall 2021).merge((blackMountainView
bodySmall).apply)).copyWith, inherit: false, color: Color(alpha: 1.0000, red: 0.1059, green: 0.3686,
blue: 0.1255, colorSpace: ColorSpace.sRGB), family: Roboto, size: 10.0, weight: 700, letterSpacing:
0.4, baseline: alphabetic, height: 1.3x, leadingDistribution: even, decoration: Color(alpha: 1.0000,
red: 0.1137, green: 0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB) TextDecoration.none,
dependencies: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery]),
            Text("4", debugLabel: ((englishLike bodyMedium 2021).merge((blackMountainView
bodyMedium).apply)).copyWith, inherit: false, color: Color(alpha: 1.0000, red: 0.1137, green:
0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB), family: Roboto, size: 14.0, weight: 700,
letterSpacing: 0.3, baseline: alphabetic, height: 1.4x, leadingDistribution: even, decoration:
Color(alpha: 1.0000, red: 0.1137, green: 0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB)
TextDecoration.none, dependencies: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery]),
          ]>
   Which: is too many

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart:251:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart line 251
The test description was:
  should apply correct color for different card colors
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (2) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -44: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should apply correct color for different card colors [E]                    
  Test failed. See exception logs above.
  The test description was: should apply correct color for different card colors
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart -p vm --plain-name 'OpponentGridWidget should apply correct color for different card colors'
00:36 +346 -44: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should display grid stats when isCurrentPlayer is true                          
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -45: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should display grid stats when isCurrentPlayer is true [E]                      
  Test failed. See exception logs above.
  The test description was: should display grid stats when isCurrentPlayer is true
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart -p vm --plain-name 'PlayerGridWidget should display grid stats when isCurrentPlayer is true'
00:36 +346 -45: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should handle card tap when canInteract is true                                 
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#5baa9 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#10962] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#a566f relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#10962] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#be8ca relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#10962] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +346 -46: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should handle card tap when canInteract is true [E]                             
  Test failed. See exception logs above.
  The test description was: should handle card tap when canInteract is true
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart -p vm --plain-name 'PlayerGridWidget should handle card tap when canInteract is true'
00:37 +346 -46: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should animate container when properties change                             
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 101 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/opponent_grid_widget.dart:42:16

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#3c57d relayoutBoundary=up5 OVERFLOWING:
  creator: Column ← Padding ← DecoratedBox ← Container ← AnimatedContainer ← Listener ←
    _GestureSemantics ← RawGestureDetector ← GestureDetector ← OpponentGridWidget ←
    KeyedSubtree-[GlobalKey#3573d] ← _BodyBuilder ← ⋯
  parentData: offset=Offset(0.0, 0.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=800.0, 0.0<=h<=600.0)
  size: Size(800.0, 600.0)
  direction: vertical
  mainAxisAlignment: start
  mainAxisSize: min
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TypeWidgetFinder:<Found 2 widgets with type "AnimatedContainer": [
            AnimatedContainer(duration: 300ms, bg:
              BoxDecoration(color: Color(alpha: 1.0000, red: 0.9020, green: 0.8784, blue: 0.9137,
colorSpace: ColorSpace.sRGB), border: Border.all(BorderSide(color: Color(alpha: 1.0000, red: 0.4039,
green: 0.3137, blue: 0.6431, colorSpace: ColorSpace.sRGB), width: 3.0)), borderRadius:
BorderRadius.circular(12.0),
                boxShadow: [BoxShadow(Color(alpha: 0.1000, red: 0.0000, green:
                  0.0000, blue: 0.0000, colorSpace: ColorSpace.sRGB), Offset(0.0,
                  2.0), 4.0, 0.0, BlurStyle.normal)]
                )
            , clipBehavior: Clip.none, state:
              _AnimatedContainerState#0397b(ticker active, bg:
                  DecorationTween(BoxDecoration(color: Color(alpha: 1.0000, red: 0.9020, green:
0.8784, blue: 0.9137, colorSpace: ColorSpace.sRGB), borderRadius: BorderRadius.circular(12.0),
                    boxShadow: [BoxShadow(Color(alpha: 0.1000, red: 0.0000, green:
                      0.0000, blue: 0.0000, colorSpace: ColorSpace.sRGB), Offset(0.0,
                      2.0), 4.0, 0.0, BlurStyle.normal)]
                    ) → BoxDecoration(color: Color(alpha: 1.0000, red: 0.9020, green: 0.8784, blue:
0.9137, colorSpace: ColorSpace.sRGB), border: Border.all(BorderSide(color: Color(alpha: 1.0000, red:
0.4039, green: 0.3137, blue: 0.6431, colorSpace: ColorSpace.sRGB), width: 3.0)), borderRadius:
BorderRadius.circular(12.0),
                    boxShadow: [BoxShadow(Color(alpha: 0.1000, red: 0.0000, green:
                      0.0000, blue: 0.0000, colorSpace: ColorSpace.sRGB), Offset(0.0,
                      2.0), 4.0, 0.0, BlurStyle.normal)]
                    ))
                )
            ),
            AnimatedContainer(duration: 200ms, bg: BoxDecoration(color: Color(alpha: 1.0000, red:
0.4039, green: 0.3137, blue: 0.6431, colorSpace: ColorSpace.sRGB), shape: circle),
BoxConstraints(w=32.0, h=32.0), clipBehavior: Clip.none, state: _AnimatedContainerState#f6190(ticker
active, bg: DecorationTween(BoxDecoration(color: Color(alpha: 1.0000, red: 0.3843, green: 0.3569,
blue: 0.4431, colorSpace: ColorSpace.sRGB), shape: circle) → BoxDecoration(color: Color(alpha:
1.0000, red: 0.4039, green: 0.3137, blue: 0.6431, colorSpace: ColorSpace.sRGB), shape: circle)),
BoxConstraintsTween(BoxConstraints(w=32.0, h=32.0) → BoxConstraints(w=32.0, h=32.0)))),
          ]>
   Which: is too many

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart:282:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart line 282
The test description was:
  should animate container when properties change
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (2) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:37 +346 -47: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart: OpponentGridWidget should animate container when properties change [E]                         
  Test failed. See exception logs above.
  The test description was: should animate container when properties change
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/opponent_grid_widget_test.dart -p vm --plain-name 'OpponentGridWidget should animate container when properties change'
00:37 +346 -47: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should not handle tap when canInteract is false                                 
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#fd370 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#062b8] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#aeb3c relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#062b8] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#802c2 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#062b8] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:37 +346 -48: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should not handle tap when canInteract is false [E]                             
  Test failed. See exception logs above.
  The test description was: should not handle tap when canInteract is false
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart -p vm --plain-name 'PlayerGridWidget should not handle tap when canInteract is false'
00:37 +346 -48: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should highlight specified positions                                            
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#5e813 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#70a77] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#5fdf7 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#70a77] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#85427 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#70a77] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:37 +346 -49: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should highlight specified positions [E]                                        
  Test failed. See exception logs above.
  The test description was: should highlight specified positions
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart -p vm --plain-name 'PlayerGridWidget should highlight specified positions'
00:37 +346 -49: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should show selected positions                                                  
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#15b13 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#31edb] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#6a0ae relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#31edb] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#a5fa3 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#31edb] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:37 +346 -50: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should show selected positions [E]                                              
  Test failed. See exception logs above.
  The test description was: should show selected positions
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart -p vm --plain-name 'PlayerGridWidget should show selected positions'
00:37 +346 -50: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should show identical columns indicator                                         
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#070b3 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#c269b] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#ec555 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#c269b] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#e8aae relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#c269b] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:37 +346 -51: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should show identical columns indicator [E]                                     
  Test failed. See exception logs above.
  The test description was: should show identical columns indicator
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart -p vm --plain-name 'PlayerGridWidget should show identical columns indicator'
00:37 +346 -51: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should apply correct styling for current player                                 
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#5ed52 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#6ea33] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#dcaf9 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#6ea33] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#ebab9 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#6ea33] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:37 +346 -52: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should apply correct styling for current player [E]                             
  Test failed. See exception logs above.
  The test description was: should apply correct styling for current player
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart -p vm --plain-name 'PlayerGridWidget should apply correct styling for current player'
00:37 +347 -52: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should show placeholders when canInteract is true                               00:37 +347 -52: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should show placeholders when canInteract is true                               
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#f0aae relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#6a92f] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#6bc92 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#6a92f] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#eaec9 relayoutBoundary=up3 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← Center ← KeyedSubtree-[GlobalKey#6a92f] ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:37 +347 -53: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should show placeholders when canInteract is true [E]                           
  Test failed. See exception logs above.
  The test description was: should show placeholders when canInteract is true
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart -p vm --plain-name 'PlayerGridWidget should show placeholders when canInteract is true'
00:37 +348 -53: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_hand_widget_test.dart: PlayerHandWidget should show nothing when no drawn card                                          00:37 +348 -53: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should calculate correct layout based on constraints                            00:37 +348 -53: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should calculate correct layout based on constraints                            
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#43f29 relayoutBoundary=up8 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← KeyedSubtree-[GlobalKey#cc991] ← _BodyBuilder ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#09457 relayoutBoundary=up8 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← KeyedSubtree-[GlobalKey#cc991] ← _BodyBuilder ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 12 pixels on the right.

The relevant error-causing widget was:
  Row Row:file:///mnt/d/dev/Ojyx/lib/features/game/presentation/widgets/player_grid_widget.dart:80:28

The overflowing RenderFlex has an orientation of Axis.horizontal.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#771fc relayoutBoundary=up8 OVERFLOWING:
  creator: Row ← Padding ← Column ← Column ← Padding ← DecoratedBox ← Container ← LayoutBuilder ←
    PlayerGridWidget ← SizedBox ← KeyedSubtree-[GlobalKey#cc991] ← _BodyBuilder ← ⋯
  parentData: offset=Offset(0.0, 4.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=364.0, 0.0<=h<=Infinity)
  size: Size(364.0, 122.9)
  direction: horizontal
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  textDirection: ltr
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (3) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:37 +348 -54: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart: PlayerGridWidget should calculate correct layout based on constraints [E]                        
  Test failed. See exception logs above.
  The test description was: should calculate correct layout based on constraints
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_grid_widget_test.dart -p vm --plain-name 'PlayerGridWidget should calculate correct layout based on constraints'
00:37 +349 -54: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_hand_widget_test.dart: PlayerHandWidget should show card when current player has drawn card                             00:37 +350 -54: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_hand_widget_test.dart: PlayerHandWidget should show card when current player has drawn card                             00:37 +350 -54: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_hand_widget_test.dart: PlayerHandWidget should show discard button when canDiscard is true                              00:37 +351 -54: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should display current player turn                                                  00:37 +352 -54: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should display current player turn                                                  00:37 +353 -54: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should display current player turn                                                  00:37 +353 -54: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_hand_widget_test.dart: PlayerHandWidget should apply proper styling                                                     
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following StateError was thrown running a test:
Bad state: No element

When the exception was thrown, this was the stack:
#0      Iterable.single (dart:core/iterable.dart:694:25)
#1      WidgetController.widget (package:flutter_test/src/controller.dart:804:30)
#2      main.<anonymous closure>.<anonymous closure> (file:///mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_hand_widget_test.dart:183:33)
<asynchronous suspension>
#3      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:193:15)
<asynchronous suspension>
#4      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1064:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

The test description was:
  should apply proper styling
════════════════════════════════════════════════════════════════════════════════════════════════════
00:37 +353 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_hand_widget_test.dart: PlayerHandWidget should apply proper styling [E]                                                 
  Test failed. See exception logs above.
  The test description was: should apply proper styling
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/player_hand_widget_test.dart -p vm --plain-name 'PlayerHandWidget should apply proper styling'
00:37 +354 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should display current player turn                                                  00:37 +355 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should display current player turn                                                  00:37 +356 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should display current player turn                                                  00:38 +356 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should display current player turn                                                  00:38 +357 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should display current player turn                                                  00:38 +357 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should display opponent turn                                                        00:38 +358 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/widgets_test.dart: widgets.dart barrel exports should export all widgets                                                       00:38 +359 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should show last round indicator when lastRound is true                             00:38 +360 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should show last round indicator when lastRound is true                             00:38 +361 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should show last round indicator when lastRound is true                             00:38 +361 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should show draw phase status                                                       00:38 +362 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should show draw phase status                                                       00:38 +362 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should show playing status with drawn card                                          00:38 +363 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should show playing status with drawn card                                          00:38 +363 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should show finished status                                                         00:38 +364 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should show finished status                                                         00:38 +364 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should show counterclockwise direction                                              00:38 +365 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should show counterclockwise direction                                              00:38 +365 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should apply correct styling for current player turn                                00:38 +366 -55: /mnt/d/dev/Ojyx/test/features/game/presentation/widgets/turn_info_widget_test.dart: TurnInfoWidget should apply correct styling for current player turn                                00:38 +366 -55: loading /mnt/d/dev/Ojyx/test/features/home/presentation/navigation_integration_test.dart                                                                                               00:38 +366 -55: /mnt/d/dev/Ojyx/test/features/home/presentation/navigation_integration_test.dart: Navigation Integration Test should navigate from home to create room                                 00:39 +366 -55: /mnt/d/dev/Ojyx/test/features/home/presentation/navigation_integration_test.dart: Navigation Integration Test should navigate from home to create room                                 00:39 +367 -55: /mnt/d/dev/Ojyx/test/features/home/presentation/navigation_integration_test.dart: Navigation Integration Test should navigate from home to create room                                 00:39 +368 -55: /mnt/d/dev/Ojyx/test/features/home/presentation/navigation_integration_test.dart: Navigation Integration Test should navigate from home to create room                                 00:39 +368 -55: /mnt/d/dev/Ojyx/test/features/home/presentation/navigation_integration_test.dart: Navigation Integration Test should navigate from home to create room                                 
══╡ EXCEPTION CAUGHT BY RENDERING LIBRARY ╞═════════════════════════════════════════════════════════
The following assertion was thrown during layout:
A RenderFlex overflowed by 8.0 pixels on the bottom.

The relevant error-causing widget was:
  Column
  Column:file:///mnt/d/dev/Ojyx/lib/features/multiplayer/presentation/screens/create_room_screen.dart:62:22

The overflowing RenderFlex has an orientation of Axis.vertical.
The edge of the RenderFlex that is overflowing has been marked in the rendering with a yellow and
black striped pattern. This is usually caused by the contents being too big for the RenderFlex.
Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the
RenderFlex to fit within the available space instead of being sized to their natural size.
This is considered an error condition because it indicates that there is content that cannot be
seen. If the content is legitimately bigger than the available space, consider clipping it with a
ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex,
like a ListView.
The specific RenderFlex in question is: RenderFlex#e21db relayoutBoundary=up5 OVERFLOWING:
  creator: Column ← Padding ← ConstrainedBox ← Center ← MediaQuery ← Padding ← SafeArea ←
    KeyedSubtree-[GlobalKey#e9778] ← _BodyBuilder ← MediaQuery ← LayoutId-[<_ScaffoldSlot.body>] ←
    CustomMultiChildLayout ← ⋯
  parentData: offset=Offset(24.0, 24.0) (can use size)
  constraints: BoxConstraints(0.0<=w<=352.0, 0.0<=h<=496.0)
  size: Size(352.0, 496.0)
  direction: vertical
  mainAxisAlignment: center
  mainAxisSize: max
  crossAxisAlignment: center
  verticalDirection: down
  spacing: 0.0
◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤◢◤
════════════════════════════════════════════════════════════════════════════════════════════════════
00:39 +368 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/navigation_integration_test.dart: Navigation Integration Test should navigate from home to create room [E]                             
  Test failed. See exception logs above.
  The test description was: should navigate from home to create room
  

To run this test again: /home/hyminix/flutter/bin/cache/dart-sdk/bin/dart test /mnt/d/dev/Ojyx/test/features/home/presentation/navigation_integration_test.dart -p vm --plain-name 'Navigation Integration Test should navigate from home to create room'
00:39 +368 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/navigation_integration_test.dart: Navigation Integration Test should show all routes are configured                                    00:39 +369 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/navigation_integration_test.dart: Navigation Integration Test should show all routes are configured                                    00:40 +369 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/navigation_integration_test.dart: Navigation Integration Test should show all routes are configured                                    00:40 +369 -56: loading /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart                                                                                                  00:40 +369 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should display app title and logo                                                            00:40 +370 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should display app title and logo                                                            00:40 +371 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/datasources/supabase_room_datasource_impl_test.dart: createRoom should throw exception on database error                                00:40 +372 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should display loading indicator when auth is loading                                        00:40 +373 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should display loading indicator when auth is loading                                        00:40 +374 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should display loading indicator when auth is loading                                        00:40 +375 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should display loading indicator when auth is loading                                        00:40 +376 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should display loading indicator when auth is loading                                        00:40 +376 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should display user info when authenticated                                                  00:40 +377 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should display user info when authenticated                                                  00:40 +377 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should display action buttons when authenticated                                             00:40 +378 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should display action buttons when authenticated                                             00:40 +378 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should show loading when user is null                                                        00:40 +379 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should show loading when user is null                                                        00:40 +379 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should navigate to create room when button is tapped                                         00:41 +379 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should navigate to create room when button is tapped                                         00:41 +380 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should navigate to create room when button is tapped                                         00:41 +380 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should navigate to join room when button is tapped                                           00:41 +381 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should navigate to join room when button is tapped                                           00:41 +381 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should display error state with retry button                                                 00:41 +382 -56: /mnt/d/dev/Ojyx/test/features/home/presentation/screens/home_screen_test.dart: HomeScreen should display error state with retry button                                                 00:41 +382 -56: loading /mnt/d/dev/Ojyx/test/features/multiplayer/data/datasources/supabase_room_datasource_test.dart                                                                                  00:41 +382 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/datasources/supabase_room_datasource_test.dart: SupabaseRoomDatasource should be instantiated with SupabaseClient                       00:41 +383 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/datasources/supabase_room_datasource_test.dart: SupabaseRoomDatasource should be instantiated with SupabaseClient                       00:41 +383 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/datasources/supabase_room_datasource_test.dart: SupabaseRoomDatasource should have all required methods defined                         00:41 +384 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/datasources/supabase_room_datasource_test.dart: SupabaseRoomDatasource should have all required methods defined                         00:42 +384 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/datasources/supabase_room_datasource_test.dart: SupabaseRoomDatasource should have all required methods defined                         00:42 +384 -56: loading /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart                                                                                          00:42 +384 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart: RoomExtensions should convert Room entity to RoomModel with all fields                          00:42 +385 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart: RoomExtensions should convert Room entity to RoomModel with all fields                          00:42 +385 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart: RoomExtensions should handle null optional fields                                               00:42 +386 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart: RoomExtensions should handle null optional fields                                               00:42 +386 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart: RoomExtensions should convert all RoomStatus enum values correctly                              00:42 +387 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart: RoomExtensions should convert all RoomStatus enum values correctly                              00:42 +387 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart: RoomExtensions should handle room with maximum players                                          00:42 +388 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart: RoomExtensions should handle room with maximum players                                          00:42 +388 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart: RoomExtensions should handle room with single player                                            00:42 +389 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart: RoomExtensions should handle room with single player                                            00:42 +389 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart: RoomExtensions should preserve empty playerIds list                                             00:42 +390 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart: RoomExtensions should preserve empty playerIds list                                             00:42 +390 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart: RoomExtensions should correctly map finished game room                                          00:42 +391 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_extensions_test.dart: RoomExtensions should correctly map finished game room                                          00:42 +391 -56: loading /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart                                                                                                     00:42 +391 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomModel should create RoomModel with all required fields                                                 00:42 +392 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomModel should create RoomModel with all required fields                                                 00:42 +392 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomModel should create RoomModel with optional fields                                                     00:42 +393 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomModel should create RoomModel with optional fields                                                     00:42 +393 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomModel JSON serialization should serialize to JSON correctly                                            00:42 +394 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomModel JSON serialization should serialize to JSON correctly                                            00:42 +394 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomModel JSON serialization should deserialize from JSON correctly                                        00:42 +395 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomModel JSON serialization should deserialize from JSON correctly                                        00:42 +395 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomModel Domain conversion should convert to domain entity correctly                                      00:42 +396 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomModel Domain conversion should convert to domain entity correctly                                      00:42 +396 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomModel Domain conversion should parse all room statuses correctly                                       00:42 +397 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomModel Domain conversion should parse all room statuses correctly                                       00:42 +397 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomModel should support equality comparison                                                               00:42 +398 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomModel should support equality comparison                                                               00:42 +398 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomExtensions should convert Room entity to RoomModel correctly                                           00:42 +399 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomExtensions should convert Room entity to RoomModel correctly                                           00:42 +399 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomExtensions should convert all RoomStatus values correctly                                              00:42 +400 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomExtensions should convert all RoomStatus values correctly                                              00:42 +400 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomExtensions should maintain data integrity through round-trip conversion                                00:42 +401 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomExtensions should maintain data integrity through round-trip conversion                                00:43 +401 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/models/room_model_test.dart: RoomExtensions should maintain data integrity through round-trip conversion                                00:43 +401 -56: loading /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart                                                                                     00:43 +401 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: (setUpAll)                                                                                 00:43 +401 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: createRoom should return Room when datasource call is successful                           00:43 +402 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: createRoom should return Room when datasource call is successful                           00:43 +402 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: createRoom should throw exception when datasource throws exception                         00:43 +403 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: createRoom should throw exception when datasource throws exception                         00:43 +403 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: joinRoom should return updated Room when join is successful                                00:43 +404 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: joinRoom should return updated Room when join is successful                                00:43 +404 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: joinRoom should return null when join fails                                                00:43 +405 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: joinRoom should return null when join fails                                                00:43 +405 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: watchRoom should return stream of room updates                                             00:43 +406 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: watchRoom should return stream of room updates                                             00:43 +406 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: watchRoomEvents should return stream of room events                                        00:43 +407 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: watchRoomEvents should return stream of room events                                        00:43 +407 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: startGame should update room status to inGame                                              00:43 +408 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: startGame should update room status to inGame                                              00:43 +408 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: getAvailableRooms should return list of available rooms                                    00:43 +409 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: getAvailableRooms should return list of available rooms                                    00:43 +409 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: (tearDownAll)                                                                              00:44 +409 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/data/repositories/room_repository_impl_test.dart: (tearDownAll)                                                                              00:44 +409 -56: loading /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart                                                                                         00:44 +409 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define createRoom method                                       00:44 +410 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define createRoom method                                       00:44 +410 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define getRoom method                                          00:44 +411 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define getRoom method                                          00:44 +411 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define updateRoom method                                       00:44 +412 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define updateRoom method                                       00:44 +412 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define joinRoom method                                         00:44 +413 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define joinRoom method                                         00:44 +413 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define leaveRoom method                                        00:44 +414 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define leaveRoom method                                        00:44 +414 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define watchRoom method                                        00:44 +415 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define watchRoom method                                        00:44 +415 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define watchRoomEvents method                                  00:44 +416 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define watchRoomEvents method                                  00:44 +416 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define sendEvent method                                        00:44 +417 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define sendEvent method                                        00:44 +417 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define getAvailableRooms method                                00:44 +418 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define getAvailableRooms method                                00:44 +418 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define createGameState method                                  00:44 +419 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define createGameState method                                  00:44 +419 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define updateGameState method                                  00:44 +420 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/datasources/room_datasource_test.dart: RoomDatasource Interface should define updateGameState method                                  00:44 +420 -56: loading /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_event_test.dart                                                                                                 00:44 +420 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_event_test.dart: RoomEvent Entity should create playerJoined event                                                      00:44 +421 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_event_test.dart: RoomEvent Entity should create playerJoined event                                                      00:44 +421 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_event_test.dart: RoomEvent Entity should create playerLeft event                                                        00:44 +422 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_event_test.dart: RoomEvent Entity should create playerLeft event                                                        00:44 +422 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_event_test.dart: RoomEvent Entity should create gameStarted event with initial state                                    00:44 +423 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_event_test.dart: RoomEvent Entity should create gameStarted event with initial state                                    00:44 +423 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_event_test.dart: RoomEvent Entity should create playerAction event with data                                            00:44 +424 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_event_test.dart: RoomEvent Entity should create playerAction event with data                                            00:44 +424 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_event_test.dart: RoomEvent Entity should serialize to/from JSON                                                         00:44 +425 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_event_test.dart: RoomEvent Entity should serialize to/from JSON                                                         00:44 +425 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_event_test.dart: RoomEvent Entity should handle all PlayerActionType values                                             00:44 +426 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_event_test.dart: RoomEvent Entity should handle all PlayerActionType values                                             00:45 +426 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_event_test.dart: RoomEvent Entity should handle all PlayerActionType values                                             00:45 +426 -56: loading /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_test.dart                                                                                                       00:45 +426 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_test.dart: Room Entity should create a valid room with waiting status                                                   00:45 +427 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_test.dart: Room Entity should create a valid room with waiting status                                                   00:45 +427 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_test.dart: Room Entity should add player to room                                                                        00:45 +428 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_test.dart: Room Entity should add player to room                                                                        00:45 +428 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_test.dart: Room Entity should change status to inGame when game starts                                                  00:45 +429 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_test.dart: Room Entity should change status to inGame when game starts                                                  00:45 +429 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_test.dart: Room Entity should support value equality                                                                    00:45 +430 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_test.dart: Room Entity should support value equality                                                                    00:45 +430 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_test.dart: Room Entity should serialize to/from JSON                                                                    00:45 +431 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/entities/room_test.dart: Room Entity should serialize to/from JSON                                                                    00:45 +431 -56: loading /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart                                                                                        00:45 +431 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: (setUpAll)                                                                                    00:45 +431 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define createRoom method                                      00:45 +432 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define createRoom method                                      00:45 +432 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define joinRoom method                                        00:45 +433 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define joinRoom method                                        00:45 +433 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should handle null return from joinRoom                              00:45 +434 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should handle null return from joinRoom                              00:45 +434 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define leaveRoom method                                       00:45 +435 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define leaveRoom method                                       00:45 +435 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define getRoom method                                         00:45 +436 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define getRoom method                                         00:45 +436 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should handle null return from getRoom                               00:45 +437 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should handle null return from getRoom                               00:45 +437 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define watchRoom method                                       00:45 +438 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define watchRoom method                                       00:45 +438 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define sendEvent method                                       00:45 +439 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define sendEvent method                                       00:45 +439 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define watchRoomEvents method                                 00:45 +440 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define watchRoomEvents method                                 00:45 +440 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define getAvailableRooms method                               00:45 +441 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define getAvailableRooms method                               00:45 +441 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define startGame method                                       00:45 +442 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define startGame method                                       00:45 +442 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define updateRoomStatus method                                00:45 +443 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should define updateRoomStatus method                                00:45 +443 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should handle all RoomStatus values                                  00:45 +444 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should handle all RoomStatus values                                  00:45 +444 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should handle room full scenario                                     00:45 +445 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: RoomRepository interface should handle room full scenario                                     00:46 +445 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: (tearDownAll)                                                                                 00:46 +445 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/repositories/room_repository_test.dart: (tearDownAll)                                                                                 00:46 +445 -56: loading /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/create_room_use_case_test.dart                                                                                      00:46 +445 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/create_room_use_case_test.dart: CreateRoomUseCase should create room with valid parameters                                  00:46 +446 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/create_room_use_case_test.dart: CreateRoomUseCase should create room with valid parameters                                  00:46 +446 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/create_room_use_case_test.dart: CreateRoomUseCase should throw error when maxPlayers is less than 2                         00:46 +447 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/create_room_use_case_test.dart: CreateRoomUseCase should throw error when maxPlayers is less than 2                         00:46 +447 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/create_room_use_case_test.dart: CreateRoomUseCase should throw error when maxPlayers is more than 8                         00:46 +448 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/create_room_use_case_test.dart: CreateRoomUseCase should throw error when maxPlayers is more than 8                         00:47 +448 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/create_room_use_case_test.dart: CreateRoomUseCase should throw error when maxPlayers is more than 8                         00:47 +448 -56: loading /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/join_room_use_case_test.dart                                                                                        00:47 +448 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/join_room_use_case_test.dart: JoinRoomUseCase should join room successfully when room is available                          00:47 +449 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/join_room_use_case_test.dart: JoinRoomUseCase should join room successfully when room is available                          00:47 +449 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/join_room_use_case_test.dart: JoinRoomUseCase should throw exception when room not found                                    00:47 +450 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/join_room_use_case_test.dart: JoinRoomUseCase should throw exception when room not found                                    00:47 +450 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/join_room_use_case_test.dart: JoinRoomUseCase should throw exception when room is not waiting                               00:47 +451 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/join_room_use_case_test.dart: JoinRoomUseCase should throw exception when room is not waiting                               00:47 +451 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/join_room_use_case_test.dart: JoinRoomUseCase should throw exception when room is full                                      00:47 +452 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/join_room_use_case_test.dart: JoinRoomUseCase should throw exception when room is full                                      00:47 +452 -56: loading /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart                                                                                  00:47 +452 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart: (setUpAll)                                                                              00:47 +452 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart: SyncGameStateUseCase should sync game state successfully                                00:47 +453 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart: SyncGameStateUseCase should sync game state successfully                                00:47 +453 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart: SyncGameStateUseCase should send player action successfully                             00:47 +454 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart: SyncGameStateUseCase should send player action successfully                             00:47 +454 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart: SyncGameStateUseCase should watch game events                                           00:47 +455 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart: SyncGameStateUseCase should watch game events                                           00:47 +455 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart: (tearDownAll)                                                                           00:48 +455 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/domain/use_cases/sync_game_state_use_case_test.dart: (tearDownAll)                                                                           00:48 +455 -56: loading /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/multiplayer_game_notifier_test.dart                                                                           00:48 +455 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/multiplayer_game_notifier_test.dart: MultiplayerGameNotifier should listen to room events on build                    00:48 +456 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/multiplayer_game_notifier_test.dart: MultiplayerGameNotifier should listen to room events on build                    00:48 +456 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/multiplayer_game_notifier_test.dart: MultiplayerGameNotifier should receive gameStarted event                         00:48 +457 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/multiplayer_game_notifier_test.dart: MultiplayerGameNotifier should receive gameStarted event                         00:48 +457 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/multiplayer_game_notifier_test.dart: MultiplayerGameNotifier should receive gameStateUpdated event                    00:48 +458 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/multiplayer_game_notifier_test.dart: MultiplayerGameNotifier should receive gameStateUpdated event                    00:48 +458 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/multiplayer_game_notifier_test.dart: MultiplayerGameNotifier should send player action through sync use case          00:48 +459 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/multiplayer_game_notifier_test.dart: MultiplayerGameNotifier should send player action through sync use case          00:48 +459 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/multiplayer_game_notifier_test.dart: MultiplayerGameNotifier should handle player action events                       00:48 +460 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/multiplayer_game_notifier_test.dart: MultiplayerGameNotifier should handle player action events                       00:49 +460 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/multiplayer_game_notifier_test.dart: MultiplayerGameNotifier should handle player action events                       00:49 +460 -56: loading /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart                                                                                      00:49 +460 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: supabaseRoomDatasourceProvider should provide SupabaseRoomDatasource instance               00:49 +461 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: supabaseRoomDatasourceProvider should provide SupabaseRoomDatasource instance               00:49 +461 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: roomDatasourceProvider should provide RoomDatasource instance                               00:49 +462 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: roomDatasourceProvider should provide RoomDatasource instance                               00:49 +462 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: roomRepositoryProvider should provide RoomRepository instance                               00:49 +463 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: roomRepositoryProvider should provide RoomRepository instance                               00:49 +463 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: createRoomUseCaseProvider should provide CreateRoomUseCase instance                         00:49 +464 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: createRoomUseCaseProvider should provide CreateRoomUseCase instance                         00:49 +464 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: createRoomUseCaseProvider should create room using use case                                 00:49 +465 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: createRoomUseCaseProvider should create room using use case                                 00:49 +465 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: joinRoomUseCaseProvider should provide JoinRoomUseCase instance                             00:49 +466 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: joinRoomUseCaseProvider should provide JoinRoomUseCase instance                             00:49 +466 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: syncGameStateUseCaseProvider should provide SyncGameStateUseCase instance                   00:49 +467 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: syncGameStateUseCaseProvider should provide SyncGameStateUseCase instance                   00:49 +467 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: currentRoomProvider should watch room stream                                                00:49 +468 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: currentRoomProvider should watch room stream                                                00:49 +468 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: currentRoomProvider should handle different room IDs                                        00:49 +469 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: currentRoomProvider should handle different room IDs                                        00:49 +469 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: roomEventsProvider should watch room events stream                                          00:49 +470 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: roomEventsProvider should watch room events stream                                          00:49 +470 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: availableRoomsProvider should fetch available rooms                                         00:49 +471 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: availableRoomsProvider should fetch available rooms                                         00:49 +471 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: availableRoomsProvider should handle empty room list                                        00:49 +472 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: availableRoomsProvider should handle empty room list                                        00:49 +472 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: currentRoomIdProvider should have null initial value                                        00:49 +473 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: currentRoomIdProvider should have null initial value                                        00:49 +473 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: currentRoomIdProvider should be overridable                                                 00:49 +474 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/providers/room_providers_test.dart: currentRoomIdProvider should be overridable                                                 00:49 +474 -56: loading /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/create_room_screen_test.dart                                                                                    00:49 +474 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/create_room_screen_test.dart: CreateRoomScreen should display initial UI elements                                       00:50 +474 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/create_room_screen_test.dart: CreateRoomScreen should display initial UI elements                                       00:50 +475 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/create_room_screen_test.dart: CreateRoomScreen should display initial UI elements                                       00:50 +475 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/create_room_screen_test.dart: CreateRoomScreen should allow increasing player count                                     00:50 +476 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should display app bar                                                       00:50 +477 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should display app bar                                                       00:50 +478 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should display app bar                                                       00:50 +479 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should display app bar                                                       00:51 +479 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should display app bar                                                       00:51 +480 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should display app bar                                                       00:51 +481 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should display app bar                                                       00:51 +482 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/create_room_screen_test.dart: CreateRoomScreen should show error when user not logged in                                00:51 +483 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/create_room_screen_test.dart: CreateRoomScreen should show error when user not logged in                                00:51 +484 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:51 +485 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:51 +486 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:51 +487 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:51 +488 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:51 +489 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:51 +490 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:51 +491 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:51 +492 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:51 +493 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:52 +493 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:52 +494 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:52 +495 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:52 +496 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:52 +497 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:52 +498 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:52 +499 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:52 +500 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:52 +501 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display app bar with correct title                                  00:52 +502 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should show loading state during join                                        00:52 +503 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should show loading state                                                  00:52 +504 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should show error when user not logged in                                    00:52 +505 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should show error state                                                    00:52 +506 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should show error when join fails                                            00:52 +507 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display room information correctly                                  00:52 +508 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should handle null result from join room                                     00:52 +509 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display players list correctly                                      00:52 +510 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should display time formatting correctly                                     00:52 +511 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should show start button for creator when can start                        00:52 +512 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should show start button for creator when can start                        00:52 +513 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should support pull to refresh                                               00:52 +514 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should disable start button when not enough players                        00:52 +515 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should apply correct styling                                                 00:53 +515 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/join_room_screen_test.dart: JoinRoomScreen should apply correct styling                                                 00:53 +516 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should show waiting message for non-creator                                00:53 +517 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should show waiting message for non-creator                                00:53 +517 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should start game when button pressed                                      00:53 +518 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should start game when button pressed                                      00:53 +518 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should leave room when back button pressed                                 00:53 +519 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should leave room when back button pressed                                 00:53 +519 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should handle back button without user ID                                  00:53 +520 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should handle back button without user ID                                  00:53 +520 -56: /mnt/d/dev/Ojyx/test/features/multiplayer/presentation/screens/room_lobby_screen_test.dart: RoomLobbyScreen should display correct status colors and text                              00:53 +521 -56: /mnt/d/dev/Ojyx/test/widget_test.dart: App smoke test                                                                                                                                  00:53 +522 -56: /mnt/d/dev/Ojyx/test/widget_test.dart: App smoke test                                                                                                                                  00:53 +523 -56: /mnt/d/dev/Ojyx/test/widget_test.dart: App smoke test                                                                                                                                  00:53 +524 -56: /mnt/d/dev/Ojyx/test/widget_test.dart: App smoke test                                                                                                                                  00:53 +525 -56: /mnt/d/dev/Ojyx/test/widget_test.dart: App smoke test                                                                                                                                  00:53 +526 -56: /mnt/d/dev/Ojyx/test/widget_test.dart: App smoke test                                                                                                                                  00:53 +527 -56: /mnt/d/dev/Ojyx/test/widget_test.dart: App smoke test                                                                                                                                  00:54 +527 -56: /mnt/d/dev/Ojyx/test/widget_test.dart: App smoke test                                                                                                                                  00:54 +528 -56: /mnt/d/dev/Ojyx/test/widget_test.dart: App smoke test                                                                                                                                  00:54 +528 -56: Some tests failed.                                                                                                                                                                     
